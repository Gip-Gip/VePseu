------- FILE main.asm LEVEL 1 PASS 2
      1  10000 ????						; VePseu's main file
      2  10000 ????
      3  10000 ????				       processor	6502
      4  10000 ????
------- FILE include/vepseu.h LEVEL 2 PASS 2
      0  10000 ????				       INCLUDE	"include/vepseu.h"
      1  10000 ????						; VePseu's header file
      2  10000 ????
      3 U028a ????				      SEG.U	addresses
      4 U028a ????
------- FILE include/walrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/walrend.h"
      1 U028a ????				      MAC	y_pos_adv
      2 U028a ????
      3 U028a ????				      TYA
      4 U028a ????				      CLC
      5 U028a ????				      ADC	yGain
      6 U028a ????				      SEC
      7 U028a ????				      SBC	yLoss
      8 U028a ????				      TAY
      9 U028a ????
     10 U028a ????				      ENDM		; 14 cycles
     11 U028a ????
     12 U028a ????				      MAC	x_pos_gan
     13 U028a ????
     14 U028a ????				      TYA
     15 U028a ????				      CLC
     16 U028a ????				      ADC	xGain
     17 U028a ????				      SEC
     18 U028a ????				      SBC	xLoss
     19 U028a ????				      TAY
     20 U028a ????
     21 U028a ????				      ENDM		; 14 cycles
     22 U028a ????
     23 U028a ????				      MAC	x_pos_los
     24 U028a ????
     25 U028a ????				      TYA
     26 U028a ????				      CLC
     27 U028a ????				      ADC	xLoss
     28 U028a ????				      SEC
     29 U028a ????				      SBC	xGain
     30 U028a ????				      TAY
     31 U028a ????
     32 U028a ????				      ENDM		; 14 cycles
------- FILE include/vepseu.h
------- FILE include/scrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/scrend.h"
      1 U028a ????						; Argument 1 is wall1X
      2 U028a ????				      MAC	mrgwll
      3 U028a ????				      LDA	{1},X
      4 U028a ????				      DEX
      5 U028a ????				      ORA	{1},X
      6 U028a ????				      INX
      7 U028a ????				      STA	{1},X
      8 U028a ????				      ENDM		; 17 cycles
      9 U028a ????
     10 U028a ????						; Argument 1 is shadow1X
     11 U028a ????				      MAC	mkshad
     12 U028a ????				      LSR
     13 U028a ????				      DEX
     14 U028a ????				      ORA	{1},X
     15 U028a ????				      INX
     16 U028a ????				      ORA	{1},X
     17 U028a ????				      STA	{1},X
     18 U028a ????				      ENDM		; 21 cycles
     19 U028a ????
     20 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     21 U028a ????				      MAC	ovlwll
     22 U028a ????				      LDA	{1},X
     23 U028a ????				      DEX
     24 U028a ????				      ORA	{2},X
     25 U028a ????				      EOR	{2},X
     26 U028a ????				      INX
     27 U028a ????				      STA	{1},X
     28 U028a ????				      ENDM		; 22 cycles
     29 U028a ????
     30 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     31 U028a ????				      MAC	ovlshd
     32 U028a ????				      LDA	{2},X
     33 U028a ????				      ORA	{1},X
     34 U028a ????				      EOR	{1},X
     35 U028a ????				      STA	{2},X
     36 U028a ????				      ENDM		; 20 cycles
------- FILE include/vepseu.h
------- FILE include/tia_addr.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/tia_addr.h"
      1 U028a ????						; Write only addresses
      2 U028a ????
      3 U0000					      ORG	$0000
      4 U0000
      5 U0000		       00	   VSYNC      DC	0
      6 U0001		       00	   VBLANK     DC	0
      7 U0002		       00	   WSYNC      DC	0
      8 U0003		       00	   RSYNC      DC	0
      9 U0004		       00	   NUSIZ0     DC	0
     10 U0005		       00	   NUSIZ1     DC	0
     11 U0006		       00	   COLUP0     DC	0
     12 U0007		       00	   COLUP1     DC	0
     13 U0008		       00	   COLUPF     DC	0
     14 U0009		       00	   COLUBK     DC	0
     15 U000a		       00	   CTRLPF     DC	0
     16 U000b		       00	   REFP0      DC	0
     17 U000c		       00	   REFP1      DC	0
     18 U000d		       00	   PF0	      DC	0
     19 U000e		       00	   PF1	      DC	0
     20 U000f		       00	   PF2	      DC	0
     21 U0010		       00	   RESP0      DC	0
     22 U0011		       00	   RESP1      DC	0
     23 U0012		       00	   RESM0      DC	0
     24 U0013		       00	   RESM1      DC	0
     25 U0014		       00	   RESBL      DC	0
     26 U0015		       00	   AUDC0      DC	0
     27 U0016		       00	   AUDC1      DC	0
     28 U0017		       00	   AUDF0      DC	0
     29 U0018		       00	   AUDF1      DC	0
     30 U0019		       00	   AUDV0      DC	0
     31 U001a		       00	   AUDV1      DC	0
     32 U001b		       00	   GRP0       DC	0
     33 U001c		       00	   GRP1       DC	0
     34 U001d		       00	   ENAM0      DC	0
     35 U001e		       00	   ENAM1      DC	0
     36 U001f		       00	   ENABL      DC	0
     37 U0020		       00	   HMP0       DC	0
     38 U0021		       00	   HMP1       DC	0
     39 U0022		       00	   HMM0       DC	0
     40 U0023		       00	   HMM1       DC	0
     41 U0024		       00	   HMBL       DC	0
     42 U0025		       00	   VDELP0     DC	0
     43 U0026		       00	   VDELP1     DC	0
     44 U0027		       00	   VDELBL     DC	0
     45 U0028		       00	   RESMP0     DC	0
     46 U0029		       00	   RESMP1     DC	0
     47 U002a		       00	   HMOVE      DC	0
     48 U002b		       00	   HMCLR      DC	0
     49 U002c		       00	   CXCLR      DC	0
     50 U002d
     51 U002d							; Read only addresses
     52 U002d
     53 U0030					      ORG	$0030
     54 U0030
     55 U0030		       00	   CXM0P      DC	0
     56 U0031		       00	   CXM1P      DC	0
     57 U0032		       00	   CXP0FB     DC	0
     58 U0033		       00	   CXP1FB     DC	0
     59 U0034		       00	   CXM0FB     DC	0
     60 U0035		       00	   CXM1FB     DC	0
     61 U0036		       00	   CXBLPF     DC	0
     62 U0037		       00	   CXPPMM     DC	0
     63 U0038		       00	   INPT0      DC	0
     64 U0039		       00	   INPT1      DC	0
     65 U003a		       00	   INPT2      DC	0
     66 U003b		       00	   INPT3      DC	0
     67 U003c		       00	   INPT4      DC	0
     68 U003d		       00	   INPT5      DC	0
------- FILE include/vepseu.h
------- FILE include/vars.h LEVEL 3 PASS 2
      0 U003e					      INCLUDE	"include/vars.h"
      1 U003e							; Variables
      2 U003e
      3 U0080					      ORG	$0080
      4 U0080
      5 U0080		       00 30	   DUMP       =	$30
      6 U0080
      7 U0080		       00 00 00 00*wall1      DS	5
      8 U0085		       00	   wall2a     DC	0
      9 U0086		       00	   wall2b     DC	0
     10 U0087		       00	   wall2c     DC	0
     11 U0088		       00	   wall2d     DC	0
     12 U0089		       00	   wall2e     DC	0
     13 U008a		       00	   wall3a     DC	0
     14 U008b		       00	   wall3b     DC	0
     15 U008c		       00	   wall3c     DC	0
     16 U008d		       00	   wall3d     DC	0
     17 U008e		       00	   wall3e     DC	0
     18 U008f
     19 U008f		       00	   shadow2aa  DC	0
     20 U0090		       00	   shadow2ba  DC	0
     21 U0091		       00	   shadow2ca  DC	0
     22 U0092		       00	   shadow2da  DC	0
     23 U0093		       00	   shadow2ea  DC	0
     24 U0094		       00	   shadow3aa  DC	0
     25 U0095		       00	   shadow3ba  DC	0
     26 U0096		       00	   shadow3ca  DC	0
     27 U0097		       00	   shadow3da  DC	0
     28 U0098		       00	   shadow3ea  DC	0
     29 U0099
     30 U0099		       00	   shadow1a   DC	0
     31 U009a		       00	   shadow1b   DC	0
     32 U009b		       00	   shadow1c   DC	0
     33 U009c		       00	   shadow1d   DC	0
     34 U009d		       00	   shadow1e   DC	0
     35 U009e		       00	   shadow2ab  DC	0
     36 U009f		       00	   shadow2bb  DC	0
     37 U00a0		       00	   shadow2cb  DC	0
     38 U00a1		       00	   shadow2db  DC	0
     39 U00a2		       00	   shadow2eb  DC	0
     40 U00a3		       00	   shadow3ab  DC	0
     41 U00a4		       00	   shadow3bb  DC	0
     42 U00a5		       00	   shadow3cb  DC	0
     43 U00a6		       00	   shadow3db  DC	0
     44 U00a7		       00	   shadow3eb  DC	0
     45 U00a8
     46 U00a8		       00	   shift      DC	0
     47 U00a9		       00	   playerPos  DC	0
     48 U00aa		       00	   mapWidth   DC	0
     49 U00ab		       00	   xGain      DC	0
     50 U00ac		       00	   xLoss      DC	0
     51 U00ad		       00	   yGain      DC	0
     52 U00ae		       00	   yLoss      DC	0
     53 U00af		       00	   fordPressed DC	0
     54 U00b0		       00	   backPressed DC	0
     55 U00b1		       00	   leftPressed DC	0
     56 U00b2		       00	   rigtPressed DC	0
     57 U00b3		       00	   wallColour DC	0
     58 U00b4		       00	   shadowColour DC	0
     59 U00b5		       00	   horzPos_mA DC	0
     60 U00b6		       00	   horzPos_mB DC	0
     61 U00b7		       00	   horzPos_plyr DC	0
     62 U00b8		       00	   drawingPlyr DC	0
     63 U00b9		       00	   direction  DC	0
     64 U00ba		       00 00	   miniMapPtr DC.W	0
     65 U00bc		       00 00	   mapPtr     DC.W	0
     66 U00be		       00	   foo	      DC	0
------- FILE include/vepseu.h
------- FILE include/pia_addr.h LEVEL 3 PASS 2
      0 U00bf					      INCLUDE	"include/pia_addr.h"
      1 U00bf							; PIA addresses
      2 U00bf
      3 U0280					      ORG	$0280
      4 U0280
      5 U0280		       00	   SWCHA      DC	0
      6 U0281		       00	   SWACNT     DC	0
      7 U0282		       00	   SWCHB      DC	0
      8 U0283		       00	   SWBCNT     DC	0
      9 U0284		       00	   INTIM      DC	0
     10 U0285		       00	   INSTAT     DC	0
     11 U0286		       00	   TIM1T      DC	0
     12 U0287		       00	   TIM8T      DC	0
     13 U0288		       00	   TIM64T     DC	0
     14 U0289		       00	   T1024T     DC	0
------- FILE include/vepseu.h
------- FILE include/defs.h LEVEL 3 PASS 2
      0 U028a					      INCLUDE	"include/defs.h"
      1 U028a					      MAC	ina
      2 U028a					      CLC
      3 U028a					      ADC	#1
      4 U028a					      ENDM
      5 U028a
      6 U028a					      MAC	dea
      7 U028a					      SEC
      8 U028a					      SBC	#1
      9 U028a					      ENDM
     10 U028a
     11 U028a					      MAC	delay
     12 U028a					      REPEAT	{1}/2 - {1}%2
     13 U028a					      NOP
     14 U028a					      REPEND
     15 U028a
     16 U028a					      REPEAT	{1}%2
     17 U028a					      STA	DUMP
     18 U028a					      REPEND
     19 U028a					      ENDM
     20 U028a
     21 U028a		       00 00	   NULL       =	0	; The value of NULL
     22 U028a		       00 01	   ONE	      =	1	; The value of one
     23 U028a
     24 U028a		       00 03	   PIXH       =	3	; The height of each pixel, in scanlines (x2)
     25 U028a
     26 U028a		       00 00	   HADJ_A     =	$00	; The horizontal adjustment of each minimap sprite
     27 U028a		       00 10	   HADJ_B     =	$10
     28 U028a
     29 U028a		       00 86	   WCOLU      =	$86	; The initial colour of walls
     30 U028a		       00 82	   SCOLU      =	$82	; The initial colour of shadows
     31 U028a		       00 0e	   MAPCOLU    =	$0E	; The colour of the map on the minimap
     32 U028a		       00 cc	   PLYRCOLU   =	$CC	; The colour of the player on the minimap
     33 U028a
     34 U028a		       00 c2	   VBLANK_SET =	%11000010	; The value to push to the vblank register
     35 U028a		       00 02	   VSYNC_SET  =	2	; The value to push to the vsync register
     36 U028a
     37 U028a		       00 00	   INDEXINIT  =	0	; The value to initialize indexes to
     38 U028a
     39 U028a		       00 10	   UPPAD_LIMIT =	16	; The upper pad amount
     40 U028a		       00 19	   LOPAD_LIMIT =	25	; The lower pad amount
     41 U028a
     42 U028a		       00 ff	   FULLWALL   =	$FF
     43 U028a
     44 U028a		       00 80	   LAYER0_AND_0 =	%10000000	; The pattern the peripheral vision takes on
     45 U028a		       00 02	   LAYER0_AND_1 =	%00000010	; The pattern the peripheral vision takes on
     46 U028a
     47 U028a		       00 03	   LAYER1_AND_0 =	%00000011
     48 U028a		       00 03	   LAYER1_AND_1 =	%00000011
     49 U028a
     50 U028a		       00 e0	   LAYER2_AND_0 =	%11100000	; The pattern layer 2's shadow takes on
     51 U028a		       00 fc	   LAYER2_AND_1 =	%11111100	; The pattern layer 2's first wall takes on
     52 U028a		       00 03	   LAYER2_AND_2 =	%00000011	; The pattern layer 2's second wall takes on
     53 U028a		       00 04	   LAYER2_AND_3 =	%00000100	; The pattern layer 2's second wall takes on
     54 U028a		       00 0c	   LAYER2_AND_4 =	%00001100	; The pattern layer 2's second wall takes on
     55 U028a		       00 fc	   LAYER2_AND_5 =	%11111100	; The pattern layer 2's second wall takes on
     56 U028a		       00 30	   LAYER2_AND_6 =	%00110000	; The pattern layer 2's second wall takes on
     57 U028a		       00 80	   LAYER2_AND_7 =	%10000000	; The pattern layer 2's second wall takes on
     58 U028a		       00 c0	   LAYER2_AND_8 =	%11000000	; The pattern layer 2's second wall takes on
     59 U028a		       00 01	   LAYER2_AND_9 =	%00000001	; The pattern layer 2's second wall takes on
     60 U028a		       00 0f	   LAYER2_AND_A =	%00001111	; The pattern layer 2's second wall takes on
     61 U028a		       00 03	   LAYER2_AND_B =	%00000011	; The pattern layer 2's second wall takes on
     62 U028a		       00 03	   LAYER2_AND_C =	%00000011	; The pattern layer 2's second wall takes on
     63 U028a
     64 U028a		       00 02	   LAYER3_AND_0 =	%00000010	; The pattern layer 3's shadow takes on
     65 U028a		       00 03	   LAYER3_AND_1 =	%00000011	; The pattern layer 3's shadow takes on
     66 U028a		       00 03	   LAYER3_AND_2 =	%00000011	; The pattern layer 3's first wall takes on
     67 U028a		       00 0f	   LAYER3_AND_3 =	%00001111	; The pattern layer 3's second wall takes on
     68 U028a		       00 08	   LAYER3_AND_4 =	%00001000	; The pattern layer 3's third wall takes on
     69 U028a		       00 0c	   LAYER3_AND_5 =	%00001100	; The pattern layer 3's third wall takes on
     70 U028a		       00 f0	   LAYER3_AND_6 =	%11110000	; The pattern layer 3's third wall takes on
     71 U028a		       00 c0	   LAYER3_AND_7 =	%11000000	; The pattern layer 3's third wall takes on
     72 U028a		       00 20	   LAYER3_AND_8 =	%00100000	; The pattern layer 3's third wall takes on
     73 U028a		       00 30	   LAYER3_AND_9 =	%00110000	; The pattern layer 3's third wall takes on
     74 U028a		       00 30	   LAYER3_AND_A =	%00110000	; The pattern layer 3's third wall takes on
     75 U028a		       00 f0	   LAYER3_AND_B =	%11110000	; The pattern layer 3's third wall takes on
     76 U028a		       00 0f	   LAYER3_AND_C =	%00001111	; The pattern layer 3's third wall takes on
     77 U028a		       00 03	   LAYER3_AND_D =	%00000011	; The pattern layer 3's third wall takes on
     78 U028a		       00 10	   LAYER3_AND_E =	%00010000	; The pattern layer 3's third wall takes on
     79 U028a		       00 30	   LAYER3_AND_F =	%00110000	; The pattern layer 3's third wall takes on
     80 U028a		       00 fc	   LAYER3_AND_G =	%11111100	; The pattern layer 3's third wall takes on
     81 U028a		       00 02	   LAYER3_AND_H =	%00000010	; The pattern layer 3's third wall takes on
     82 U028a		       00 03	   LAYER3_AND_I =	%00000011	; The pattern layer 3's third wall takes on
     83 U028a		       00 80	   LAYER3_AND_J =	%10000000	; The pattern layer 3's third wall takes on
     84 U028a		       00 c0	   LAYER3_AND_K =	%11000000	; The pattern layer 3's third wall takes on
     85 U028a
     86 U028a		       00 10	   FFORD      =	%00010000	; The bit set when the joystick is in the forward position
     87 U028a		       00 20	   FBACK      =	%00100000	; The bit set when the joystick is in the backward position
     88 U028a		       00 80	   FLEFT      =	%10000000	; The bit set when the joystick is in the left position
     89 U028a		       00 40	   FRIGT      =	%01000000	; The bit set when the joystick is in the right position
     90 U028a		       00 80	   ITRIG      =	%10000000	; The bit set when the trigger is set
     91 U028a
     92 U028a		       00 00	   cleanStart =	0	; The value to initialize X to in clearLoop
     93 U028a		       00 00	   cleanEnd   =	0	; The value of X to stop the loop at in clearLoop
     94 U028a
     95 U028a		       00 ff	   stack      =	$FF	; The address of the stack
     96 U028a
     97 U028a		       00 0f	   CWAITCNT   =	#15	; The amount of frames to wait before input is repeated
     98 U028a
     99 U028a		       00 00	   DNORTH     =	0	; The possible directions
    100 U028a		       00 02	   DSOUTH     =	2
    101 U028a		       00 01	   DWEST      =	1
    102 U028a		       00 03	   DEAST      =	3
------- FILE include/vepseu.h
     11 U028a
     12 U028a
------- FILE main.asm
      6 U028a
      7  10000 ????				       SEG
      8  10000 ????
      9  f000					      ORG	$F000
     10  f000
------- FILE andtable.asm LEVEL 2 PASS 2
      0  f000					      INCLUDE	"andtable.asm"
      1  f000							; The AND-tables for the shadows
      2  f000
      3  f000				   and_1a
      4  f000		       80		      DC	%10000000
      5  f001		       c0		      DC	%11000000
      6  f002		       e0		      DC	%11100000
      7  f003		       f0		      DC	%11110000
      8  f004		       f8		      DC	%11111000
      9  f005		       fc		      DC	%11111100
     10  f006		       fe		      DC	%11111110
     11  f007		       ff		      DC	%11111111
     12  f008		       ff		      DC	%11111111
     13  f009		       ff		      DC	%11111111
     14  f00a
     15  f00a				   and_1b
     16  f00a		       00		      DC	%00000000
     17  f00b		       00		      DC	%00000000
     18  f00c		       00		      DC	%00000000
     19  f00d		       00		      DC	%00000000
     20  f00e		       00		      DC	%00000000
     21  f00f		       00		      DC	%00000000
     22  f010		       00		      DC	%00000000
     23  f011		       00		      DC	%00000000
     24  f012		       01		      DC	%00000001
     25  f013		       03		      DC	%00000011
     26  f014
     27  f014				   and_1c
     28  f014		       00		      DC	%00000000
     29  f015		       00		      DC	%00000000
     30  f016		       01		      DC	%00000001
     31  f017		       03		      DC	%00000011
     32  f018		       07		      DC	%00000111
     33  f019		       0f		      DC	%00001111
     34  f01a		       1f		      DC	%00011111
     35  f01b		       3f		      DC	%00111111
     36  f01c		       7f		      DC	%01111111
     37  f01d		       ff		      DC	%11111111
     38  f01e
     39  f01e				   and_1d
     40  f01e		       02		      DC	%00000010
     41  f01f		       03		      DC	%00000011
     42  f020		       03		      DC	%00000011
     43  f021		       03		      DC	%00000011
     44  f022		       03		      DC	%00000011
     45  f023		       03		      DC	%00000011
     46  f024		       03		      DC	%00000011
     47  f025		       03		      DC	%00000011
     48  f026		       03		      DC	%00000011
     49  f027		       03		      DC	%00000011
------- FILE main.asm
------- FILE map.asm LEVEL 2 PASS 2
      0  f028					      INCLUDE	"map.asm"
      1  f028							; VePseu's maps
      2  f028
      3  f028		       00 d1	   MAP_01_POS =	$D1
      4  f028		       00 10	   MAP_01_WDTH =	$10
      5  f028		       01 00	   MAP_01_SZ  =	$100
      6  f028
      7  f028				   map_01
      8  f028		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
      9  f038		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     10  f048		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     11  f058		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     12  f068		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     13  f078		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     14  f088		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     15  f098		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     16  f0a8		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     17  f0b8		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     18  f0c8		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     19  f0d8		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     20  f0e8		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     21  f0f8		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     22  f108		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     23  f118		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
     24  f128
     25  f128				   miniMap_01
     26  f128		       e0 07		      DC.W	%0000011111100000
     27  f12a		       bf fd		      DC.W	%1111110110111111
     28  f12c		       80 01		      DC.W	%0000000110000000
     29  f12e		       80 01		      DC.W	%0000000110000000
     30  f130		       be bd		      DC.W	%1011110110111110
     31  f132		       a2 a5		      DC.W	%1010010110100010
     32  f134		       a2 a7		      DC.W	%1010011110100010
     33  f136		       e2 a7		      DC.W	%1010011111100010
     34  f138		       e2 a5		      DC.W	%1010010111100010
     35  f13a		       be bd		      DC.W	%1011110110111110
     36  f13c		       80 81		      DC.W	%1000000110000000
     37  f13e		       80 81		      DC.W	%1000000110000000
     38  f140		       bf fd		      DC.W	%1111110110111111
     39  f142		       a0 05		      DC.W	%0000010110100000
     40  f144		       a0 05		      DC.W	%0000010110100000
     41  f146		       e0 07		      DC.W	%0000011111100000
     42  f148
     43  f148
     44  f148				   map_01_load
     45  f148		       a9 d1		      LDA	#MAP_01_POS
     46  f14a		       85 a9		      STA	playerPos
     47  f14c		       a9 10		      LDA	#MAP_01_WDTH
     48  f14e		       85 aa		      STA	mapWidth
     49  f150
     50  f150		       a9 28		      LDA	#<map_01
     51  f152		       85 bc		      STA	mapPtr
     52  f154		       a9 f0		      LDA	#>map_01
     53  f156		       85 bd		      STA	mapPtr + 1
     54  f158
     55  f158		       a9 28		      LDA	#<miniMap_01
     56  f15a		       85 ba		      STA	miniMapPtr
     57  f15c		       a9 f1		      LDA	#>miniMap_01
     58  f15e		       85 bb		      STA	miniMapPtr + 1
     59  f160		       60		      RTS
------- FILE main.asm
     13  f161
     14  f800					      ORG	$F800
     15  f800
     16  f800				   start
     17  f800
     18  f800							; Initialize everything
     19  f800
------- FILE init.asm LEVEL 2 PASS 2
      0  f800					      INCLUDE	"init.asm"
      1  f800							; VePseu's init file
      2  f800
      3  f800		       a2 ff		      LDX	#stack
      4  f802		       9a		      TXS
      5  f803
      6  f803		       a9 00		      LDA	#NULL
      7  f805
      8  f805		       d8		      CLD
      9  f806		       18		      CLC
     10  f807		       58		      CLI
     11  f808		       b8		      CLV
     12  f809
     13  f809		       a2 00		      LDX	#INDEXINIT
     14  f80b
     15  f80b				   cleanLoop
     16  f80b
     17  f80b		       95 00		      STA	cleanStart,X
     18  f80d		       e8		      INX
     19  f80e
     20  f80e		       e0 00		      CPX	#cleanEnd
     21  f810		       d0 f9		      BNE	cleanLoop
     22  f812
     23  f812		       20 48 f1 	      JSR	map_01_load
     24  f815
     25  f815		       a5 aa		      LDA	mapWidth
     26  f817		       85 ae		      STA	yLoss
     27  f819		       a9 01		      LDA	#ONE
     28  f81b		       85 ab		      STA	xGain
     29  f81d		       a9 00		      LDA	#NULL
     30  f81f		       85 ad		      STA	yGain
     31  f821		       85 ac		      STA	xLoss
     32  f823
     33  f823		       a9 86		      LDA	#WCOLU
     34  f825		       85 b3		      STA	wallColour
     35  f827		       a9 82		      LDA	#SCOLU
     36  f829		       85 b4		      STA	shadowColour
------- FILE main.asm
     21  f82b
     22  f82b		       a9 02		      LDA	#VSYNC_SET
     23  f82d
     24  f82d				   screenStart
     25  f82d
     26  f82d							; Start vsync (3 scanlines)
     27  f82d		       85 00		      STA	VSYNC
     28  f82f
     29  f82f		       85 02		      STA	WSYNC
     30  f831		       85 02		      STA	WSYNC
     31  f833		       a9 00		      LDA	#NULL
     32  f835		       85 02		      STA	WSYNC
     33  f837
     34  f837		       85 00		      STA	VSYNC
     35  f839
     36  f839							; Render everything (12 scanlines)
     37  f839
------- FILE walrend.asm LEVEL 2 PASS 2
      0  f839					      INCLUDE	"walrend.asm"	; 6 scanlines
      1  f839							; VePseu's wall renderer
      2  f839
      3  f839		       a4 a9		      LDY	playerPos	; 3 cycles
      4  f83b
------- FILE r_layers/layer0.asm LEVEL 3 PASS 2
      0  f83b					      INCLUDE	"r_layers/layer0.asm"	; 86 cycles
      1  f83b							; Peripheral vision rendering (86 cycles)
      0  f83b					      X_POS_LOS		; 23 cycles
      1  f83b
      2  f83b		       98		      TYA
      3  f83c		       18		      CLC
      4  f83d		       65 ac		      ADC	xLoss
      5  f83f		       38		      SEC
      6  f840		       e5 ab		      SBC	xGain
      7  f842		       a8		      TAY
      8  f843
      3  f843		       b1 bc		      LDA	(mapPtr),Y
      4  f845		       29 80		      AND	#LAYER0_AND_0
      5  f847		       85 99		      STA	shadow1a
      6  f849
      7  f849		       98		      TYA		; Move twice the amount of a normal X_POS_GAIN
      8  f84a		       18		      CLC
      9  f84b		       65 ab		      ADC	xGain
     10  f84d		       65 ab		      ADC	xGain
     11  f84f		       38		      SEC
     12  f850		       e5 ac		      SBC	xLoss
     13  f852		       e5 ac		      SBC	xLoss
     14  f854		       a8		      TAY
     15  f855
     16  f855		       b1 bc		      LDA	(mapPtr),Y
     17  f857		       29 02		      AND	#LAYER0_AND_1
     18  f859		       85 9d		      STA	shadow1e
------- FILE walrend.asm
      6  f85b
------- FILE r_layers/layer1.asm LEVEL 3 PASS 2
      0  f85b					      INCLUDE	"r_layers/layer1.asm"	; 86 cycles
      1  f85b							; First layer of rendering (86 cycles)
      2  f85b
      0  f85b					      Y_POS_ADV		; 14 cycles
      1  f85b
      2  f85b		       98		      TYA
      3  f85c		       18		      CLC
      4  f85d		       65 ad		      ADC	yGain
      5  f85f		       38		      SEC
      6  f860		       e5 ae		      SBC	yLoss
      7  f862		       a8		      TAY
      8  f863
      4  f863
      5  f863		       b1 bc		      LDA	(mapPtr),Y
      6  f865		       85 9c		      STA	shadow1d
      7  f867		       05 9d		      ORA	shadow1e
      8  f869		       25 03		      AND	LAYER1_AND_1
      9  f86b		       85 9d		      STA	shadow1e
     10  f86d
      0  f86d					      X_POS_LOS		; 26 cycles
      1  f86d
      2  f86d		       98		      TYA
      3  f86e		       18		      CLC
      4  f86f		       65 ac		      ADC	xLoss
      5  f871		       38		      SEC
      6  f872		       e5 ab		      SBC	xGain
      7  f874		       a8		      TAY
      8  f875
     12  f875		       b1 bc		      LDA	(mapPtr),Y
     13  f877		       85 80		      STA	wall1
     14  f879
      0  f879					      X_POS_LOS		; 23 cycles
      1  f879
      2  f879		       98		      TYA
      3  f87a		       18		      CLC
      4  f87b		       65 ac		      ADC	xLoss
      5  f87d		       38		      SEC
      6  f87e		       e5 ab		      SBC	xGain
      7  f880		       a8		      TAY
      8  f881
     16  f881		       b1 bc		      LDA	(mapPtr),Y
     17  f883		       aa		      TAX
     18  f884		       05 99		      ORA	shadow1a
     19  f886		       85 99		      STA	shadow1a
     20  f888		       8a		      TXA
     21  f889		       25 03		      AND	LAYER1_AND_0
     22  f88b		       85 9a		      STA	shadow1b
------- FILE walrend.asm
      8  f88d
------- FILE r_layers/layer2.asm LEVEL 3 PASS 2
      0  f88d					      INCLUDE	"r_layers/layer2.asm"	; 148 cycles
      1  f88d							; Second Layer (148 cycles)
      2  f88d
      0  f88d					      Y_POS_ADV		; 14 cycles
      1  f88d
      2  f88d		       98		      TYA
      3  f88e		       18		      CLC
      4  f88f		       65 ad		      ADC	yGain
      5  f891		       38		      SEC
      6  f892		       e5 ae		      SBC	yLoss
      7  f894		       a8		      TAY
      8  f895
      4  f895
      0  f895					      X_POS_LOS		; 25 cycles
      1  f895
      2  f895		       98		      TYA
      3  f896		       18		      CLC
      4  f897		       65 ac		      ADC	xLoss
      5  f899		       38		      SEC
      6  f89a		       e5 ab		      SBC	xGain
      7  f89c		       a8		      TAY
      8  f89d
      6  f89d		       b1 bc		      LDA	(mapPtr),Y
      7  f89f		       aa		      TAX
      8  f8a0		       29 e0		      AND	#LAYER2_AND_0
      9  f8a2		       85 8f		      STA	shadow2aa
     10  f8a4		       8a		      TXA
     11  f8a5		       29 fc		      AND	#LAYER2_AND_1
     12  f8a7		       85 9e		      STA	shadow2ab
     13  f8a9
      0  f8a9					      X_POS_GAN		; 25 cycles
      1  f8a9
      2  f8a9		       98		      TYA
      3  f8aa		       18		      CLC
      4  f8ab		       65 ab		      ADC	xGain
      5  f8ad		       38		      SEC
      6  f8ae		       e5 ac		      SBC	xLoss
      7  f8b0		       a8		      TAY
      8  f8b1
     15  f8b1		       b1 bc		      LDA	(mapPtr),Y
     16  f8b3		       aa		      TAX
     17  f8b4		       85 85		      STA	wall2a
     18  f8b6		       29 03		      AND	#LAYER2_AND_2
     19  f8b8		       85 86		      STA	wall2b
     20  f8ba		       8a		      TXA
     21  f8bb		       29 04		      AND	#LAYER2_AND_3
     22  f8bd		       85 90		      STA	shadow2ba
     23  f8bf		       8a		      TXA
     24  f8c0		       29 0c		      AND	#LAYER2_AND_4
     25  f8c2		       85 9f		      STA	shadow2bb
     26  f8c4
      0  f8c4					      X_POS_GAN		; 31 cycles
      1  f8c4
      2  f8c4		       98		      TYA
      3  f8c5		       18		      CLC
      4  f8c6		       65 ab		      ADC	xGain
      5  f8c8		       38		      SEC
      6  f8c9		       e5 ac		      SBC	xLoss
      7  f8cb		       a8		      TAY
      8  f8cc
     28  f8cc		       b1 bc		      LDA	(mapPtr),Y
     29  f8ce		       aa		      TAX
     30  f8cf		       29 fc		      AND	#LAYER2_AND_5
     31  f8d1		       05 86		      ORA	wall2b
     32  f8d3		       85 86		      STA	wall2b
     33  f8d5		       8a		      TXA
     34  f8d6		       85 87		      STA	wall2c
     35  f8d8
      0  f8d8					      X_POS_GAN		; 28 cycles
      1  f8d8
      2  f8d8		       98		      TYA
      3  f8d9		       18		      CLC
      4  f8da		       65 ab		      ADC	xGain
      5  f8dc		       38		      SEC
      6  f8dd		       e5 ac		      SBC	xLoss
      7  f8df		       a8		      TAY
      8  f8e0
     37  f8e0		       b1 bc		      LDA	(mapPtr),Y
     38  f8e2		       aa		      TAX
     39  f8e3		       85 88		      STA	wall2d
     40  f8e5		       85 89		      STA	wall2e
     41  f8e7		       29 80		      AND	#LAYER2_AND_7
     42  f8e9		       85 91		      STA	shadow2ca
     43  f8eb		       8a		      TXA
     44  f8ec		       29 c0		      AND	#LAYER2_AND_8
     45  f8ee		       85 a0		      STA	shadow2cb
     46  f8f0
      0  f8f0					      X_POS_GAN		; 25 cycles
      1  f8f0
      2  f8f0		       98		      TYA
      3  f8f1		       18		      CLC
      4  f8f2		       65 ab		      ADC	xGain
      5  f8f4		       38		      SEC
      6  f8f5		       e5 ac		      SBC	xLoss
      7  f8f7		       a8		      TAY
      8  f8f8
     48  f8f8		       b1 bc		      LDA	(mapPtr),Y
     49  f8fa		       aa		      TAX
     50  f8fb		       29 01		      AND	#LAYER2_AND_9
     51  f8fd		       85 92		      STA	shadow2da
     52  f8ff		       8a		      TXA
     53  f900		       29 0f		      AND	#LAYER2_AND_A
     54  f902		       85 a1		      STA	shadow2db
     55  f904		       8a		      TXA
     56  f905		       29 03		      AND	#LAYER2_AND_B
     57  f907		       85 93		      STA	shadow2ea
     58  f909		       8a		      TXA
     59  f90a		       29 03		      AND	#LAYER2_AND_C
     60  f90c		       85 a2		      STA	shadow2eb
------- FILE walrend.asm
     10  f90e
------- FILE r_layers/layer3.asm LEVEL 3 PASS 2
      0  f90e					      INCLUDE	"r_layers/layer3.asm"	; 182 cycles
      1  f90e							; Third layer (104 cycles)
      2  f90e
      0  f90e					      Y_POS_ADV		; 14 cycles
      1  f90e
      2  f90e		       98		      TYA
      3  f90f		       18		      CLC
      4  f910		       65 ad		      ADC	yGain
      5  f912		       38		      SEC
      6  f913		       e5 ae		      SBC	yLoss
      7  f915		       a8		      TAY
      8  f916
      4  f916
      0  f916					      X_POS_GAN		; 25
      1  f916
      2  f916		       98		      TYA
      3  f917		       18		      CLC
      4  f918		       65 ab		      ADC	xGain
      5  f91a		       38		      SEC
      6  f91b		       e5 ac		      SBC	xLoss
      7  f91d		       a8		      TAY
      8  f91e
      6  f91e		       b1 bc		      LDA	(mapPtr),Y
      7  f920		       aa		      TAX
      8  f921		       29 02		      AND	#LAYER3_AND_0
      9  f923		       85 98		      STA	shadow3ea
     10  f925		       8a		      TXA
     11  f926		       29 03		      AND	#LAYER3_AND_1
     12  f928		       85 a7		      STA	shadow3eb
     13  f92a
      0  f92a					      X_POS_LOS		; 25
      1  f92a
      2  f92a		       98		      TYA
      3  f92b		       18		      CLC
      4  f92c		       65 ac		      ADC	xLoss
      5  f92e		       38		      SEC
      6  f92f		       e5 ab		      SBC	xGain
      7  f931		       a8		      TAY
      8  f932
     15  f932		       b1 bc		      LDA	(mapPtr),Y
     16  f934		       aa		      TAX
     17  f935		       29 03		      AND	#LAYER3_AND_2
     18  f937		       85 8e		      STA	wall3e
     19  f939		       8a		      TXA
     20  f93a		       29 0f		      AND	#LAYER3_AND_3
     21  f93c		       85 8d		      STA	wall3d
     22  f93e		       8a		      TXA
     23  f93f		       29 08		      AND	#LAYER3_AND_4
     24  f941		       85 97		      STA	shadow3da
     25  f943		       8a		      TXA
     26  f944		       29 0c		      AND	#LAYER3_AND_5
     27  f946		       85 a6		      STA	shadow3db
     28  f948
      0  f948					      X_POS_LOS		; 29
      1  f948
      2  f948		       98		      TYA
      3  f949		       18		      CLC
      4  f94a		       65 ac		      ADC	xLoss
      5  f94c		       38		      SEC
      6  f94d		       e5 ab		      SBC	xGain
      7  f94f		       a8		      TAY
      8  f950
     30  f950		       b1 bc		      LDA	(mapPtr),Y
     31  f952		       aa		      TAX
     32  f953		       29 f0		      AND	#LAYER3_AND_6
     33  f955		       05 8d		      ORA	wall3d
     34  f957		       85 8d		      STA	wall3d
     35  f959		       8a		      TXA
     36  f95a		       29 c0		      AND	#LAYER3_AND_7
     37  f95c		       85 8c		      STA	wall3c
     38  f95e		       8a		      TXA
     39  f95f		       29 20		      AND	#LAYER3_AND_8
     40  f961		       85 96		      STA	shadow3ca
     41  f963		       8a		      TXA
     42  f964		       29 30		      AND	#LAYER3_AND_9
     43  f966		       85 a5		      STA	shadow3cb
     44  f968
      0  f968					      X_POS_LOS		; 31
      1  f968
      2  f968		       98		      TYA
      3  f969		       18		      CLC
      4  f96a		       65 ac		      ADC	xLoss
      5  f96c		       38		      SEC
      6  f96d		       e5 ab		      SBC	xGain
      7  f96f		       a8		      TAY
      8  f970
     46  f970		       b1 bc		      LDA	(mapPtr),Y
     47  f972		       aa		      TAX
     48  f973		       29 30		      AND	#LAYER3_AND_A
     49  f975		       05 8c		      ORA	wall3c
     50  f977		       85 8c		      STA	wall3c
     51  f979		       8a		      TXA
     52  f97a		       29 f0		      AND	#LAYER3_AND_B
     53  f97c		       85 8b		      STA	wall3b
     54  f97e
      0  f97e					      X_POS_LOS		; 29
      1  f97e
      2  f97e		       98		      TYA
      3  f97f		       18		      CLC
      4  f980		       65 ac		      ADC	xLoss
      5  f982		       38		      SEC
      6  f983		       e5 ab		      SBC	xGain
      7  f985		       a8		      TAY
      8  f986
     56  f986		       b1 bc		      LDA	(mapPtr),Y
     57  f988		       aa		      TAX
     58  f989		       29 0f		      AND	#LAYER3_AND_C
     59  f98b		       05 8b		      ORA	wall3b
     60  f98d		       85 8b		      STA	wall3b
     61  f98f		       8a		      TXA
     62  f990		       29 03		      AND	#LAYER3_AND_D
     63  f992		       85 8a		      STA	wall3a
     64  f994		       8a		      TXA
     65  f995		       29 10		      AND	#LAYER3_AND_E
     66  f997		       85 95		      STA	shadow3ba
     67  f999		       8a		      TXA
     68  f99a		       29 30		      AND	#LAYER3_AND_F
     69  f99c		       85 a4		      STA	shadow3bb
     70  f99e
      0  f99e					      X_POS_LOS		; 29
      1  f99e
      2  f99e		       98		      TYA
      3  f99f		       18		      CLC
      4  f9a0		       65 ac		      ADC	xLoss
      5  f9a2		       38		      SEC
      6  f9a3		       e5 ab		      SBC	xGain
      7  f9a5		       a8		      TAY
      8  f9a6
     72  f9a6		       b1 bc		      LDA	(mapPtr),Y
     73  f9a8		       aa		      TAX
     74  f9a9		       29 fc		      AND	#LAYER3_AND_G
     75  f9ab		       05 8a		      ORA	wall3a
     76  f9ad		       85 8a		      STA	wall3a
     77  f9af		       8a		      TXA
     78  f9b0		       29 02		      AND	#LAYER3_AND_H
     79  f9b2		       85 94		      STA	shadow3aa
     80  f9b4		       8a		      TXA
     81  f9b5		       29 03		      AND	#LAYER3_AND_I
     82  f9b7		       85 a3		      STA	shadow3ab
     83  f9b9
      0  f9b9					      X_POS_LOS		; 25
      1  f9b9
      2  f9b9		       98		      TYA
      3  f9ba		       18		      CLC
      4  f9bb		       65 ac		      ADC	xLoss
      5  f9bd		       38		      SEC
      6  f9be		       e5 ab		      SBC	xGain
      7  f9c0		       a8		      TAY
      8  f9c1
     85  f9c1		       b1 bc		      LDA	(mapPtr),Y
     86  f9c3		       aa		      TAX
     87  f9c4		       29 80		      AND	#LAYER3_AND_J
     88  f9c6		       85 94		      STA	shadow3aa
     89  f9c8		       8a		      TXA
     90  f9c9		       29 c0		      AND	#LAYER3_AND_K
     91  f9cb		       85 a3		      STA	shadow3ab
------- FILE walrend.asm
     12  f9cd
     13  f9cd		       85 02		      STA	WSYNC	; By this time 6 scanlines have passed
------- FILE main.asm
     39  f9cf
------- FILE scrend.asm LEVEL 2 PASS 2
      0  f9cf					      INCLUDE	"scrend.asm"	; 6 Scanlines
      1  f9cf							; VePseu's screen renderer
      2  f9cf
      3  f9cf							; Remove the shadows incase only 1 wall is drawn (22 cycles)
      4  f9cf		       a5 99		      LDA	shadow1a
      5  f9d1		       05 80		      ORA	wall1
      6  f9d3		       45 80		      EOR	wall1
      7  f9d5		       85 99		      STA	shadow1a
      8  f9d7
      9  f9d7		       a5 9a		      LDA	shadow1b
     10  f9d9		       05 80		      ORA	wall1
     11  f9db		       45 80		      EOR	wall1
     12  f9dd		       85 9a		      STA	shadow1b
     13  f9df
     14  f9df		       a5 9c		      LDA	shadow1d
     15  f9e1		       05 80		      ORA	wall1
     16  f9e3		       45 80		      EOR	wall1
     17  f9e5		       85 9c		      STA	shadow1d
     18  f9e7
     19  f9e7		       a5 9d		      LDA	shadow1e
     20  f9e9		       05 80		      ORA	wall1
     21  f9eb		       45 80		      EOR	wall1
     22  f9ed		       85 9d		      STA	shadow1e
     23  f9ef
     24  f9ef		       a5 80		      LDA	wall1
     25  f9f1		       85 81		      STA	wall1+1
     26  f9f3		       85 82		      STA	wall1+2
     27  f9f5		       85 83		      STA	wall1+3
     28  f9f7		       85 84		      STA	wall1+4
     29  f9f9
     30  f9f9		       a2 00		      LDX	#NULL
     31  f9fb
     32  f9fb				   scrRendLoop
     33  f9fb
     34  f9fb		       b5 85		      LDA	wall2a,X
     35  f9fd		       15 80		      ORA	wall1,X
     36  f9ff		       95 85		      STA	wall2a,X
     37  fa01
     38  fa01		       b5 8f		      LDA	shadow2aa,X
     39  fa03		       15 99		      ORA	shadow1a,X
     40  fa05		       95 8f		      STA	shadow2aa,X
     41  fa07
     42  fa07		       b5 9e		      LDA	shadow2ab,X
     43  fa09		       15 99		      ORA	shadow1a,X
     44  fa0b		       95 9e		      STA	shadow2ab,X
     45  fa0d
     46  fa0d		       b5 85		      LDA	wall2a,X
     47  fa0f		       15 99		      ORA	shadow1a,X
     48  fa11		       55 99		      EOR	shadow1a,X
     49  fa13		       95 85		      STA	wall2a,X
     50  fa15
     51  fa15		       b5 8f		      LDA	shadow2aa,X
     52  fa17		       15 85		      ORA	wall2a,X
     53  fa19		       55 85		      EOR	wall2a,X
     54  fa1b		       95 8f		      STA	shadow2aa,X
     55  fa1d
     56  fa1d		       b5 9e		      LDA	shadow2ab,X
     57  fa1f		       15 85		      ORA	wall2a,X
     58  fa21		       55 85		      EOR	wall2a,X
     59  fa23		       95 9e		      STA	shadow2ab,X
     60  fa25
     61  fa25		       e8		      INX
     62  fa26		       e0 0a		      CPX	#10
     63  fa28		       d0 d1		      BNE	scrRendLoop
------- FILE main.asm
     41  fa2a
     42  fa2a							; Pad!
     43  fa2a
     44  fa2a		       a2 00		      LDX	#INDEXINIT
     45  fa2c
     46  fa2c				   upperPad
     47  fa2c		       85 02		      STA	WSYNC
     48  fa2e
     49  fa2e		       e8		      INX
     50  fa2f		       e0 10		      CPX	#UPPAD_LIMIT
     51  fa31		       d0 f9		      BNE	upperPad
     52  fa33
     53  fa33		       85 02		      STA	WSYNC
     54  fa35
     55  fa35							; Draw everything
     56  fa35
------- FILE dispkern.asm LEVEL 2 PASS 2
      0  fa35					      INCLUDE	"dispkern.asm"	; 121 Scanlines
      1  fa35							; VePseu's display kernel
      2  fa35
      3  fa35		       4c 90 fd 	      JMP	drawStart
      4  fa38
      5  fa38							;			  FILE/SUBROUTINE NAMING SCHEME:
      6  fa38							;
      7  fa38							; dc_w1s1.asm
      8  fa38							; |   | |
      9  fa38							; |   | |- The shadow variant it draws (A or B, 1 or 2)
     10  fa38							; |   |
     11  fa38							; |   |- The wall it draws
     12  fa38							; |
     13  fa38							; |- Draw-code identifier
     14  fa38
------- FILE drawCode/dc_w1s1.asm LEVEL 3 PASS 2
      0  fa38					      INCLUDE	"drawCode/dc_w1s1.asm"
      1  fa38							; The draw code for the 1st wall and shadow
      2  fa38
      3  fa38				   dc_w1s1
      4  fa38
      5  fa38		       a2 00		      LDX	#INDEXINIT
      6  fa3a		       a0 00		      LDY	#INDEXINIT
      7  fa3c
      8  fa3c				   _dc_w1s1_loop
      9  fa3c		       85 02		      STA	WSYNC
     10  fa3e		       a5 b3		      LDA	wallColour
     11  fa40		       85 08		      STA	COLUPF
     12  fa42		       a5 80		      LDA	wall1
     13  fa44		       85 0e		      STA	PF1
     14  fa46		       85 0f		      STA	PF2
      0  fa48					      DELAY	28
      1  fa48					      REPEAT	28/2 - 28%2
      2  fa48		       ea		      NOP
      1  fa48					      REPEND
      2  fa49		       ea		      NOP
      1  fa49					      REPEND
      2  fa4a		       ea		      NOP
      1  fa4a					      REPEND
      2  fa4b		       ea		      NOP
      1  fa4b					      REPEND
      2  fa4c		       ea		      NOP
      1  fa4c					      REPEND
      2  fa4d		       ea		      NOP
      1  fa4d					      REPEND
      2  fa4e		       ea		      NOP
      1  fa4e					      REPEND
      2  fa4f		       ea		      NOP
      1  fa4f					      REPEND
      2  fa50		       ea		      NOP
      1  fa50					      REPEND
      2  fa51		       ea		      NOP
      1  fa51					      REPEND
      2  fa52		       ea		      NOP
      1  fa52					      REPEND
      2  fa53		       ea		      NOP
      1  fa53					      REPEND
      2  fa54		       ea		      NOP
      1  fa54					      REPEND
      2  fa55		       ea		      NOP
      3  fa56					      REPEND
      4  fa56
      5  fa56				  -	      REPEAT	28%2
      6  fa56				  -	      STA	DUMP
      7  fa56					      REPEND
     16  fa56		       85 0d		      STA	PF0
      0  fa58					      DELAY	3
      1  fa58				  -	      REPEAT	3/2 - 3%2
      2  fa58				  -	      NOP
      3  fa58					      REPEND
      4  fa58
      5  fa58					      REPEAT	3%2
      6  fa58		       85 30		      STA	DUMP
      7  fa5a					      REPEND
     18  fa5a		       a9 00		      LDA	#NULL
     19  fa5c		       85 0d		      STA	PF0
      0  fa5e					      DELAY	10
      1  fa5e					      REPEAT	10/2 - 10%2
      2  fa5e		       ea		      NOP
      1  fa5e					      REPEND
      2  fa5f		       ea		      NOP
      1  fa5f					      REPEND
      2  fa60		       ea		      NOP
      1  fa60					      REPEND
      2  fa61		       ea		      NOP
      1  fa61					      REPEND
      2  fa62		       ea		      NOP
      3  fa63					      REPEND
      4  fa63
      5  fa63				  -	      REPEAT	10%2
      6  fa63				  -	      STA	DUMP
      7  fa63					      REPEND
     21  fa63		       85 0f		      STA	PF2
     22  fa65
     23  fa65		       85 02		      STA	WSYNC
     24  fa67		       a5 b4		      LDA	shadowColour
     25  fa69		       85 08		      STA	COLUPF
     26  fa6b		       a5 99		      LDA	shadow1a
     27  fa6d		       39 00 f0 	      AND	and_1a,Y
     28  fa70		       85 0e		      STA	PF1
     29  fa72		       a5 9a		      LDA	shadow1b
     30  fa74		       39 0a f0 	      AND	and_1b,Y
     31  fa77		       85 0f		      STA	PF2
      0  fa79					      DELAY	9
      1  fa79					      REPEAT	9/2 - 9%2
      2  fa79		       ea		      NOP
      1  fa79					      REPEND
      2  fa7a		       ea		      NOP
      1  fa7a					      REPEND
      2  fa7b		       ea		      NOP
      3  fa7c					      REPEND
      4  fa7c
      5  fa7c					      REPEAT	9%2
      6  fa7c		       85 30		      STA	DUMP
      7  fa7e					      REPEND
     33  fa7e		       a5 9c		      LDA	shadow1d
     34  fa80		       39 14 f0 	      AND	and_1c,Y
     35  fa83		       85 0e		      STA	PF1
     36  fa85		       a5 9d		      LDA	shadow1e
     37  fa87		       39 1e f0 	      AND	and_1d,Y
     38  fa8a		       85 0f		      STA	PF2
     39  fa8c
     40  fa8c		       e8		      INX
     41  fa8d		       e0 03		      CPX	#PIXH
     42  fa8f		       d0 ab		      BNE	_dc_w1s1_loop
     43  fa91		       c8		      INY
     44  fa92
     45  fa92		       a2 00		      LDX	#NULL
     46  fa94
     47  fa94		       c0 0a		      CPY	#10
     48  fa96		       d0 a4		      BNE	_dc_w1s1_loop
     49  fa98
     50  fa98		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w1s2.asm LEVEL 3 PASS 2
      0  fa99					      INCLUDE	"drawCode/dc_w1s2.asm"
      1  fa99							; The draw code for the 1st wall and shadow
      2  fa99
      3  fa99				   dc_w1s2
      4  fa99
      5  fa99		       a2 00		      LDX	#INDEXINIT
      6  fa9b		       a0 09		      LDY	#9
      7  fa9d		       4c a8 fa 	      JMP	_dc_w1s2_start
      8  faa0
      9  faa0				   _dc_w1s2_loop
     10  faa0		       85 02		      STA	WSYNC
      0  faa2					      DELAY	12
      1  faa2					      REPEAT	12/2 - 12%2
      2  faa2		       ea		      NOP
      1  faa2					      REPEND
      2  faa3		       ea		      NOP
      1  faa3					      REPEND
      2  faa4		       ea		      NOP
      1  faa4					      REPEND
      2  faa5		       ea		      NOP
      1  faa5					      REPEND
      2  faa6		       ea		      NOP
      1  faa6					      REPEND
      2  faa7		       ea		      NOP
      3  faa8					      REPEND
      4  faa8
      5  faa8				  -	      REPEAT	12%2
      6  faa8				  -	      STA	DUMP
      7  faa8					      REPEND
     12  faa8				   _dc_w1s2_start
     13  faa8		       a5 b3		      LDA	wallColour
     14  faaa		       85 08		      STA	COLUPF
     15  faac		       a5 80		      LDA	wall1
     16  faae		       85 0e		      STA	PF1
     17  fab0		       85 0f		      STA	PF2
      0  fab2					      DELAY	16
      1  fab2					      REPEAT	16/2 - 16%2
      2  fab2		       ea		      NOP
      1  fab2					      REPEND
      2  fab3		       ea		      NOP
      1  fab3					      REPEND
      2  fab4		       ea		      NOP
      1  fab4					      REPEND
      2  fab5		       ea		      NOP
      1  fab5					      REPEND
      2  fab6		       ea		      NOP
      1  fab6					      REPEND
      2  fab7		       ea		      NOP
      1  fab7					      REPEND
      2  fab8		       ea		      NOP
      1  fab8					      REPEND
      2  fab9		       ea		      NOP
      3  faba					      REPEND
      4  faba
      5  faba				  -	      REPEAT	16%2
      6  faba				  -	      STA	DUMP
      7  faba					      REPEND
     19  faba		       85 0d		      STA	PF0
      0  fabc					      DELAY	3
      1  fabc				  -	      REPEAT	3/2 - 3%2
      2  fabc				  -	      NOP
      3  fabc					      REPEND
      4  fabc
      5  fabc					      REPEAT	3%2
      6  fabc		       85 30		      STA	DUMP
      7  fabe					      REPEND
     21  fabe		       a9 00		      LDA	#NULL
     22  fac0		       85 0d		      STA	PF0
      0  fac2					      DELAY	10
      1  fac2					      REPEAT	10/2 - 10%2
      2  fac2		       ea		      NOP
      1  fac2					      REPEND
      2  fac3		       ea		      NOP
      1  fac3					      REPEND
      2  fac4		       ea		      NOP
      1  fac4					      REPEND
      2  fac5		       ea		      NOP
      1  fac5					      REPEND
      2  fac6		       ea		      NOP
      3  fac7					      REPEND
      4  fac7
      5  fac7				  -	      REPEAT	10%2
      6  fac7				  -	      STA	DUMP
      7  fac7					      REPEND
     24  fac7		       85 0f		      STA	PF2
     25  fac9
     26  fac9		       85 02		      STA	WSYNC
     27  facb		       a5 b4		      LDA	shadowColour
     28  facd		       85 08		      STA	COLUPF
     29  facf		       a5 99		      LDA	shadow1a
     30  fad1		       39 00 f0 	      AND	and_1a,Y
     31  fad4		       85 0e		      STA	PF1
     32  fad6		       a5 9a		      LDA	shadow1b
     33  fad8		       39 0a f0 	      AND	and_1b,Y
     34  fadb		       85 0f		      STA	PF2
      0  fadd					      DELAY	9
      1  fadd					      REPEAT	9/2 - 9%2
      2  fadd		       ea		      NOP
      1  fadd					      REPEND
      2  fade		       ea		      NOP
      1  fade					      REPEND
      2  fadf		       ea		      NOP
      3  fae0					      REPEND
      4  fae0
      5  fae0					      REPEAT	9%2
      6  fae0		       85 30		      STA	DUMP
      7  fae2					      REPEND
     36  fae2		       a5 9c		      LDA	shadow1d
     37  fae4		       39 14 f0 	      AND	and_1c,Y
     38  fae7		       85 0e		      STA	PF1
     39  fae9		       a5 9d		      LDA	shadow1e
     40  faeb		       39 1e f0 	      AND	and_1d,Y
     41  faee		       85 0f		      STA	PF2
     42  faf0
     43  faf0		       e8		      INX
     44  faf1		       e0 03		      CPX	#PIXH
     45  faf3		       d0 ab		      BNE	_dc_w1s2_loop
     46  faf5		       88		      DEY
     47  faf6
     48  faf6		       a2 00		      LDX	#NULL
     49  faf8
     50  faf8		       c0 01		      CPY	#1
     51  fafa		       d0 a4		      BNE	_dc_w1s2_loop
     52  fafc
     53  fafc		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s1.asm LEVEL 3 PASS 2
      0  fafd					      INCLUDE	"drawCode/dc_w2s1.asm"
      1  fafd							; The second wall and it's first shadow
      2  fafd
      3  fafd				   dc_w2s1
      4  fafd
      5  fafd		       a2 00		      LDX	#INDEXINIT
      6  faff		       4c 09 fb 	      JMP	_dc_w2s1_start
      7  fb02
      8  fb02				   _dc_w2s1_loop
      9  fb02		       85 02		      STA	WSYNC
      0  fb04					      DELAY	10	; Delay to keep the timing constant
      1  fb04					      REPEAT	10/2 - 10%2
      2  fb04		       ea		      NOP
      1  fb04					      REPEND
      2  fb05		       ea		      NOP
      1  fb05					      REPEND
      2  fb06		       ea		      NOP
      1  fb06					      REPEND
      2  fb07		       ea		      NOP
      1  fb07					      REPEND
      2  fb08		       ea		      NOP
      3  fb09					      REPEND
      4  fb09
      5  fb09				  -	      REPEAT	10%2
      6  fb09				  -	      STA	DUMP
      7  fb09					      REPEND
     11  fb09				   _dc_w2s1_start
     12  fb09		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fb0b		       85 08		      STA	COLUPF
     14  fb0d		       a5 85		      LDA	wall2a
     15  fb0f		       85 0e		      STA	PF1
     16  fb11		       a5 86		      LDA	wall2b
     17  fb13		       85 0f		      STA	PF2
      0  fb15					      DELAY	14
      1  fb15					      REPEAT	14/2 - 14%2
      2  fb15		       ea		      NOP
      1  fb15					      REPEND
      2  fb16		       ea		      NOP
      1  fb16					      REPEND
      2  fb17		       ea		      NOP
      1  fb17					      REPEND
      2  fb18		       ea		      NOP
      1  fb18					      REPEND
      2  fb19		       ea		      NOP
      1  fb19					      REPEND
      2  fb1a		       ea		      NOP
      1  fb1a					      REPEND
      2  fb1b		       ea		      NOP
      3  fb1c					      REPEND
      4  fb1c
      5  fb1c				  -	      REPEAT	14%2
      6  fb1c				  -	      STA	DUMP
      7  fb1c					      REPEND
     19  fb1c		       a5 87		      LDA	wall2c
     20  fb1e		       85 0d		      STA	PF0
     21  fb20		       a5 88		      LDA	wall2d
     22  fb22		       85 0e		      STA	PF1
     23  fb24		       a5 89		      LDA	wall2e
     24  fb26		       85 0f		      STA	PF2
     25  fb28		       a9 00		      LDA	#NULL
      0  fb2a					      DELAY	2
      1  fb2a					      REPEAT	2/2 - 2%2
      2  fb2a		       ea		      NOP
      3  fb2b					      REPEND
      4  fb2b
      5  fb2b				  -	      REPEAT	2%2
      6  fb2b				  -	      STA	DUMP
      7  fb2b					      REPEND
     27  fb2b		       85 0f		      STA	PF2
     28  fb2d		       85 0d		      STA	PF0
     29  fb2f
     30  fb2f		       85 02		      STA	WSYNC	; Draw the shadow
     31  fb31		       a5 b4		      LDA	shadowColour
     32  fb33		       85 08		      STA	COLUPF
     33  fb35		       a5 8f		      LDA	shadow2aa
     34  fb37		       05 99		      ORA	shadow1a
     35  fb39		       85 0e		      STA	PF1
     36  fb3b		       a5 90		      LDA	shadow2ba
     37  fb3d		       05 9a		      ORA	shadow1b
     38  fb3f		       85 0f		      STA	PF2
     39  fb41		       a5 91		      LDA	shadow2ca
     40  fb43		       85 0d		      STA	PF0
     41  fb45		       a5 92		      LDA	shadow2da
     42  fb47		       05 9b		      ORA	shadow1c
     43  fb49		       85 0e		      STA	PF1
     44  fb4b		       a5 93		      LDA	shadow2ea
     45  fb4d		       05 9d		      ORA	shadow1e
     46  fb4f		       85 0f		      STA	PF2
     47  fb51		       a9 00		      LDA	#NULL
     48  fb53		       85 0d		      STA	PF0
     49  fb55
     50  fb55		       e8		      INX		; Loop for the rest of the pixel's height
     51  fb56		       e0 03		      CPX	#PIXH
     52  fb58		       d0 a8		      BNE	_dc_w2s1_loop
     53  fb5a
      0  fb5a					      DELAY	10	; Delay to keep timing constant
      1  fb5a					      REPEAT	10/2 - 10%2
      2  fb5a		       ea		      NOP
      1  fb5a					      REPEND
      2  fb5b		       ea		      NOP
      1  fb5b					      REPEND
      2  fb5c		       ea		      NOP
      1  fb5c					      REPEND
      2  fb5d		       ea		      NOP
      1  fb5d					      REPEND
      2  fb5e		       ea		      NOP
      3  fb5f					      REPEND
      4  fb5f
      5  fb5f				  -	      REPEAT	10%2
      6  fb5f				  -	      STA	DUMP
      7  fb5f					      REPEND
     55  fb5f
     56  fb5f		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s2.asm LEVEL 3 PASS 2
      0  fb60					      INCLUDE	"drawCode/dc_w2s2.asm"
      1  fb60							; The draw code for the 1st wall and shadow
      2  fb60
      3  fb60				   dc_w2s2
      4  fb60
      5  fb60		       a2 00		      LDX	#INDEXINIT
      6  fb62		       4c 6c fb 	      JMP	_dc_w2s2_start
      7  fb65
      8  fb65				   _dc_w2s2_loop
      9  fb65		       85 02		      STA	WSYNC
      0  fb67					      DELAY	10
      1  fb67					      REPEAT	10/2 - 10%2
      2  fb67		       ea		      NOP
      1  fb67					      REPEND
      2  fb68		       ea		      NOP
      1  fb68					      REPEND
      2  fb69		       ea		      NOP
      1  fb69					      REPEND
      2  fb6a		       ea		      NOP
      1  fb6a					      REPEND
      2  fb6b		       ea		      NOP
      3  fb6c					      REPEND
      4  fb6c
      5  fb6c				  -	      REPEAT	10%2
      6  fb6c				  -	      STA	DUMP
      7  fb6c					      REPEND
     11  fb6c				   _dc_w2s2_start
     12  fb6c		       a5 b3		      LDA	wallColour
     13  fb6e		       85 08		      STA	COLUPF
     14  fb70		       a5 85		      LDA	wall2a
     15  fb72		       85 0e		      STA	PF1
     16  fb74		       a5 86		      LDA	wall2b
     17  fb76		       85 0f		      STA	PF2
      0  fb78					      DELAY	14
      1  fb78					      REPEAT	14/2 - 14%2
      2  fb78		       ea		      NOP
      1  fb78					      REPEND
      2  fb79		       ea		      NOP
      1  fb79					      REPEND
      2  fb7a		       ea		      NOP
      1  fb7a					      REPEND
      2  fb7b		       ea		      NOP
      1  fb7b					      REPEND
      2  fb7c		       ea		      NOP
      1  fb7c					      REPEND
      2  fb7d		       ea		      NOP
      1  fb7d					      REPEND
      2  fb7e		       ea		      NOP
      3  fb7f					      REPEND
      4  fb7f
      5  fb7f				  -	      REPEAT	14%2
      6  fb7f				  -	      STA	DUMP
      7  fb7f					      REPEND
     19  fb7f		       a5 87		      LDA	wall2c
     20  fb81		       85 0d		      STA	PF0
     21  fb83		       a5 88		      LDA	wall2d
     22  fb85		       85 0e		      STA	PF1
     23  fb87		       a5 89		      LDA	wall2e
     24  fb89		       85 0f		      STA	PF2
     25  fb8b		       a9 00		      LDA	#NULL
      0  fb8d					      DELAY	2
      1  fb8d					      REPEAT	2/2 - 2%2
      2  fb8d		       ea		      NOP
      3  fb8e					      REPEND
      4  fb8e
      5  fb8e				  -	      REPEAT	2%2
      6  fb8e				  -	      STA	DUMP
      7  fb8e					      REPEND
     27  fb8e		       85 0f		      STA	PF2
     28  fb90		       85 0d		      STA	PF0
     29  fb92
     30  fb92		       85 02		      STA	WSYNC
     31  fb94		       a5 b4		      LDA	shadowColour
     32  fb96		       85 08		      STA	COLUPF
     33  fb98		       a5 9e		      LDA	shadow2ab
     34  fb9a		       05 99		      ORA	shadow1a
     35  fb9c		       85 0e		      STA	PF1
     36  fb9e		       a5 9f		      LDA	shadow2bb
     37  fba0		       05 9a		      ORA	shadow1b
     38  fba2		       85 0f		      STA	PF2
     39  fba4		       a5 a0		      LDA	shadow2cb
     40  fba6		       85 0d		      STA	PF0
     41  fba8		       a5 a1		      LDA	shadow2db
     42  fbaa		       05 9b		      ORA	shadow1c
     43  fbac		       85 0e		      STA	PF1
     44  fbae		       a5 a2		      LDA	shadow2eb
     45  fbb0		       05 9d		      ORA	shadow1e
     46  fbb2		       85 0f		      STA	PF2
     47  fbb4		       a9 00		      LDA	#NULL
     48  fbb6		       85 0d		      STA	PF0
     49  fbb8
     50  fbb8		       e8		      INX
     51  fbb9		       e0 03		      CPX	#PIXH
     52  fbbb		       d0 a8		      BNE	_dc_w2s2_loop
     53  fbbd
     54  fbbd		       a2 00		      LDX	#NULL
     55  fbbf
      0  fbbf					      DELAY	8
      1  fbbf					      REPEAT	8/2 - 8%2
      2  fbbf		       ea		      NOP
      1  fbbf					      REPEND
      2  fbc0		       ea		      NOP
      1  fbc0					      REPEND
      2  fbc1		       ea		      NOP
      1  fbc1					      REPEND
      2  fbc2		       ea		      NOP
      3  fbc3					      REPEND
      4  fbc3
      5  fbc3				  -	      REPEAT	8%2
      6  fbc3				  -	      STA	DUMP
      7  fbc3					      REPEND
     57  fbc3
     58  fbc3		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s1.asm LEVEL 3 PASS 2
      0  fbc4					      INCLUDE	"drawCode/dc_w3s1.asm"
      1  fbc4							; The draw code for the 1st wall and shadow
      2  fbc4
      3  fbc4				   dc_w3s1
      4  fbc4
      5  fbc4		       a2 00		      LDX	#INDEXINIT
      6  fbc6		       4c d0 fb 	      JMP	_dc_w3s1_start
      7  fbc9
      8  fbc9				   _dc_w3s1_loop
      9  fbc9		       85 02		      STA	WSYNC
      0  fbcb					      DELAY	10
      1  fbcb					      REPEAT	10/2 - 10%2
      2  fbcb		       ea		      NOP
      1  fbcb					      REPEND
      2  fbcc		       ea		      NOP
      1  fbcc					      REPEND
      2  fbcd		       ea		      NOP
      1  fbcd					      REPEND
      2  fbce		       ea		      NOP
      1  fbce					      REPEND
      2  fbcf		       ea		      NOP
      3  fbd0					      REPEND
      4  fbd0
      5  fbd0				  -	      REPEAT	10%2
      6  fbd0				  -	      STA	DUMP
      7  fbd0					      REPEND
     11  fbd0				   _dc_w3s1_start
     12  fbd0		       a5 b3		      LDA	wallColour
     13  fbd2		       85 08		      STA	COLUPF
     14  fbd4		       a5 8a		      LDA	wall3a
     15  fbd6		       85 0e		      STA	PF1
     16  fbd8		       a5 8b		      LDA	wall3b
     17  fbda		       85 0f		      STA	PF2
      0  fbdc					      DELAY	14
      1  fbdc					      REPEAT	14/2 - 14%2
      2  fbdc		       ea		      NOP
      1  fbdc					      REPEND
      2  fbdd		       ea		      NOP
      1  fbdd					      REPEND
      2  fbde		       ea		      NOP
      1  fbde					      REPEND
      2  fbdf		       ea		      NOP
      1  fbdf					      REPEND
      2  fbe0		       ea		      NOP
      1  fbe0					      REPEND
      2  fbe1		       ea		      NOP
      1  fbe1					      REPEND
      2  fbe2		       ea		      NOP
      3  fbe3					      REPEND
      4  fbe3
      5  fbe3				  -	      REPEAT	14%2
      6  fbe3				  -	      STA	DUMP
      7  fbe3					      REPEND
     19  fbe3		       a5 8c		      LDA	wall3c
     20  fbe5		       85 0d		      STA	PF0
     21  fbe7		       a5 8d		      LDA	wall3d
     22  fbe9		       85 0e		      STA	PF1
     23  fbeb		       a5 8e		      LDA	wall3e
     24  fbed		       85 0f		      STA	PF2
     25  fbef		       a9 00		      LDA	#NULL
      0  fbf1					      DELAY	2
      1  fbf1					      REPEAT	2/2 - 2%2
      2  fbf1		       ea		      NOP
      3  fbf2					      REPEND
      4  fbf2
      5  fbf2				  -	      REPEAT	2%2
      6  fbf2				  -	      STA	DUMP
      7  fbf2					      REPEND
     27  fbf2		       85 0f		      STA	PF2
     28  fbf4		       85 0d		      STA	PF0
     29  fbf6
     30  fbf6		       85 02		      STA	WSYNC
     31  fbf8		       a5 b4		      LDA	shadowColour
     32  fbfa		       85 08		      STA	COLUPF
     33  fbfc		       a5 94		      LDA	shadow3aa
     34  fbfe		       05 9e		      ORA	shadow2ab
     35  fc00		       85 0e		      STA	PF1
     36  fc02		       a5 95		      LDA	shadow3ba
     37  fc04		       05 9f		      ORA	shadow2bb
     38  fc06		       85 0f		      STA	PF2
     39  fc08		       a5 96		      LDA	shadow3ca
     40  fc0a		       05 a0		      ORA	shadow2cb
     41  fc0c		       85 0d		      STA	PF0
     42  fc0e		       a5 97		      LDA	shadow3da
     43  fc10		       05 a1		      ORA	shadow2db
     44  fc12		       85 0e		      STA	PF1
     45  fc14		       a5 98		      LDA	shadow3ea
     46  fc16		       05 a2		      ORA	shadow2eb
     47  fc18		       85 0f		      STA	PF2
     48  fc1a		       a9 00		      LDA	#NULL
     49  fc1c		       85 0d		      STA	PF0
     50  fc1e
     51  fc1e		       e8		      INX
     52  fc1f		       e0 03		      CPX	#PIXH
     53  fc21		       d0 a6		      BNE	_dc_w3s1_loop
     54  fc23
     55  fc23		       a2 00		      LDX	#NULL
     56  fc25
      0  fc25					      DELAY	5
      1  fc25					      REPEAT	5/2 - 5%2
      2  fc25		       ea		      NOP
      3  fc26					      REPEND
      4  fc26
      5  fc26					      REPEAT	5%2
      6  fc26		       85 30		      STA	DUMP
      7  fc28					      REPEND
     58  fc28
     59  fc28		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s2.asm LEVEL 3 PASS 2
      0  fc29					      INCLUDE	"drawCode/dc_w3s2.asm"
      1  fc29							; The draw code for 3rd wall and it's second shadow
      2  fc29
      3  fc29				   dc_w3s2
      4  fc29
      5  fc29		       a2 00		      LDX	#INDEXINIT
      6  fc2b		       4c 35 fc 	      JMP	_dc_w3s2_start
      7  fc2e
      8  fc2e				   _dc_w3s2_loop
      9  fc2e		       85 02		      STA	WSYNC
      0  fc30					      DELAY	10	; Delay to keep the timing constant
      1  fc30					      REPEAT	10/2 - 10%2
      2  fc30		       ea		      NOP
      1  fc30					      REPEND
      2  fc31		       ea		      NOP
      1  fc31					      REPEND
      2  fc32		       ea		      NOP
      1  fc32					      REPEND
      2  fc33		       ea		      NOP
      1  fc33					      REPEND
      2  fc34		       ea		      NOP
      3  fc35					      REPEND
      4  fc35
      5  fc35				  -	      REPEAT	10%2
      6  fc35				  -	      STA	DUMP
      7  fc35					      REPEND
     11  fc35				   _dc_w3s2_start
     12  fc35		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fc37		       85 08		      STA	COLUPF
     14  fc39		       a5 8a		      LDA	wall3a
     15  fc3b		       85 0e		      STA	PF1
     16  fc3d		       a5 8b		      LDA	wall3b
     17  fc3f		       85 0f		      STA	PF2
      0  fc41					      DELAY	14
      1  fc41					      REPEAT	14/2 - 14%2
      2  fc41		       ea		      NOP
      1  fc41					      REPEND
      2  fc42		       ea		      NOP
      1  fc42					      REPEND
      2  fc43		       ea		      NOP
      1  fc43					      REPEND
      2  fc44		       ea		      NOP
      1  fc44					      REPEND
      2  fc45		       ea		      NOP
      1  fc45					      REPEND
      2  fc46		       ea		      NOP
      1  fc46					      REPEND
      2  fc47		       ea		      NOP
      3  fc48					      REPEND
      4  fc48
      5  fc48				  -	      REPEAT	14%2
      6  fc48				  -	      STA	DUMP
      7  fc48					      REPEND
     19  fc48		       a5 8c		      LDA	wall3c
     20  fc4a		       85 0d		      STA	PF0
     21  fc4c		       a5 8d		      LDA	wall3d
     22  fc4e		       85 0e		      STA	PF1
     23  fc50		       a5 8e		      LDA	wall3e
     24  fc52		       85 0f		      STA	PF2
     25  fc54		       a9 00		      LDA	#NULL
      0  fc56					      DELAY	2
      1  fc56					      REPEAT	2/2 - 2%2
      2  fc56		       ea		      NOP
      3  fc57					      REPEND
      4  fc57
      5  fc57				  -	      REPEAT	2%2
      6  fc57				  -	      STA	DUMP
      7  fc57					      REPEND
     27  fc57		       85 0f		      STA	PF2
     28  fc59		       85 0d		      STA	PF0
     29  fc5b
     30  fc5b		       85 02		      STA	WSYNC	; Draw the shadow
     31  fc5d		       a5 b4		      LDA	shadowColour
     32  fc5f		       85 08		      STA	COLUPF
     33  fc61		       a5 a3		      LDA	shadow3ab
     34  fc63		       05 9e		      ORA	shadow2ab
     35  fc65		       85 0e		      STA	PF1
     36  fc67		       a5 a4		      LDA	shadow3bb
     37  fc69		       05 9f		      ORA	shadow2bb
     38  fc6b		       85 0f		      STA	PF2
     39  fc6d		       a5 a5		      LDA	shadow3cb
     40  fc6f		       05 a0		      ORA	shadow2cb
     41  fc71		       85 0d		      STA	PF0
     42  fc73		       a5 a6		      LDA	shadow3db
     43  fc75		       05 a1		      ORA	shadow2db
     44  fc77		       85 0e		      STA	PF1
     45  fc79		       a5 a7		      LDA	shadow3eb
     46  fc7b		       05 a2		      ORA	shadow2eb
     47  fc7d		       85 0f		      STA	PF2
     48  fc7f		       a9 00		      LDA	#NULL
     49  fc81		       85 0d		      STA	PF0
     50  fc83
     51  fc83		       e8		      INX
     52  fc84		       e0 03		      CPX	#PIXH
     53  fc86		       d0 a6		      BNE	_dc_w3s2_loop
     54  fc88
      0  fc88					      DELAY	7	; Delay to keep the timing constant
      1  fc88					      REPEAT	7/2 - 7%2
      2  fc88		       ea		      NOP
      1  fc88					      REPEND
      2  fc89		       ea		      NOP
      3  fc8a					      REPEND
      4  fc8a
      5  fc8a					      REPEAT	7%2
      6  fc8a		       85 30		      STA	DUMP
      7  fc8c					      REPEND
     56  fc8c
     57  fc8c		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w4s0.asm LEVEL 3 PASS 2
      0  fc8d					      INCLUDE	"drawCode/dc_w4s0.asm"
      1  fc8d							; The draw code for the 1st wall and shadow
      2  fc8d
      3  fc8d				   dc_w4s0
      4  fc8d
      5  fc8d		       a2 00		      LDX	#INDEXINIT
      6  fc8f		       4c 99 fc 	      JMP	_dc_w4s0_start
      7  fc92
      8  fc92				   _dc_w4s0_loop
      9  fc92		       85 02		      STA	WSYNC
      0  fc94					      DELAY	10
      1  fc94					      REPEAT	10/2 - 10%2
      2  fc94		       ea		      NOP
      1  fc94					      REPEND
      2  fc95		       ea		      NOP
      1  fc95					      REPEND
      2  fc96		       ea		      NOP
      1  fc96					      REPEND
      2  fc97		       ea		      NOP
      1  fc97					      REPEND
      2  fc98		       ea		      NOP
      3  fc99					      REPEND
      4  fc99
      5  fc99				  -	      REPEAT	10%2
      6  fc99				  -	      STA	DUMP
      7  fc99					      REPEND
     11  fc99				   _dc_w4s0_start
     12  fc99		       a5 b3		      LDA	wallColour
     13  fc9b		       85 08		      STA	COLUPF
     14  fc9d		       a9 ff		      LDA	#FULLWALL
     15  fc9f		       45 a3		      EOR	shadow3ab
     16  fca1		       85 0e		      STA	PF1
     17  fca3		       a9 ff		      LDA	#FULLWALL
     18  fca5		       45 a4		      EOR	shadow3bb
     19  fca7		       85 0f		      STA	PF2
      0  fca9					      DELAY	4
      1  fca9					      REPEAT	4/2 - 4%2
      2  fca9		       ea		      NOP
      1  fca9					      REPEND
      2  fcaa		       ea		      NOP
      3  fcab					      REPEND
      4  fcab
      5  fcab				  -	      REPEAT	4%2
      6  fcab				  -	      STA	DUMP
      7  fcab					      REPEND
     21  fcab		       a9 ff		      LDA	#FULLWALL
     22  fcad		       45 a5		      EOR	shadow3cb
     23  fcaf		       85 0d		      STA	PF0
     24  fcb1		       a9 ff		      LDA	#FULLWALL
     25  fcb3		       45 a6		      EOR	shadow3db
     26  fcb5		       85 0e		      STA	PF1
     27  fcb7		       a9 ff		      LDA	#FULLWALL
     28  fcb9		       45 a7		      EOR	shadow3eb
     29  fcbb		       85 0f		      STA	PF2
     30  fcbd		       a9 00		      LDA	#NULL
      0  fcbf					      DELAY	2
      1  fcbf					      REPEAT	2/2 - 2%2
      2  fcbf		       ea		      NOP
      3  fcc0					      REPEND
      4  fcc0
      5  fcc0				  -	      REPEAT	2%2
      6  fcc0				  -	      STA	DUMP
      7  fcc0					      REPEND
     32  fcc0		       85 0f		      STA	PF2
     33  fcc2		       85 0d		      STA	PF0
     34  fcc4
     35  fcc4		       85 02		      STA	WSYNC
     36  fcc6		       a5 b4		      LDA	shadowColour
     37  fcc8		       85 08		      STA	COLUPF
     38  fcca		       a5 a3		      LDA	shadow3ab
     39  fccc		       05 9e		      ORA	shadow2ab
     40  fcce		       85 0e		      STA	PF1
     41  fcd0		       a5 a4		      LDA	shadow3bb
     42  fcd2		       05 9f		      ORA	shadow2bb
     43  fcd4		       85 0f		      STA	PF2
     44  fcd6		       a5 a5		      LDA	shadow3cb
     45  fcd8		       05 a0		      ORA	shadow2cb
     46  fcda		       85 0d		      STA	PF0
     47  fcdc		       a5 a6		      LDA	shadow3db
     48  fcde		       05 a1		      ORA	shadow2db
     49  fce0		       85 0e		      STA	PF1
     50  fce2		       a5 a7		      LDA	shadow3eb
     51  fce4		       05 a2		      ORA	shadow2eb
     52  fce6		       85 0f		      STA	PF2
     53  fce8		       a9 00		      LDA	#NULL
     54  fcea		       85 0d		      STA	PF0
     55  fcec
     56  fcec		       e8		      INX
     57  fced		       e0 03		      CPX	#PIXH
     58  fcef		       d0 a1		      BNE	_dc_w4s0_loop
     59  fcf1
      0  fcf1					      DELAY	7
      1  fcf1					      REPEAT	7/2 - 7%2
      2  fcf1		       ea		      NOP
      1  fcf1					      REPEND
      2  fcf2		       ea		      NOP
      3  fcf3					      REPEND
      4  fcf3
      5  fcf3					      REPEAT	7%2
      6  fcf3		       85 30		      STA	DUMP
      7  fcf5					      REPEND
     61  fcf5
     62  fcf5		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/mmDraw.asm LEVEL 3 PASS 2
      0  fcf6					      INCLUDE	"drawCode/mmDraw.asm"
      1  fcf6							; Draws the compass to the screen
      2  fcf6
------- FILE drawCode/mmRender.asm LEVEL 4 PASS 2
      0  fcf6					      INCLUDE	"drawCode/mmRender.asm"
      1  fcf6							; Render the minimap
      2  fcf6
      3  fcf6				   mmRender
      4  fcf6							; Set the colour of the player
      5  fcf6		       a9 cc		      LDA	#PLYRCOLU
      6  fcf8		       85 08		      STA	COLUPF
      7  fcfa							; Set the colour of the map
      8  fcfa		       a9 0e		      LDA	#MAPCOLU
      9  fcfc		       85 06		      STA	COLUP0
     10  fcfe		       85 07		      STA	COLUP1
     11  fd00							; Get the player's position and translate it into horizontal movement
     12  fd00		       a9 08		      LDA	#%00001000
     13  fd02		       18		      CLC
     14  fd03		       38		      SEC
     15  fd04		       e5 a9		      SBC	playerPos
     16  fd06		       0a		      ASL
     17  fd07		       0a		      ASL
     18  fd08		       0a		      ASL
     19  fd09		       0a		      ASL
     20  fd0a		       85 b7		      STA	horzPos_plyr
     21  fd0c
     22  fd0c							; Set the map's position to the right values
     23  fd0c		       a9 00		      LDA	#HADJ_A
     24  fd0e		       85 b5		      STA	horzPos_mA
     25  fd10		       a9 10		      LDA	#HADJ_B
     26  fd12		       85 b6		      STA	horzPos_mB
     27  fd14
     28  fd14		       85 02		      STA	WSYNC
     29  fd16		       a2 00		      LDX	#0
     30  fd18
     31  fd18				   _mmRender_wait1
     32  fd18		       e8		      INX
     33  fd19		       e0 04		      CPX	#4
     34  fd1b		       d0 fb		      BNE	_mmRender_wait1
     35  fd1d		       ea		      NOP
     36  fd1e		       ea		      NOP
     37  fd1f		       85 10		      STA	RESP0
     38  fd21		       85 11		      STA	RESP1
     39  fd23
     40  fd23		       a5 a9		      LDA	playerPos
     41  fd25
     42  fd25		       85 02		      STA	WSYNC
     43  fd27		       a2 00		      LDX	#INDEXINIT
     44  fd29
     45  fd29				   _mmRender_wait2
     46  fd29		       e8		      INX
     47  fd2a		       e0 04		      CPX	#4
     48  fd2c		       d0 fb		      BNE	_mmRender_wait2
      0  fd2e					      DELAY	7
      1  fd2e					      REPEAT	7/2 - 7%2
      2  fd2e		       ea		      NOP
      1  fd2e					      REPEND
      2  fd2f		       ea		      NOP
      3  fd30					      REPEND
      4  fd30
      5  fd30					      REPEAT	7%2
      6  fd30		       85 30		      STA	DUMP
      7  fd32					      REPEND
     50  fd32		       85 14		      STA	RESBL
     51  fd34
     52  fd34		       60		      RTS
------- FILE drawCode/mmDraw.asm
      4  fd35
      5  fd35				   mmDraw
      6  fd35		       a9 00		      LDA	#0
      7  fd37
      8  fd37		       20 f6 fc 	      JSR	mmRender
      9  fd3a
     10  fd3a							; Load the player's position
     11  fd3a
     12  fd3a		       a5 b7		      LDA	horzPos_plyr
     13  fd3c		       85 24		      STA	HMBL
     14  fd3e		       a5 b5		      LDA	horzPos_mA
     15  fd40		       85 20		      STA	HMP0
     16  fd42		       a5 b6		      LDA	horzPos_mB
     17  fd44		       85 21		      STA	HMP1
     18  fd46
     19  fd46		       a9 00		      LDA	#NULL
     20  fd48		       85 1b		      STA	GRP0
     21  fd4a		       85 1c		      STA	GRP1
     22  fd4c		       85 2a		      STA	HMOVE
     23  fd4e
     24  fd4e		       a0 00		      LDY	#INDEXINIT
     25  fd50		       a6 a9		      LDX	playerPos
     26  fd52
     27  fd52				   _mmLoop
     28  fd52		       85 02		      STA	WSYNC
     29  fd54
     30  fd54		       b1 ba		      LDA	(miniMapPtr),Y
     31  fd56		       85 1b		      STA	GRP0
     32  fd58		       c8		      INY
     33  fd59		       b1 ba		      LDA	(miniMapPtr),Y
     34  fd5b		       85 1c		      STA	GRP1
     35  fd5d		       c8		      INY
     36  fd5e
     37  fd5e		       8a		      TXA
     38  fd5f		       38		      SEC
     39  fd60		       e5 aa		      SBC	mapWidth
     40  fd62		       aa		      TAX
     41  fd63		       29 f0		      AND	#%11110000
     42  fd65
     43  fd65		       c9 00		      CMP	#0
     44  fd67		       d0 0a		      BNE	_noDraw
     45  fd69
     46  fd69		       a9 02		      LDA	#2
     47  fd6b		       85 1f		      STA	ENABL
     48  fd6d		       85 b8		      STA	drawingPlyr
     49  fd6f		       a9 01		      LDA	#1
     50  fd71		       85 27		      STA	VDELBL
     51  fd73
     52  fd73				   _noDraw
     53  fd73
     54  fd73		       a5 b8		      LDA	drawingPlyr
     55  fd75		       85 1f		      STA	ENABL
     56  fd77		       a9 00		      LDA	#0
     57  fd79		       85 b8		      STA	drawingPlyr
     58  fd7b		       c0 20		      CPY	#32
     59  fd7d		       d0 d3		      BNE	_mmLoop
     60  fd7f
     61  fd7f		       a9 00		      LDA	#0
     62  fd81		       85 1f		      STA	ENABL
     63  fd83
     64  fd83		       85 02		      STA	WSYNC
     65  fd85
     66  fd85		       a9 00		      LDA	#NULL
     67  fd87		       85 1b		      STA	GRP0
     68  fd89		       85 1c		      STA	GRP1
     69  fd8b		       85 06		      STA	COLUP0
     70  fd8d		       85 07		      STA	COLUP1
     71  fd8f
     72  fd8f		       60		      RTS
------- FILE dispkern.asm
     23  fd90
     24  fd90				   drawStart
     25  fd90		       a9 86		      LDA	#WCOLU
     26  fd92		       85 08		      STA	COLUPF
     27  fd94
     28  fd94		       20 38 fa 	      JSR	dc_w1s1	; Draw all the walls and their shadows!
     29  fd97		       20 fd fa 	      JSR	dc_w2s1
     30  fd9a		       20 60 fb 	      JSR	dc_w2s2
     31  fd9d		       20 c4 fb 	      JSR	dc_w3s1
     32  fda0		       20 29 fc 	      JSR	dc_w3s2
     33  fda3		       20 8d fc 	      JSR	dc_w4s0
     34  fda6		       20 8d fc 	      JSR	dc_w4s0
     35  fda9		       20 29 fc 	      JSR	dc_w3s2
     36  fdac		       20 c4 fb 	      JSR	dc_w3s1
     37  fdaf		       20 60 fb 	      JSR	dc_w2s2
     38  fdb2		       20 fd fa 	      JSR	dc_w2s1
     39  fdb5		       20 99 fa 	      JSR	dc_w1s2
     40  fdb8
     41  fdb8		       a9 00		      LDA	#NULL
     42  fdba		       85 0e		      STA	PF1
     43  fdbc		       85 0f		      STA	PF2
     44  fdbe
     45  fdbe		       20 35 fd 	      JSR	mmDraw
     46  fdc1
     47  fdc1		       4c c4 fd 	      JMP	stop
     48  fdc4
     49  fdc4				   stop
     50  fdc4
     51  fdc4
     52  fdc4		       85 09		      STA	COLUBK
------- FILE main.asm
     58  fdc6
     59  fdc6
     60  fdc6							; Start VBLANK
     61  fdc6
     62  fdc6		       a9 c2		      LDA	#VBLANK_SET
     63  fdc8		       85 01		      STA	VBLANK
     64  fdca
     65  fdca							; Process input
     66  fdca
------- FILE input.asm LEVEL 2 PASS 2
      0  fdca					      INCLUDE	"input.asm"
      1  fdca							; VePseu's controller input
      2  fdca
      3  fdca		       85 02		      STA	WSYNC
      4  fdcc
      5  fdcc		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
      6  fdcf		       29 10		      AND	#FFORD
      7  fdd1		       c9 10		      CMP	#FFORD
      8  fdd3		       f0 26		      BEQ	CIN1_NOPRESS
      9  fdd5
     10  fdd5		       a5 a9		      LDA	playerPos	; 15 cycles
     11  fdd7		       38		      SEC
     12  fdd8		       e5 ae		      SBC	yLoss
     13  fdda		       18		      CLC
     14  fddb		       65 ad		      ADC	yGain
     15  fddd		       a8		      TAY
     16  fdde
     17  fdde		       b1 bc		      LDA	(mapPtr),Y	; 10 or 11 cycles
     18  fde0		       c9 00		      CMP	#NULL
     19  fde2		       d0 1b		      BNE	CIN2
     20  fde4
     21  fde4		       a5 af		      LDA	fordPressed	; 5 or 6 cycles
     22  fde6		       c9 00		      CMP	#NULL
     23  fde8		       d0 09		      BNE	CIN1_WAIT
     24  fdea
     25  fdea		       84 a9		      STY	playerPos	; 9 cycles
     26  fdec		       a9 0f		      LDA	#CWAITCNT
     27  fdee		       85 af		      STA	fordPressed
     28  fdf0		       4c ff fd 	      JMP	CIN2
     29  fdf3
     30  fdf3				   CIN1_WAIT
      0  fdf3					      DEA
      1  fdf3		       38		      SEC
      2  fdf4		       e9 01		      SBC	#1
     32  fdf6		       85 af		      STA	fordPressed
     33  fdf8		       4c ff fd 	      JMP	CIN2
     34  fdfb
     35  fdfb				   CIN1_NOPRESS
     36  fdfb		       a9 00		      LDA	#NULL	; 5 cycles
     37  fdfd		       85 af		      STA	fordPressed
     38  fdff
     39  fdff				   CIN2
     40  fdff		       85 02		      STA	WSYNC
     41  fe01		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
     42  fe04		       29 20		      AND	#FBACK
     43  fe06		       c9 20		      CMP	#FBACK
     44  fe08		       f0 26		      BEQ	CIN2_NOPRESS
     45  fe0a
     46  fe0a		       a5 a9		      LDA	playerPos	; 15 cycles
     47  fe0c		       38		      SEC
     48  fe0d		       e5 ad		      SBC	yGain
     49  fe0f		       18		      CLC
     50  fe10		       65 ae		      ADC	yLoss
     51  fe12		       a8		      TAY
     52  fe13
     53  fe13		       b1 bc		      LDA	(mapPtr),Y	; 10 or 11 cycles
     54  fe15		       c9 00		      CMP	#NULL
     55  fe17		       d0 1b		      BNE	CIN3
     56  fe19
     57  fe19		       a5 b0		      LDA	backPressed	; 5 or 6 cycles
     58  fe1b		       c9 00		      CMP	#NULL
     59  fe1d		       d0 09		      BNE	CIN2_WAIT
     60  fe1f
     61  fe1f		       84 a9		      STY	playerPos	; 9 cycles
     62  fe21		       a9 0f		      LDA	#CWAITCNT
     63  fe23		       85 b0		      STA	backPressed
     64  fe25		       4c 34 fe 	      JMP	CIN3
     65  fe28
     66  fe28				   CIN2_WAIT
      0  fe28					      DEA
      1  fe28		       38		      SEC
      2  fe29		       e9 01		      SBC	#1
     68  fe2b		       85 b0		      STA	backPressed
     69  fe2d		       4c 34 fe 	      JMP	CIN3
     70  fe30
     71  fe30				   CIN2_NOPRESS
     72  fe30		       a9 00		      LDA	#NULL	; 5 cycles
     73  fe32		       85 b0		      STA	backPressed
     74  fe34
     75  fe34				   CIN3
     76  fe34		       85 02		      STA	WSYNC
     77  fe36		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
     78  fe39		       29 80		      AND	#FLEFT
     79  fe3b		       c9 80		      CMP	#FLEFT
     80  fe3d		       f0 1c		      BEQ	CIN3_NOPRESS
     81  fe3f
     82  fe3f		       a5 b9		      LDA	direction
      0  fe41					      INA
      1  fe41		       18		      CLC
      2  fe42		       69 01		      ADC	#1
     84  fe44		       29 03		      AND	#%00000011
     85  fe46
     86  fe46		       a6 b2		      LDX	rigtPressed
     87  fe48		       e0 00		      CPX	#NULL
     88  fe4a		       d0 09		      BNE	CIN3_WAIT
     89  fe4c
     90  fe4c		       85 b9		      STA	direction
     91  fe4e
     92  fe4e		       a9 0f		      LDA	#CWAITCNT	; 8 cycles
     93  fe50		       85 b2		      STA	rigtPressed
     94  fe52		       4c 5f fe 	      JMP	CIN4
     95  fe55
     96  fe55				   CIN3_WAIT
     97  fe55		       ca		      DEX
     98  fe56		       86 b2		      STX	rigtPressed
     99  fe58		       4c 5f fe 	      JMP	CIN4
    100  fe5b
    101  fe5b				   CIN3_NOPRESS
    102  fe5b		       a9 00		      LDA	#NULL	; 5 cycles
    103  fe5d		       85 b2		      STA	rigtPressed
    104  fe5f
    105  fe5f				   CIN4
    106  fe5f		       85 02		      STA	WSYNC
    107  fe61		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
    108  fe64		       29 40		      AND	#FRIGT
    109  fe66		       c9 40		      CMP	#FRIGT
    110  fe68		       f0 1c		      BEQ	CIN4_NOPRESS
    111  fe6a
    112  fe6a		       a5 b9		      LDA	direction	; 10 cycles
      0  fe6c					      DEA
      1  fe6c		       38		      SEC
      2  fe6d		       e9 01		      SBC	#1
    114  fe6f		       29 03		      AND	#%00000011
    115  fe71
    116  fe71		       a6 b1		      LDX	leftPressed	; 7 or 8 cycles
    117  fe73		       e0 00		      CPX	#NULL
    118  fe75		       d0 09		      BNE	CIN4_WAIT
    119  fe77
    120  fe77		       85 b9		      STA	direction
    121  fe79
    122  fe79		       a9 0f		      LDA	#CWAITCNT	; 8 cycles
    123  fe7b		       85 b1		      STA	leftPressed
    124  fe7d		       4c 8a fe 	      JMP	CDIR1
    125  fe80
    126  fe80				   CIN4_WAIT
    127  fe80		       ca		      DEX
    128  fe81		       86 b1		      STX	leftPressed
    129  fe83		       4c 8a fe 	      JMP	CDIR1
    130  fe86
    131  fe86				   CIN4_NOPRESS
    132  fe86		       a9 00		      LDA	#NULL
    133  fe88		       85 b1		      STA	leftPressed
    134  fe8a
    135  fe8a				   CDIR1
    136  fe8a		       85 02		      STA	WSYNC
    137  fe8c		       a5 b9		      LDA	direction
    138  fe8e		       c9 00		      CMP	#DNORTH
    139  fe90		       d0 16		      BNE	CDIR2
    140  fe92
    141  fe92		       a5 aa		      LDA	mapWidth
    142  fe94		       85 ae		      STA	yLoss
    143  fe96		       a9 01		      LDA	#ONE
    144  fe98		       85 ab		      STA	xGain
    145  fe9a		       a9 86		      LDA	#WCOLU
    146  fe9c		       85 b3		      STA	wallColour
    147  fe9e		       a9 82		      LDA	#SCOLU
    148  fea0		       85 b4		      STA	shadowColour
    149  fea2		       a9 00		      LDA	#NULL
    150  fea4		       85 ad		      STA	yGain
    151  fea6		       85 ac		      STA	xLoss
    152  fea8
    153  fea8				   CDIR2
    154  fea8		       a5 b9		      LDA	direction
    155  feaa		       c9 02		      CMP	#DSOUTH
    156  feac		       d0 16		      BNE	CDIR3
    157  feae
    158  feae		       a5 aa		      LDA	mapWidth
    159  feb0		       85 ad		      STA	yGain
    160  feb2		       a9 01		      LDA	#ONE
    161  feb4		       85 ac		      STA	xLoss
    162  feb6		       a9 86		      LDA	#WCOLU
    163  feb8		       85 b3		      STA	wallColour
    164  feba		       a9 82		      LDA	#SCOLU
    165  febc		       85 b4		      STA	shadowColour
    166  febe		       a9 00		      LDA	#NULL
    167  fec0		       85 ae		      STA	yLoss
    168  fec2		       85 ab		      STA	xGain
    169  fec4
    170  fec4				   CDIR3
    171  fec4		       a5 b9		      LDA	direction
    172  fec6		       c9 01		      CMP	#DWEST
    173  fec8		       d0 16		      BNE	CDIR4
    174  feca
    175  feca		       a5 aa		      LDA	mapWidth
    176  fecc		       85 ab		      STA	xGain
    177  fece		       a9 01		      LDA	#ONE
    178  fed0		       85 ad		      STA	yGain
    179  fed2		       a9 82		      LDA	#SCOLU
    180  fed4		       85 b3		      STA	wallColour
    181  fed6		       a9 86		      LDA	#WCOLU
    182  fed8		       85 b4		      STA	shadowColour
    183  feda		       a9 00		      LDA	#NULL
    184  fedc		       85 ae		      STA	yLoss
    185  fede		       85 ac		      STA	xLoss
    186  fee0
    187  fee0				   CDIR4
    188  fee0		       a5 b9		      LDA	direction
    189  fee2		       c9 03		      CMP	#DEAST
    190  fee4		       d0 16		      BNE	CEND
    191  fee6
    192  fee6		       a5 aa		      LDA	mapWidth
    193  fee8		       85 ac		      STA	xLoss
    194  feea		       a9 01		      LDA	#ONE
    195  feec		       85 ae		      STA	yLoss
    196  feee		       a9 82		      LDA	#SCOLU
    197  fef0		       85 b3		      STA	wallColour
    198  fef2		       a9 86		      LDA	#WCOLU
    199  fef4		       85 b4		      STA	shadowColour
    200  fef6		       a9 00		      LDA	#NULL
    201  fef8		       85 ad		      STA	yGain
    202  fefa		       85 ab		      STA	xGain
    203  fefc
    204  fefc				   CEND
    205  fefc		       85 02		      STA	WSYNC
------- FILE main.asm
     68  fefe
     69  fefe							; Pad again
     70  fefe
     71  fefe		       a2 00		      LDX	#INDEXINIT
     72  ff00
     73  ff00				   lowerPad
     74  ff00		       85 02		      STA	WSYNC
     75  ff02
     76  ff02		       e8		      INX
     77  ff03		       e0 19		      CPX	#LOPAD_LIMIT
     78  ff05		       d0 f9		      BNE	lowerPad
     79  ff07
     80  ff07							; Get everything ready for VSYNC
     81  ff07
     82  ff07		       a9 00		      LDA	#NULL
     83  ff09		       85 01		      STA	VBLANK
     84  ff0b		       a9 02		      LDA	#VSYNC_SET
     85  ff0d		       85 02		      STA	WSYNC
     86  ff0f		       4c 2d f8 	      JMP	screenStart
     87  ff12
     88  fffa					      ORG	$FFFA
     89  fffa
     90  fffa		       00 f8		      DC.W	start	; Something
     91  fffc		       00 f8		      DC.W	start	; Entrypoint
     92  fffe		       2d f8		      DC.W	screenStart	; Something else
     93  10000
     94  10000					       END
