------- FILE main.asm LEVEL 1 PASS 2
      1  10000 ????						; VePseu's main file
      2  10000 ????
      3  10000 ????				       processor	6502
      4  10000 ????
------- FILE include/vepseu.h LEVEL 2 PASS 2
      0  10000 ????				       INCLUDE	"include/vepseu.h"
      1  10000 ????						; VePseu's header file
      2  10000 ????
      3 U028a ????				      SEG.U	addresses
      4 U028a ????
------- FILE include/walrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/walrend.h"
      1 U028a ????				      MAC	y_pos_adv
      2 U028a ????
      3 U028a ????				      TYA
      4 U028a ????				      CLC
      5 U028a ????				      ADC	yGain
      6 U028a ????				      SEC
      7 U028a ????				      SBC	yLoss
      8 U028a ????				      TAY
      9 U028a ????
     10 U028a ????				      ENDM		; 14 cycles
     11 U028a ????
     12 U028a ????				      MAC	x_pos_gan
     13 U028a ????
     14 U028a ????				      TYA
     15 U028a ????				      CLC
     16 U028a ????				      ADC	xGain
     17 U028a ????				      SEC
     18 U028a ????				      SBC	xLoss
     19 U028a ????				      TAY
     20 U028a ????
     21 U028a ????				      ENDM		; 14 cycles
     22 U028a ????
     23 U028a ????				      MAC	x_pos_los
     24 U028a ????
     25 U028a ????				      TYA
     26 U028a ????				      CLC
     27 U028a ????				      ADC	xLoss
     28 U028a ????				      SEC
     29 U028a ????				      SBC	xGain
     30 U028a ????				      TAY
     31 U028a ????
     32 U028a ????				      ENDM		; 14 cycles
------- FILE include/vepseu.h
------- FILE include/scrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/scrend.h"
      1 U028a ????						; Argument 1 is wall1X
      2 U028a ????				      MAC	mrgwll
      3 U028a ????				      LDA	{1},X
      4 U028a ????				      DEX
      5 U028a ????				      ORA	{1},X
      6 U028a ????				      INX
      7 U028a ????				      STA	{1},X
      8 U028a ????				      ENDM		; 17 cycles
      9 U028a ????
     10 U028a ????						; Argument 1 is shadow1X
     11 U028a ????				      MAC	mkshad
     12 U028a ????				      LSR
     13 U028a ????				      DEX
     14 U028a ????				      ORA	{1},X
     15 U028a ????				      INX
     16 U028a ????				      ORA	{1},X
     17 U028a ????				      STA	{1},X
     18 U028a ????				      ENDM		; 21 cycles
     19 U028a ????
     20 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     21 U028a ????				      MAC	ovlwll
     22 U028a ????				      LDA	{1},X
     23 U028a ????				      DEX
     24 U028a ????				      ORA	{2},X
     25 U028a ????				      EOR	{2},X
     26 U028a ????				      INX
     27 U028a ????				      STA	{1},X
     28 U028a ????				      ENDM		; 22 cycles
     29 U028a ????
     30 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     31 U028a ????				      MAC	ovlshd
     32 U028a ????				      LDA	{2},X
     33 U028a ????				      ORA	{1},X
     34 U028a ????				      EOR	{1},X
     35 U028a ????				      STA	{2},X
     36 U028a ????				      ENDM		; 20 cycles
------- FILE include/vepseu.h
------- FILE include/tia_addr.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/tia_addr.h"
      1 U028a ????						; Write only addresses
      2 U028a ????
      3 U0000					      ORG	$0000
      4 U0000
      5 U0000		       00	   VSYNC      DC	0
      6 U0001		       00	   VBLANK     DC	0
      7 U0002		       00	   WSYNC      DC	0
      8 U0003		       00	   RSYNC      DC	0
      9 U0004		       00	   NUSIZ0     DC	0
     10 U0005		       00	   NUSIZ1     DC	0
     11 U0006		       00	   COLUP0     DC	0
     12 U0007		       00	   COLUP1     DC	0
     13 U0008		       00	   COLUPF     DC	0
     14 U0009		       00	   COLUBK     DC	0
     15 U000a		       00	   CTRLPF     DC	0
     16 U000b		       00	   REFP0      DC	0
     17 U000c		       00	   REFP1      DC	0
     18 U000d		       00	   PF0	      DC	0
     19 U000e		       00	   PF1	      DC	0
     20 U000f		       00	   PF2	      DC	0
     21 U0010		       00	   RESP0      DC	0
     22 U0011		       00	   RESP1      DC	0
     23 U0012		       00	   RESM0      DC	0
     24 U0013		       00	   RESM1      DC	0
     25 U0014		       00	   RESBL      DC	0
     26 U0015		       00	   AUDC0      DC	0
     27 U0016		       00	   AUDC1      DC	0
     28 U0017		       00	   AUDF0      DC	0
     29 U0018		       00	   AUDF1      DC	0
     30 U0019		       00	   AUDV0      DC	0
     31 U001a		       00	   AUDV1      DC	0
     32 U001b		       00	   GRP0       DC	0
     33 U001c		       00	   GRP1       DC	0
     34 U001d		       00	   ENAM0      DC	0
     35 U001e		       00	   ENAM1      DC	0
     36 U001f		       00	   ENABL      DC	0
     37 U0020		       00	   HMP0       DC	0
     38 U0021		       00	   HMP1       DC	0
     39 U0022		       00	   HMM0       DC	0
     40 U0023		       00	   HMM1       DC	0
     41 U0024		       00	   HMBL       DC	0
     42 U0025		       00	   VDELP0     DC	0
     43 U0026		       00	   VDELP1     DC	0
     44 U0027		       00	   VDELBL     DC	0
     45 U0028		       00	   RESMP0     DC	0
     46 U0029		       00	   RESMP1     DC	0
     47 U002a		       00	   HMOVE      DC	0
     48 U002b		       00	   HMCLR      DC	0
     49 U002c		       00	   CXCLR      DC	0
     50 U002d
     51 U002d							; Read only addresses
     52 U002d
     53 U0030					      ORG	$0030
     54 U0030
     55 U0030		       00	   CXM0P      DC	0
     56 U0031		       00	   CXM1P      DC	0
     57 U0032		       00	   CXP0FB     DC	0
     58 U0033		       00	   CXP1FB     DC	0
     59 U0034		       00	   CXM0FB     DC	0
     60 U0035		       00	   CXM1FB     DC	0
     61 U0036		       00	   CXBLPF     DC	0
     62 U0037		       00	   CXPPMM     DC	0
     63 U0038		       00	   INPT0      DC	0
     64 U0039		       00	   INPT1      DC	0
     65 U003a		       00	   INPT2      DC	0
     66 U003b		       00	   INPT3      DC	0
     67 U003c		       00	   INPT4      DC	0
     68 U003d		       00	   INPT5      DC	0
------- FILE include/vepseu.h
------- FILE include/vars.h LEVEL 3 PASS 2
      0 U003e					      INCLUDE	"include/vars.h"
      1 U003e							; Variables
      2 U003e
      3 U0080					      ORG	$0080
      4 U0080
      5 U0080		       00 30	   DUMP       =	$30
      6 U0080
      7 U0080		       00 00 00 00*wall1      DS	5
      8 U0085		       00	   wall2a     DC	0
      9 U0086		       00	   wall2b     DC	0
     10 U0087		       00	   wall2c     DC	0
     11 U0088		       00	   wall2d     DC	0
     12 U0089		       00	   wall2e     DC	0
     13 U008a		       00	   wall3a     DC	0
     14 U008b		       00	   wall3b     DC	0
     15 U008c		       00	   wall3c     DC	0
     16 U008d		       00	   wall3d     DC	0
     17 U008e		       00	   wall3e     DC	0
     18 U008f
     19 U008f		       00	   shadow2aa  DC	0
     20 U0090		       00	   shadow2ba  DC	0
     21 U0091		       00	   shadow2ca  DC	0
     22 U0092		       00	   shadow2da  DC	0
     23 U0093		       00	   shadow2ea  DC	0
     24 U0094		       00	   shadow3aa  DC	0
     25 U0095		       00	   shadow3ba  DC	0
     26 U0096		       00	   shadow3ca  DC	0
     27 U0097		       00	   shadow3da  DC	0
     28 U0098		       00	   shadow3ea  DC	0
     29 U0099
     30 U0099		       00	   shadow1a   DC	0
     31 U009a		       00	   shadow1b   DC	0
     32 U009b		       00	   shadow1c   DC	0
     33 U009c		       00	   shadow1d   DC	0
     34 U009d		       00	   shadow1e   DC	0
     35 U009e		       00	   shadow2ab  DC	0
     36 U009f		       00	   shadow2bb  DC	0
     37 U00a0		       00	   shadow2cb  DC	0
     38 U00a1		       00	   shadow2db  DC	0
     39 U00a2		       00	   shadow2eb  DC	0
     40 U00a3		       00	   shadow3ab  DC	0
     41 U00a4		       00	   shadow3bb  DC	0
     42 U00a5		       00	   shadow3cb  DC	0
     43 U00a6		       00	   shadow3db  DC	0
     44 U00a7		       00	   shadow3eb  DC	0
     45 U00a8
     46 U00a8		       00	   shift      DC	0
     47 U00a9		       00	   playerPos  DC	0
     48 U00aa		       00	   mapWidth   DC	0
     49 U00ab		       00	   xGain      DC	0
     50 U00ac		       00	   xLoss      DC	0
     51 U00ad		       00	   yGain      DC	0
     52 U00ae		       00	   yLoss      DC	0
     53 U00af		       00	   fordPressed DC	0
     54 U00b0		       00	   backPressed DC	0
     55 U00b1		       00	   leftPressed DC	0
     56 U00b2		       00	   rigtPressed DC	0
     57 U00b3		       00	   wallColour DC	0
     58 U00b4		       00	   shadowColour DC	0
     59 U00b5		       00	   horzPos_mA DC	0
     60 U00b6		       00	   horzPos_mB DC	0
     61 U00b7		       00	   horzPos_plyr DC	0
     62 U00b8		       00	   drawingPlyr DC	0
     63 U00b9		       00	   direction  DC	0
     64 U00ba		       00	   spriteHeight DC	0
     65 U00bb		       00 00	   miniMapPtr DC.W	0
     66 U00bd		       00 00	   mapPtr     DC.W	0
     67 U00bf		       00 00	   sprite     DC.W	0
     68 U00c1		       00	   foo	      DC	0
------- FILE include/vepseu.h
------- FILE include/pia_addr.h LEVEL 3 PASS 2
      0 U00c2					      INCLUDE	"include/pia_addr.h"
      1 U00c2							; PIA addresses
      2 U00c2
      3 U0280					      ORG	$0280
      4 U0280
      5 U0280		       00	   SWCHA      DC	0
      6 U0281		       00	   SWACNT     DC	0
      7 U0282		       00	   SWCHB      DC	0
      8 U0283		       00	   SWBCNT     DC	0
      9 U0284		       00	   INTIM      DC	0
     10 U0285		       00	   INSTAT     DC	0
     11 U0286		       00	   TIM1T      DC	0
     12 U0287		       00	   TIM8T      DC	0
     13 U0288		       00	   TIM64T     DC	0
     14 U0289		       00	   T1024T     DC	0
------- FILE include/vepseu.h
------- FILE include/defs.h LEVEL 3 PASS 2
      0 U028a					      INCLUDE	"include/defs.h"
      1 U028a					      MAC	ina
      2 U028a					      CLC
      3 U028a					      ADC	#1
      4 U028a					      ENDM
      5 U028a
      6 U028a					      MAC	dea
      7 U028a					      SEC
      8 U028a					      SBC	#1
      9 U028a					      ENDM
     10 U028a
     11 U028a					      MAC	delay
     12 U028a					      REPEAT	{1}/2 - {1}%2
     13 U028a					      NOP
     14 U028a					      REPEND
     15 U028a
     16 U028a					      REPEAT	{1}%2
     17 U028a					      STA	DUMP
     18 U028a					      REPEND
     19 U028a					      ENDM
     20 U028a
     21 U028a		       00 00	   NULL       =	0	; The value of NULL
     22 U028a		       00 01	   ONE	      =	1	; The value of one
     23 U028a
     24 U028a		       00 0a	   WALLCNT    =	10	; The number of walls to render in scrend
     25 U028a
     26 U028a		       00 03	   PIXH       =	3	; The height of each pixel, in scanlines (x2)
     27 U028a
     28 U028a		       00 00	   HADJ_A     =	$00	; The horizontal adjustment of each minimap sprite
     29 U028a		       00 10	   HADJ_B     =	$10
     30 U028a
     31 U028a		       00 05	   HWAIT      =	5	; The horizontal wait for the minimap
     32 U028a		       00 07	   HDELAY1    =	7	; The amount of clocks for horizontal correction (minimap)
     33 U028a		       00 0a	   HDELAY2    =	10	; The amount of clocks for horizontal correction (player blip)
     34 U028a
     35 U028a		       00 86	   WCOLU      =	$86	; The initial colour of walls
     36 U028a		       00 82	   SCOLU      =	$82	; The initial colour of shadows
     37 U028a		       00 0e	   MAPCOLU    =	$0E	; The colour of the map on the minimap
     38 U028a		       00 cc	   PLYRCOLU   =	$CC	; The colour of the player on the minimap
     39 U028a
     40 U028a		       00 c2	   VBLANK_SET =	%11000010	; The value to push to the vblank register
     41 U028a		       00 02	   VSYNC_SET  =	2	; The value to push to the vsync register
     42 U028a
     43 U028a		       00 00	   INDEXINIT  =	0	; The value to initialize indexes to
     44 U028a
     45 U028a		       00 0e	   UPPAD_LIMIT =	14	; The upper pad amount
     46 U028a		       00 19	   LOPAD_LIMIT =	25	; The lower pad amount
     47 U028a
     48 U028a		       00 ff	   FULLWALL   =	$FF
     49 U028a
     50 U028a		       00 10	   FFORD      =	%00010000	; The bit set when the joystick is in the forward position
     51 U028a		       00 20	   FBACK      =	%00100000	; The bit set when the joystick is in the backward position
     52 U028a		       00 80	   FLEFT      =	%10000000	; The bit set when the joystick is in the left position
     53 U028a		       00 40	   FRIGT      =	%01000000	; The bit set when the joystick is in the right position
     54 U028a		       00 80	   ITRIG      =	%10000000	; The bit set when the trigger is set
     55 U028a
     56 U028a		       00 01	   LOWSHAD_LIMIT =	1	; The limited size of the shadow at the bottem of the screen
     57 U028a
     58 U028a		       00 00	   cleanStart =	0	; The value to initialize X to in clearLoop
     59 U028a		       00 00	   cleanEnd   =	0	; The value of X to stop the loop at in clearLoop
     60 U028a
     61 U028a		       00 ff	   stack      =	$FF	; The address of the stack
     62 U028a
     63 U028a		       00 0f	   CWAITCNT   =	#15	; The amount of frames to wait before input is repeated
     64 U028a
     65 U028a		       00 00	   DNORTH     =	0	; The possible directions
     66 U028a		       00 02	   DSOUTH     =	2
     67 U028a		       00 01	   DWEST      =	1
     68 U028a		       00 03	   DEAST      =	3
------- FILE include/vepseu.h
     11 U028a
     12 U028a
------- FILE main.asm
      6 U028a
      7  10000 ????				       SEG
      8  10000 ????
      9  f000					      ORG	$F000
     10  f000
------- FILE andtable.asm LEVEL 2 PASS 2
      0  f000					      INCLUDE	"andtable.asm"
      1  f000							; The AND-tables for the shadows
      2  f000
      3  f000				   and_1a
      4  f000		       80		      DC	%10000000
      5  f001		       80		      DC	%10000000
      6  f002		       80		      DC	%10000000
      7  f003		       c0		      DC	%11000000
      8  f004		       c0		      DC	%11000000
      9  f005		       c0		      DC	%11000000
     10  f006		       e0		      DC	%11100000
     11  f007		       e0		      DC	%11100000
     12  f008		       e0		      DC	%11100000
     13  f009		       f0		      DC	%11110000
     14  f00a		       f0		      DC	%11110000
     15  f00b		       f0		      DC	%11110000
     16  f00c		       f8		      DC	%11111000
     17  f00d		       f8		      DC	%11111000
     18  f00e		       f8		      DC	%11111000
     19  f00f		       fc		      DC	%11111100
     20  f010		       fc		      DC	%11111100
     21  f011		       fc		      DC	%11111100
     22  f012		       fe		      DC	%11111110
     23  f013		       fe		      DC	%11111110
     24  f014		       fe		      DC	%11111110
     25  f015		       ff		      DC	%11111111
     26  f016		       ff		      DC	%11111111
     27  f017		       ff		      DC	%11111111
     28  f018		       ff		      DC	%11111111
     29  f019		       ff		      DC	%11111111
     30  f01a		       ff		      DC	%11111111
     31  f01b		       ff		      DC	%11111111
     32  f01c		       ff		      DC	%11111111
     33  f01d		       ff		      DC	%11111111
     34  f01e
     35  f01e				   and_1b
     36  f01e		       00		      DC	%00000000
     37  f01f		       00		      DC	%00000000
     38  f020		       00		      DC	%00000000
     39  f021		       00		      DC	%00000000
     40  f022		       00		      DC	%00000000
     41  f023		       00		      DC	%00000000
     42  f024		       00		      DC	%00000000
     43  f025		       00		      DC	%00000000
     44  f026		       00		      DC	%00000000
     45  f027		       00		      DC	%00000000
     46  f028		       00		      DC	%00000000
     47  f029		       00		      DC	%00000000
     48  f02a		       00		      DC	%00000000
     49  f02b		       00		      DC	%00000000
     50  f02c		       00		      DC	%00000000
     51  f02d		       00		      DC	%00000000
     52  f02e		       00		      DC	%00000000
     53  f02f		       00		      DC	%00000000
     54  f030		       00		      DC	%00000000
     55  f031		       00		      DC	%00000000
     56  f032		       00		      DC	%00000000
     57  f033		       00		      DC	%00000000
     58  f034		       00		      DC	%00000000
     59  f035		       00		      DC	%00000000
     60  f036		       01		      DC	%00000001
     61  f037		       01		      DC	%00000001
     62  f038		       01		      DC	%00000001
     63  f039		       03		      DC	%00000011
     64  f03a		       03		      DC	%00000011
     65  f03b		       03		      DC	%00000011
     66  f03c
     67  f03c				   and_1c
     68  f03c		       00		      DC	%00000000
     69  f03d		       00		      DC	%00000000
     70  f03e		       00		      DC	%00000000
     71  f03f		       00		      DC	%00000000
     72  f040		       00		      DC	%00000000
     73  f041		       00		      DC	%00000000
     74  f042		       01		      DC	%00000001
     75  f043		       01		      DC	%00000001
     76  f044		       01		      DC	%00000001
     77  f045		       03		      DC	%00000011
     78  f046		       03		      DC	%00000011
     79  f047		       03		      DC	%00000011
     80  f048		       07		      DC	%00000111
     81  f049		       07		      DC	%00000111
     82  f04a		       07		      DC	%00000111
     83  f04b		       0f		      DC	%00001111
     84  f04c		       0f		      DC	%00001111
     85  f04d		       0f		      DC	%00001111
     86  f04e		       1f		      DC	%00011111
     87  f04f		       1f		      DC	%00011111
     88  f050		       1f		      DC	%00011111
     89  f051		       3f		      DC	%00111111
     90  f052		       3f		      DC	%00111111
     91  f053		       3f		      DC	%00111111
     92  f054		       7f		      DC	%01111111
     93  f055		       7f		      DC	%01111111
     94  f056		       7f		      DC	%01111111
     95  f057		       ff		      DC	%11111111
     96  f058		       ff		      DC	%11111111
     97  f059		       ff		      DC	%11111111
     98  f05a
     99  f05a				   and_1d
    100  f05a		       02		      DC	%00000010
    101  f05b		       02		      DC	%00000010
    102  f05c		       02		      DC	%00000010
    103  f05d		       03		      DC	%00000011
    104  f05e		       03		      DC	%00000011
    105  f05f		       03		      DC	%00000011
    106  f060		       03		      DC	%00000011
    107  f061		       03		      DC	%00000011
    108  f062		       03		      DC	%00000011
    109  f063		       03		      DC	%00000011
    110  f064		       03		      DC	%00000011
    111  f065		       03		      DC	%00000011
    112  f066		       03		      DC	%00000011
    113  f067		       03		      DC	%00000011
    114  f068		       03		      DC	%00000011
    115  f069		       03		      DC	%00000011
    116  f06a		       03		      DC	%00000011
    117  f06b		       03		      DC	%00000011
    118  f06c		       03		      DC	%00000011
    119  f06d		       03		      DC	%00000011
    120  f06e		       03		      DC	%00000011
    121  f06f		       03		      DC	%00000011
    122  f070		       03		      DC	%00000011
    123  f071		       03		      DC	%00000011
    124  f072		       03		      DC	%00000011
    125  f073		       03		      DC	%00000011
    126  f074		       03		      DC	%00000011
    127  f075		       03		      DC	%00000011
    128  f076		       03		      DC	%00000011
    129  f077		       03		      DC	%00000011
------- FILE main.asm
------- FILE map.asm LEVEL 2 PASS 2
      0  f078					      INCLUDE	"map.asm"
      1  f078							; VePseu's maps
      2  f078
      3  f078		       00 d1	   MAP_01_POS =	$D1
      4  f078		       00 10	   MAP_01_WDTH =	$10
      5  f078		       01 00	   MAP_01_SZ  =	$100
      6  f078
      7  f078				   jerry
      8  f078		       42		      DC	%01000010
      9  f079		       42		      DC	%01000010
     10  f07a		       42		      DC	%01000010
     11  f07b		       42		      DC	%01000010
     12  f07c		       42		      DC	%01000010
     13  f07d		       42		      DC	%01000010
     14  f07e		       42		      DC	%01000010
     15  f07f		       42		      DC	%01000010
     16  f080		       42		      DC	%01000010
     17  f081		       42		      DC	%01000010
     18  f082		       42		      DC	%01000010
     19  f083		       ff		      DC	%11111111
     20  f084		       81		      DC	%10000001
     21  f085		       89		      DC	%10001001
     22  f086		       81		      DC	%10000001
     23  f087		       89		      DC	%10001001
     24  f088		       81		      DC	%10000001
     25  f089		       89		      DC	%10001001
     26  f08a		       81		      DC	%10000001
     27  f08b		       89		      DC	%10001001
     28  f08c		       81		      DC	%10000001
     29  f08d		       99		      DC	%10011001
     30  f08e		       a5		      DC	%10100101
     31  f08f		       42		      DC	%01000010
     32  f090		       42		      DC	%01000010
     33  f091		       6a		      DC	%01101010
     34  f092		       42		      DC	%01000010
     35  f093		       99		      DC	%10011001
     36  f094		       a5		      DC	%10100101
     37  f095		       c3		      DC	%11000011
     38  f096
     39  f096				   miniMap_01
     40  f096		       e0 07		      DC.W	%0000011111100000
     41  f098		       bf fd		      DC.W	%1111110110111111
     42  f09a		       80 01		      DC.W	%0000000110000000
     43  f09c		       80 01		      DC.W	%0000000110000000
     44  f09e		       be bd		      DC.W	%1011110110111110
     45  f0a0		       a2 a5		      DC.W	%1010010110100010
     46  f0a2		       a2 a7		      DC.W	%1010011110100010
     47  f0a4		       e2 a7		      DC.W	%1010011111100010
     48  f0a6		       e2 a5		      DC.W	%1010010111100010
     49  f0a8		       be bd		      DC.W	%1011110110111110
     50  f0aa		       80 81		      DC.W	%1000000110000000
     51  f0ac		       80 81		      DC.W	%1000000110000000
     52  f0ae		       bf fd		      DC.W	%1111110110111111
     53  f0b0		       a0 05		      DC.W	%0000010110100000
     54  f0b2		       a0 05		      DC.W	%0000010110100000
     55  f0b4		       e0 07		      DC.W	%0000011111100000
     56  f0b6
     57  f0b6				   map_01_load
     58  f0b6		       a9 d1		      LDA	#MAP_01_POS
     59  f0b8		       85 a9		      STA	playerPos
     60  f0ba		       a9 10		      LDA	#MAP_01_WDTH
     61  f0bc		       85 aa		      STA	mapWidth
     62  f0be
     63  f0be		       a9 00		      LDA	#<map_01
     64  f0c0		       85 bd		      STA	mapPtr
     65  f0c2		       a9 f1		      LDA	#>map_01
     66  f0c4		       85 be		      STA	mapPtr + 1
     67  f0c6
     68  f0c6		       a9 96		      LDA	#<miniMap_01
     69  f0c8		       85 bb		      STA	miniMapPtr
     70  f0ca		       a9 f0		      LDA	#>miniMap_01
     71  f0cc		       85 bc		      STA	miniMapPtr + 1
     72  f0ce		       60		      RTS
     73  f0cf
     74  f0cf
     75  f100		       00 00 00 00*	      ALIGN	256
     76  f100
     77  f100				   map_01
     78  f100		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
     79  f110		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     80  f120		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     81  f130		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     82  f140		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     83  f150		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     84  f160		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     85  f170		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     86  f180		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     87  f190		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     88  f1a0		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     89  f1b0		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     90  f1c0		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     91  f1d0		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     92  f1e0		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     93  f1f0		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
------- FILE main.asm
     13  f200
     14  f800					      ORG	$F800
     15  f800
     16  f800				   start
     17  f800
     18  f800							; Initialize everything
     19  f800
------- FILE init.asm LEVEL 2 PASS 2
      0  f800					      INCLUDE	"init.asm"
      1  f800							; VePseu's init file
      2  f800
      3  f800		       a2 ff		      LDX	#stack
      4  f802		       9a		      TXS
      5  f803
      6  f803		       a9 00		      LDA	#NULL
      7  f805
      8  f805		       d8		      CLD
      9  f806		       18		      CLC
     10  f807		       58		      CLI
     11  f808		       b8		      CLV
     12  f809
     13  f809		       a2 00		      LDX	#INDEXINIT
     14  f80b
     15  f80b				   cleanLoop
     16  f80b
     17  f80b		       95 00		      STA	cleanStart,X
     18  f80d		       e8		      INX
     19  f80e
     20  f80e		       e0 00		      CPX	#cleanEnd
     21  f810		       d0 f9		      BNE	cleanLoop
     22  f812
     23  f812		       20 b6 f0 	      JSR	map_01_load
     24  f815
     25  f815		       a5 aa		      LDA	mapWidth
     26  f817		       85 ae		      STA	yLoss
     27  f819		       a9 01		      LDA	#ONE
     28  f81b		       85 ab		      STA	xGain
     29  f81d		       a9 00		      LDA	#NULL
     30  f81f		       85 ad		      STA	yGain
     31  f821		       85 ac		      STA	xLoss
     32  f823
     33  f823		       a9 86		      LDA	#WCOLU
     34  f825		       85 b3		      STA	wallColour
     35  f827		       a9 82		      LDA	#SCOLU
     36  f829		       85 b4		      STA	shadowColour
------- FILE main.asm
     21  f82b
     22  f82b		       a9 02		      LDA	#VSYNC_SET
     23  f82d
     24  f82d				   screenStart
     25  f82d
     26  f82d							; Start vsync (3 scanlines)
     27  f82d		       85 00		      STA	VSYNC
     28  f82f
     29  f82f		       85 02		      STA	WSYNC
     30  f831		       85 02		      STA	WSYNC
     31  f833		       a9 00		      LDA	#NULL
     32  f835		       85 02		      STA	WSYNC
     33  f837
     34  f837		       85 00		      STA	VSYNC
     35  f839
     36  f839							; Render everything (23 scanlines)
     37  f839
------- FILE walrend.asm LEVEL 2 PASS 2
      0  f839					      INCLUDE	"walrend.asm"	; 9 scanlines
      1  f839							; VePseu's wall renderer
      2  f839
      3  f839		       a4 a9		      LDY	playerPos
      4  f83b
------- FILE r_layers/layer0.asm LEVEL 3 PASS 2
      0  f83b					      INCLUDE	"r_layers/layer0.asm"	; 54 cycles
      1  f83b							; Peripheral vision rendering (54 cycles)
      2  f83b
------- FILE include/ands_0.h LEVEL 4 PASS 2
      0  f83b					      INCLUDE	"include/ands_0.h"
      1  f83b							; The AND constants for peripheral vision
      2  f83b
      3  f83b		       00 c0	   AND_W0S1P1 =	%11000000
      4  f83b		       00 03	   AND_W0S1P2 =	%00000011
------- FILE r_layers/layer0.asm
      4  f83b
      0  f83b					      X_POS_LOS		; 24 cycles
      1  f83b
      2  f83b		       98		      TYA
      3  f83c		       18		      CLC
      4  f83d		       65 ac		      ADC	xLoss
      5  f83f		       38		      SEC
      6  f840		       e5 ab		      SBC	xGain
      7  f842		       a8		      TAY
      8  f843
      6  f843		       b1 bd		      LDA	(mapPtr),Y
      7  f845		       29 c0		      AND	#AND_W0S1P1
      8  f847		       85 99		      STA	shadow1a
      9  f849
     10  f849		       98		      TYA		; Move twice the amount of a normal X_POS_GAIN (20 cycles)
     11  f84a		       18		      CLC
     12  f84b		       65 ab		      ADC	xGain
     13  f84d		       65 ab		      ADC	xGain
     14  f84f		       38		      SEC
     15  f850		       e5 ac		      SBC	xLoss
     16  f852		       e5 ac		      SBC	xLoss
     17  f854		       a8		      TAY
     18  f855
     19  f855		       b1 bd		      LDA	(mapPtr),Y	; 10 cycles
     20  f857		       29 03		      AND	#AND_W0S1P2
     21  f859		       85 9d		      STA	shadow1e
------- FILE walrend.asm
      6  f85b
------- FILE r_layers/layer1.asm LEVEL 3 PASS 2
      0  f85b					      INCLUDE	"r_layers/layer1.asm"	; 86 cycles
      1  f85b							; Render the first layer (not that ugly) (86 cycles)
      2  f85b
------- FILE include/ands_1.h LEVEL 4 PASS 2
      0  f85b					      INCLUDE	"include/ands_1.h"
      1  f85b							; The AND constants for layer 1
      2  f85b
      3  f85b		       00 03	   AND_W1S1P1 =	%00000011
      4  f85b		       00 03	   AND_W1S1P2 =	%00000011
------- FILE r_layers/layer1.asm
      4  f85b
      0  f85b					      Y_POS_ADV		; 30 cycles
      1  f85b
      2  f85b		       98		      TYA
      3  f85c		       18		      CLC
      4  f85d		       65 ad		      ADC	yGain
      5  f85f		       38		      SEC
      6  f860		       e5 ae		      SBC	yLoss
      7  f862		       a8		      TAY
      8  f863
      6  f863		       b1 bd		      LDA	(mapPtr),Y
      7  f865		       85 9c		      STA	shadow1d
      8  f867		       05 9d		      ORA	shadow1e
      9  f869		       29 03		      AND	#AND_W1S1P1
     10  f86b		       85 9d		      STA	shadow1e
     11  f86d
      0  f86d					      X_POS_LOS		; 22 cycles
      1  f86d
      2  f86d		       98		      TYA
      3  f86e		       18		      CLC
      4  f86f		       65 ac		      ADC	xLoss
      5  f871		       38		      SEC
      6  f872		       e5 ab		      SBC	xGain
      7  f874		       a8		      TAY
      8  f875
     13  f875		       b1 bd		      LDA	(mapPtr),Y
     14  f877		       85 80		      STA	wall1
     15  f879
      0  f879					      X_POS_LOS		; 34 cycles
      1  f879
      2  f879		       98		      TYA
      3  f87a		       18		      CLC
      4  f87b		       65 ac		      ADC	xLoss
      5  f87d		       38		      SEC
      6  f87e		       e5 ab		      SBC	xGain
      7  f880		       a8		      TAY
      8  f881
     17  f881		       b1 bd		      LDA	(mapPtr),Y
     18  f883		       aa		      TAX
     19  f884		       05 99		      ORA	shadow1a
     20  f886		       85 99		      STA	shadow1a
     21  f888		       8a		      TXA
     22  f889		       29 03		      AND	#AND_W1S1P2
     23  f88b		       85 9a		      STA	shadow1b
------- FILE walrend.asm
      8  f88d
------- FILE r_layers/layer2.asm LEVEL 3 PASS 2
      0  f88d					      INCLUDE	"r_layers/layer2.asm"	; 186 cycles
      1  f88d							; Render the second layer (186 cycles)
      2  f88d
------- FILE include/ands_2.h LEVEL 4 PASS 2
      0  f88d					      INCLUDE	"include/ands_2.h"
      1  f88d							; The AND constants for layer 2
      2  f88d
      3  f88d		       00 e0	   AND_W2S1P1 =	%11100000
      4  f88d		       00 fc	   AND_W2S2P1 =	%11111100
      5  f88d
      6  f88d		       00 03	   AND_W2S0P1 =	%00000011
      7  f88d		       00 04	   AND_W2S1P2 =	%00000100
      8  f88d		       00 0c	   AND_W2S2P2 =	%00001100
      9  f88d
     10  f88d		       00 fc	   AND_W2S0P2 =	%11111100
     11  f88d
     12  f88d		       00 80	   AND_W2S1P3 =	%10000000
     13  f88d		       00 c0	   AND_W2S2P3 =	%11000000
     14  f88d
     15  f88d		       00 01	   AND_W2S1P4 =	%00000001
     16  f88d		       00 0f	   AND_W2S2P4 =	%00001111
     17  f88d		       00 03	   AND_W2S1P5 =	%00000011
     18  f88d		       00 03	   AND_W2S2P5 =	%00000011
------- FILE r_layers/layer2.asm
      4  f88d
      0  f88d					      Y_POS_ADV		; 14 cycles
      1  f88d
      2  f88d		       98		      TYA
      3  f88e		       18		      CLC
      4  f88f		       65 ad		      ADC	yGain
      5  f891		       38		      SEC
      6  f892		       e5 ae		      SBC	yLoss
      7  f894		       a8		      TAY
      8  f895
      6  f895
      0  f895					      X_POS_LOS		; 29 cycles
      1  f895
      2  f895		       98		      TYA
      3  f896		       18		      CLC
      4  f897		       65 ac		      ADC	xLoss
      5  f899		       38		      SEC
      6  f89a		       e5 ab		      SBC	xGain
      7  f89c		       a8		      TAY
      8  f89d
      8  f89d		       b1 bd		      LDA	(mapPtr),Y
      9  f89f		       29 fc		      AND	#AND_W2S2P1
     10  f8a1		       85 9e		      STA	shadow2ab
     11  f8a3		       29 e0		      AND	#AND_W2S1P1
     12  f8a5		       85 8f		      STA	shadow2aa
     13  f8a7
      0  f8a7					      X_POS_GAN		; 41 cycles
      1  f8a7
      2  f8a7		       98		      TYA
      3  f8a8		       18		      CLC
      4  f8a9		       65 ab		      ADC	xGain
      5  f8ab		       38		      SEC
      6  f8ac		       e5 ac		      SBC	xLoss
      7  f8ae		       a8		      TAY
      8  f8af
     15  f8af		       b1 bd		      LDA	(mapPtr),Y
     16  f8b1		       aa		      TAX
     17  f8b2		       85 85		      STA	wall2a
     18  f8b4		       29 03		      AND	#AND_W2S0P1
     19  f8b6		       85 86		      STA	wall2b
     20  f8b8		       8a		      TXA
     21  f8b9		       29 0c		      AND	#AND_W2S2P2
     22  f8bb		       85 9f		      STA	shadow2bb
     23  f8bd		       29 04		      AND	#AND_W2S1P2
     24  f8bf		       85 90		      STA	shadow2ba
     25  f8c1
      0  f8c1					      X_POS_GAN		; 30 cycles
      1  f8c1
      2  f8c1		       98		      TYA
      3  f8c2		       18		      CLC
      4  f8c3		       65 ab		      ADC	xGain
      5  f8c5		       38		      SEC
      6  f8c6		       e5 ac		      SBC	xLoss
      7  f8c8		       a8		      TAY
      8  f8c9
     27  f8c9		       b1 bd		      LDA	(mapPtr),Y
     28  f8cb		       85 87		      STA	wall2c
     29  f8cd		       29 fc		      AND	#AND_W2S0P2
     30  f8cf		       05 86		      ORA	wall2b
     31  f8d1		       85 86		      STA	wall2b
     32  f8d3
      0  f8d3					      X_POS_GAN		; 35 cycles
      1  f8d3
      2  f8d3		       98		      TYA
      3  f8d4		       18		      CLC
      4  f8d5		       65 ab		      ADC	xGain
      5  f8d7		       38		      SEC
      6  f8d8		       e5 ac		      SBC	xLoss
      7  f8da		       a8		      TAY
      8  f8db
     34  f8db		       b1 bd		      LDA	(mapPtr),Y
     35  f8dd		       85 88		      STA	wall2d
     36  f8df		       85 89		      STA	wall2e
     37  f8e1		       29 c0		      AND	#AND_W2S2P3
     38  f8e3		       85 a0		      STA	shadow2cb
     39  f8e5		       29 80		      AND	#AND_W2S1P3
     40  f8e7		       85 91		      STA	shadow2ca
     41  f8e9
      0  f8e9					      X_POS_GAN		; 37 cycles
      1  f8e9
      2  f8e9		       98		      TYA
      3  f8ea		       18		      CLC
      4  f8eb		       65 ab		      ADC	xGain
      5  f8ed		       38		      SEC
      6  f8ee		       e5 ac		      SBC	xLoss
      7  f8f0		       a8		      TAY
      8  f8f1
     43  f8f1		       b1 bd		      LDA	(mapPtr),Y
     44  f8f3		       29 0f		      AND	#AND_W2S2P4
     45  f8f5		       85 a1		      STA	shadow2db
     46  f8f7		       29 03		      AND	#AND_W2S1P5
     47  f8f9		       85 93		      STA	shadow2ea
     48  f8fb		       85 a2		      STA	shadow2eb
     49  f8fd		       29 01		      AND	#AND_W2S1P4
     50  f8ff		       85 92		      STA	shadow2da
------- FILE walrend.asm
     10  f901
------- FILE r_layers/layer3.asm LEVEL 3 PASS 2
      0  f901					      INCLUDE	"r_layers/layer3.asm"	; 281 cycles
      1  f901							; Render the third layer (it's really ugly, at 281 cycles)
      2  f901
------- FILE include/ands_3.h LEVEL 4 PASS 2
      0  f901					      INCLUDE	"include/ands_3.h"
      1  f901							; The AND constants for render layer 3
      2  f901
      3  f901		       00 80	   AND_W3S1P1 =	%10000000
      4  f901		       00 c0	   AND_W3S2P1 =	%11000000
      5  f901
      6  f901		       00 fc	   AND_W3S0P1 =	%11111100
      7  f901		       00 02	   AND_W3S1P2 =	%00000010
      8  f901		       00 03	   AND_W3S2P2 =	%00000011
      9  f901
     10  f901		       00 03	   AND_W3S0P2 =	%00000011
     11  f901		       00 0f	   AND_W3S0P3 =	%00001111
     12  f901		       00 10	   AND_W3S1P3 =	%00010000
     13  f901		       00 30	   AND_W3S2P3 =	%00110000
     14  f901
     15  f901		       00 f0	   AND_W3S0P4 =	%11110000
     16  f901		       00 30	   AND_W3S0P5 =	%00110000
     17  f901
     18  f901		       00 c0	   AND_W3S0P6 =	%11000000
     19  f901		       00 f0	   AND_W3S0P7 =	%11110000
     20  f901		       00 20	   AND_W3S1P4 =	%00100000
     21  f901		       00 30	   AND_W3S2P4 =	%00110000
     22  f901
     23  f901		       00 0f	   AND_W3S0P8 =	%00001111
     24  f901		       00 03	   AND_W3S0P9 =	%00000011
     25  f901		       00 10	   AND_W3S1P5 =	%00010000
     26  f901		       00 30	   AND_W3S2P5 =	%00110000
     27  f901
     28  f901		       00 02	   AND_W3S1P6 =	%00000010
     29  f901		       00 03	   AND_W3S2P6 =	%00000011
------- FILE r_layers/layer3.asm
      4  f901
      0  f901					      Y_POS_ADV		; 14 cycles
      1  f901
      2  f901		       98		      TYA
      3  f902		       18		      CLC
      4  f903		       65 ad		      ADC	yGain
      5  f905		       38		      SEC
      6  f906		       e5 ae		      SBC	yLoss
      7  f908		       a8		      TAY
      8  f909
      6  f909
      0  f909					      X_POS_GAN		; 29 cycles
      1  f909
      2  f909		       98		      TYA
      3  f90a		       18		      CLC
      4  f90b		       65 ab		      ADC	xGain
      5  f90d		       38		      SEC
      6  f90e		       e5 ac		      SBC	xLoss
      7  f910		       a8		      TAY
      8  f911
      8  f911		       b1 bd		      LDA	(mapPtr),Y
      9  f913		       29 03		      AND	#AND_W3S2P6
     10  f915		       85 a7		      STA	shadow3eb
     11  f917		       29 02		      AND	#AND_W3S1P6
     12  f919		       85 98		      STA	shadow3ea
     13  f91b
      0  f91b					      X_POS_LOS		; 38 cycles
      1  f91b
      2  f91b		       98		      TYA
      3  f91c		       18		      CLC
      4  f91d		       65 ac		      ADC	xLoss
      5  f91f		       38		      SEC
      6  f920		       e5 ab		      SBC	xGain
      7  f922		       a8		      TAY
      8  f923
     15  f923		       b1 bd		      LDA	(mapPtr),Y
     16  f925		       aa		      TAX
     17  f926		       29 0f		      AND	#AND_W3S0P8
     18  f928		       85 8d		      STA	wall3d
     19  f92a		       29 03		      AND	#AND_W3S0P9
     20  f92c		       85 8e		      STA	wall3e
     21  f92e		       8a		      TXA
     22  f92f		       29 30		      AND	#AND_W3S2P5
     23  f931		       85 a6		      STA	shadow3db
     24  f933		       29 10		      AND	#AND_W3S1P5
     25  f935		       85 97		      STA	shadow3da
     26  f937
      0  f937					      X_POS_LOS		; 46 cycles
      1  f937
      2  f937		       98		      TYA
      3  f938		       18		      CLC
      4  f939		       65 ac		      ADC	xLoss
      5  f93b		       38		      SEC
      6  f93c		       e5 ab		      SBC	xGain
      7  f93e		       a8		      TAY
      8  f93f
     28  f93f		       b1 bd		      LDA	(mapPtr),Y
     29  f941		       aa		      TAX
     30  f942		       29 f0		      AND	#AND_W3S0P7
     31  f944		       05 8d		      ORA	wall3d
     32  f946		       85 8d		      STA	wall3d
     33  f948		       29 c0		      AND	#AND_W3S0P6
     34  f94a		       85 8c		      STA	wall3c
     35  f94c		       8a		      TXA
     36  f94d		       29 30		      AND	#AND_W3S2P4
     37  f94f		       85 a5		      STA	shadow3cb
     38  f951		       29 20		      AND	#AND_W3S1P4
     39  f953		       85 96		      STA	shadow3ca
     40  f955
      0  f955					      X_POS_LOS		; 32 cycles
      1  f955
      2  f955		       98		      TYA
      3  f956		       18		      CLC
      4  f957		       65 ac		      ADC	xLoss
      5  f959		       38		      SEC
      6  f95a		       e5 ab		      SBC	xGain
      7  f95c		       a8		      TAY
      8  f95d
     42  f95d		       b1 bd		      LDA	(mapPtr),Y
     43  f95f		       29 f0		      AND	#AND_W3S0P4
     44  f961		       85 8b		      STA	wall3b
     45  f963		       29 30		      AND	#AND_W3S0P5
     46  f965		       05 8c		      ORA	wall3c
     47  f967		       85 8c		      STA	wall3c
     48  f969
      0  f969					      X_POS_LOS		; 46 cycles
      1  f969
      2  f969		       98		      TYA
      3  f96a		       18		      CLC
      4  f96b		       65 ac		      ADC	xLoss
      5  f96d		       38		      SEC
      6  f96e		       e5 ab		      SBC	xGain
      7  f970		       a8		      TAY
      8  f971
     50  f971		       b1 bd		      LDA	(mapPtr),Y
     51  f973		       aa		      TAX
     52  f974		       29 0f		      AND	#AND_W3S0P3
     53  f976		       05 8b		      ORA	wall3b
     54  f978		       85 8b		      STA	wall3b
     55  f97a		       29 03		      AND	#AND_W3S0P2
     56  f97c		       85 8a		      STA	wall3a
     57  f97e		       8a		      TXA
     58  f97f		       29 30		      AND	#AND_W3S2P3
     59  f981		       85 a4		      STA	shadow3bb
     60  f983		       29 10		      AND	#AND_W3S1P3
     61  f985		       85 95		      STA	shadow3ba
     62  f987
      0  f987					      X_POS_LOS		; 41 cycles
      1  f987
      2  f987		       98		      TYA
      3  f988		       18		      CLC
      4  f989		       65 ac		      ADC	xLoss
      5  f98b		       38		      SEC
      6  f98c		       e5 ab		      SBC	xGain
      7  f98e		       a8		      TAY
      8  f98f
     64  f98f		       b1 bd		      LDA	(mapPtr),Y
     65  f991		       aa		      TAX
     66  f992		       29 fc		      AND	#AND_W3S0P1
     67  f994		       05 8a		      ORA	wall3a
     68  f996		       85 8a		      STA	wall3a
     69  f998		       8a		      TXA
     70  f999		       29 03		      AND	#AND_W3S2P2
     71  f99b		       85 a3		      STA	shadow3ab
     72  f99d		       29 02		      AND	#AND_W3S1P2
     73  f99f		       85 94		      STA	shadow3aa
     74  f9a1
      0  f9a1					      X_POS_LOS		; 35 cycles
      1  f9a1
      2  f9a1		       98		      TYA
      3  f9a2		       18		      CLC
      4  f9a3		       65 ac		      ADC	xLoss
      5  f9a5		       38		      SEC
      6  f9a6		       e5 ab		      SBC	xGain
      7  f9a8		       a8		      TAY
      8  f9a9
     76  f9a9		       b1 bd		      LDA	(mapPtr),Y
     77  f9ab		       29 c0		      AND	#AND_W3S2P1
     78  f9ad		       05 a3		      ORA	shadow3ab
     79  f9af		       85 a3		      STA	shadow3ab
     80  f9b1		       29 80		      AND	#AND_W3S1P1
     81  f9b3		       05 94		      ORA	shadow3aa
     82  f9b5		       85 94		      STA	shadow3aa
------- FILE walrend.asm
     12  f9b7
     13  f9b7		       85 02		      STA	WSYNC	; At the end, we've consumed 9 scanlines
------- FILE main.asm
     39  f9b9
------- FILE scrend.asm LEVEL 2 PASS 2
      0  f9b9					      INCLUDE	"scrend.asm"	; 14 Scanlines
      1  f9b9							; VePseu's screen renderer
      2  f9b9
      3  f9b9							; Remove the shadows incase only 1 wall is drawn
      4  f9b9
      5  f9b9		       a5 99		      LDA	shadow1a	; 12 cycles
      6  f9bb		       05 80		      ORA	wall1
      7  f9bd		       45 80		      EOR	wall1
      8  f9bf		       85 99		      STA	shadow1a
      9  f9c1
     10  f9c1		       a5 9a		      LDA	shadow1b	; 12 cycles
     11  f9c3		       05 80		      ORA	wall1
     12  f9c5		       45 80		      EOR	wall1
     13  f9c7		       85 9a		      STA	shadow1b
     14  f9c9
     15  f9c9		       a5 9c		      LDA	shadow1d	; 12 cycles
     16  f9cb		       05 80		      ORA	wall1
     17  f9cd		       45 80		      EOR	wall1
     18  f9cf		       85 9c		      STA	shadow1d
     19  f9d1
     20  f9d1		       a5 9d		      LDA	shadow1e	; 12 cycles
     21  f9d3		       05 80		      ORA	wall1
     22  f9d5		       45 80		      EOR	wall1
     23  f9d7		       85 9d		      STA	shadow1e
     24  f9d9
     25  f9d9		       a5 80		      LDA	wall1	; Copy wall one to the four addresses preceding it (15 cycles)
     26  f9db		       85 81		      STA	wall1+1
     27  f9dd		       85 82		      STA	wall1+2
     28  f9df		       85 83		      STA	wall1+3
     29  f9e1		       85 84		      STA	wall1+4
     30  f9e3
     31  f9e3		       a2 00		      LDX	#INDEXINIT	; 2 cycles
     32  f9e5
     33  f9e5				   scrRendLoop		; Totals at 909 cycles
     34  f9e5
     35  f9e5		       b5 85		      LDA	wall2a,X	; Merge walls (12 cycles)
     36  f9e7		       15 80		      ORA	wall1,X
     37  f9e9		       95 85		      STA	wall2a,X
     38  f9eb
     39  f9eb		       b5 8f		      LDA	shadow2aa,X	; Merge A shadows (12 cycles)
     40  f9ed		       15 99		      ORA	shadow1a,X
     41  f9ef		       95 8f		      STA	shadow2aa,X
     42  f9f1
     43  f9f1		       b5 9e		      LDA	shadow2ab,X	; Merge B shadows (12 cycles)
     44  f9f3		       15 99		      ORA	shadow1a,X
     45  f9f5		       95 9e		      STA	shadow2ab,X
     46  f9f7
     47  f9f7		       b5 85		      LDA	wall2a,X	; Overlap walls (16 cycles)
     48  f9f9		       15 99		      ORA	shadow1a,X
     49  f9fb		       55 99		      EOR	shadow1a,X
     50  f9fd		       95 85		      STA	wall2a,X
     51  f9ff
     52  f9ff		       b5 8f		      LDA	shadow2aa,X	; Overlap A shadows (16 cycles)
     53  fa01		       15 85		      ORA	wall2a,X
     54  fa03		       55 85		      EOR	wall2a,X
     55  fa05		       95 8f		      STA	shadow2aa,X
     56  fa07
     57  fa07		       b5 9e		      LDA	shadow2ab,X	; Overlap B shadows (16 cycles)
     58  fa09		       15 85		      ORA	wall2a,X
     59  fa0b		       55 85		      EOR	wall2a,X
     60  fa0d		       95 9e		      STA	shadow2ab,X
     61  fa0f
     62  fa0f		       e8		      INX		; Loop if we haven't rendered all the walls (6 or 7 cycles)
     63  fa10		       e0 0a		      CPX	#WALLCNT
     64  fa12		       d0 d1		      BNE	scrRendLoop
     65  fa14
     66  fa14		       85 02		      STA	WSYNC	; by the end of this we have used 14 scanlines
------- FILE main.asm
     41  fa16
     42  fa16		       a9 78		      LDA	#<jerry
     43  fa18		       85 bf		      STA	sprite
     44  fa1a		       a9 f0		      LDA	#>jerry
     45  fa1c		       85 c0		      STA	sprite+1
     46  fa1e		       a9 0c		      LDA	#$0C
     47  fa20		       85 06		      STA	COLUP0
     48  fa22
     49  fa22		       a9 1e		      LDA	#30
     50  fa24		       85 ba		      STA	spriteHeight
     51  fa26
     52  fa26							; Pad!
     53  fa26
     54  fa26		       a2 00		      LDX	#INDEXINIT
     55  fa28
     56  fa28				   upperPad
     57  fa28		       85 02		      STA	WSYNC
     58  fa2a
     59  fa2a		       e8		      INX
     60  fa2b		       e0 0e		      CPX	#UPPAD_LIMIT
     61  fa2d		       d0 f9		      BNE	upperPad
     62  fa2f
     63  fa2f		       85 02		      STA	WSYNC
     64  fa31
     65  fa31							; Draw everything
     66  fa31
     67  fa31		       a0 28		      LDY	#10 + 30
     68  fa33
------- FILE dispkern.asm LEVEL 2 PASS 2
      0  fa33					      INCLUDE	"dispkern.asm"	; 186 scanlines
      1  fa33							; VePseu's display kernel
      2  fa33
      3  fa33		       4c 9e fd 	      JMP	drawStart
      4  fa36
      5  fa36							;			  FILE/SUBROUTINE NAMING SCHEME:
      6  fa36							;
      7  fa36							; dc_w1s1.asm
      8  fa36							; |   | |
      9  fa36							; |   | |- The shadow variant it draws (A or B, 1 or 2)
     10  fa36							; |   |
     11  fa36							; |   |- The wall it draws
     12  fa36							; |
     13  fa36							; |- Draw-code identifier
     14  fa36
------- FILE drawCode/dc_w1s1.asm LEVEL 3 PASS 2
      0  fa36					      INCLUDE	"drawCode/dc_w1s1.asm"
      1  fa36							; The draw code for the 1st wall and shadow
      2  fa36
      3  fa36				   dc_w1s1
      4  fa36
      5  fa36		       a2 00		      LDX	#INDEXINIT
      6  fa38
      7  fa38				   _dc_w1s1_loop
      8  fa38		       a5 b3		      LDA	wallColour
      9  fa3a		       85 02		      STA	WSYNC
     10  fa3c		       85 08		      STA	COLUPF
     11  fa3e		       a5 80		      LDA	wall1
     12  fa40		       85 0e		      STA	PF1
     13  fa42		       98		      TYA
     14  fa43		       f0 4d		      BEQ	noSprite_1
     15  fa45		       88		      DEY
     16  fa46		       c4 ba		      CPY	spriteHeight
     17  fa48		       b0 51		      BCS	noSprite_2
     18  fa4a		       b1 bf		      LDA	(sprite),Y
     19  fa4c		       85 1b		      STA	GRP0
     20  fa4e				   noSprite_ret
     21  fa4e		       a5 80		      LDA	wall1
     22  fa50		       85 0f		      STA	PF2
      0  fa52					      DELAY	6
      1  fa52					      REPEAT	6/2 - 6%2
      2  fa52		       ea		      NOP
      1  fa52					      REPEND
      2  fa53		       ea		      NOP
      1  fa53					      REPEND
      2  fa54		       ea		      NOP
      3  fa55					      REPEND
      4  fa55
      5  fa55				  -	      REPEAT	6%2
      6  fa55				  -	      STA	DUMP
      7  fa55					      REPEND
     24  fa55		       85 0d		      STA	PF0
      0  fa57					      DELAY	5
      1  fa57					      REPEAT	5/2 - 5%2
      2  fa57		       ea		      NOP
      3  fa58					      REPEND
      4  fa58
      5  fa58					      REPEAT	5%2
      6  fa58		       85 30		      STA	DUMP
      7  fa5a					      REPEND
     26  fa5a		       a9 00		      LDA	#NULL
     27  fa5c		       85 0d		      STA	PF0
      0  fa5e					      DELAY	10
      1  fa5e					      REPEAT	10/2 - 10%2
      2  fa5e		       ea		      NOP
      1  fa5e					      REPEND
      2  fa5f		       ea		      NOP
      1  fa5f					      REPEND
      2  fa60		       ea		      NOP
      1  fa60					      REPEND
      2  fa61		       ea		      NOP
      1  fa61					      REPEND
      2  fa62		       ea		      NOP
      3  fa63					      REPEND
      4  fa63
      5  fa63				  -	      REPEAT	10%2
      6  fa63				  -	      STA	DUMP
      7  fa63					      REPEND
     29  fa63		       85 0f		      STA	PF2
     30  fa65
     31  fa65		       85 02		      STA	WSYNC
     32  fa67		       a5 b4		      LDA	shadowColour
     33  fa69		       85 08		      STA	COLUPF
     34  fa6b		       a5 99		      LDA	shadow1a
     35  fa6d		       3d 00 f0 	      AND	and_1a,X
     36  fa70		       85 0e		      STA	PF1
     37  fa72		       a5 9a		      LDA	shadow1b
     38  fa74		       3d 1e f0 	      AND	and_1b,X
     39  fa77		       85 0f		      STA	PF2
      0  fa79					      DELAY	9
      1  fa79					      REPEAT	9/2 - 9%2
      2  fa79		       ea		      NOP
      1  fa79					      REPEND
      2  fa7a		       ea		      NOP
      1  fa7a					      REPEND
      2  fa7b		       ea		      NOP
      3  fa7c					      REPEND
      4  fa7c
      5  fa7c					      REPEAT	9%2
      6  fa7c		       85 30		      STA	DUMP
      7  fa7e					      REPEND
     41  fa7e		       a5 9c		      LDA	shadow1d
     42  fa80		       3d 3c f0 	      AND	and_1c,X
     43  fa83		       85 0e		      STA	PF1
     44  fa85		       a5 9d		      LDA	shadow1e
     45  fa87		       3d 5a f0 	      AND	and_1d,X
     46  fa8a		       85 0f		      STA	PF2
     47  fa8c
     48  fa8c		       e8		      INX
     49  fa8d		       e0 1e		      CPX	#30
     50  fa8f		       d0 a7		      BNE	_dc_w1s1_loop
     51  fa91
     52  fa91		       60		      RTS
     53  fa92
     54  fa92				   noSprite_1
      0  fa92					      DELAY	11
      1  fa92					      REPEAT	11/2 - 11%2
      2  fa92		       ea		      NOP
      1  fa92					      REPEND
      2  fa93		       ea		      NOP
      1  fa93					      REPEND
      2  fa94		       ea		      NOP
      1  fa94					      REPEND
      2  fa95		       ea		      NOP
      3  fa96					      REPEND
      4  fa96
      5  fa96					      REPEAT	11%2
      6  fa96		       85 30		      STA	DUMP
      7  fa98					      REPEND
     56  fa98		       4c 4e fa 	      JMP	noSprite_ret
     57  fa9b
     58  fa9b				   noSprite_2
      0  fa9b					      DELAY	4
      1  fa9b					      REPEAT	4/2 - 4%2
      2  fa9b		       ea		      NOP
      1  fa9b					      REPEND
      2  fa9c		       ea		      NOP
      3  fa9d					      REPEND
      4  fa9d
      5  fa9d				  -	      REPEAT	4%2
      6  fa9d				  -	      STA	DUMP
      7  fa9d					      REPEND
     60  fa9d		       4c 4e fa 	      JMP	noSprite_ret
------- FILE dispkern.asm
------- FILE drawCode/dc_w1s2.asm LEVEL 3 PASS 2
      0  faa0					      INCLUDE	"drawCode/dc_w1s2.asm"
      1  faa0							; The draw code for the 1st wall and it's second shadow
      2  faa0
      3  faa0				   dc_w1s2
      4  faa0
      5  faa0		       a2 00		      LDX	#INDEXINIT
      6  faa2		       a0 09		      LDY	#9
      7  faa4		       4c af fa 	      JMP	_dc_w1s2_start
      8  faa7
      9  faa7				   _dc_w1s2_loop
     10  faa7		       85 02		      STA	WSYNC
      0  faa9					      DELAY	12
      1  faa9					      REPEAT	12/2 - 12%2
      2  faa9		       ea		      NOP
      1  faa9					      REPEND
      2  faaa		       ea		      NOP
      1  faaa					      REPEND
      2  faab		       ea		      NOP
      1  faab					      REPEND
      2  faac		       ea		      NOP
      1  faac					      REPEND
      2  faad		       ea		      NOP
      1  faad					      REPEND
      2  faae		       ea		      NOP
      3  faaf					      REPEND
      4  faaf
      5  faaf				  -	      REPEAT	12%2
      6  faaf				  -	      STA	DUMP
      7  faaf					      REPEND
     12  faaf				   _dc_w1s2_start
     13  faaf		       a5 b3		      LDA	wallColour
     14  fab1		       85 08		      STA	COLUPF
     15  fab3		       a5 80		      LDA	wall1
     16  fab5		       85 0e		      STA	PF1
     17  fab7		       85 0f		      STA	PF2
      0  fab9					      DELAY	16
      1  fab9					      REPEAT	16/2 - 16%2
      2  fab9		       ea		      NOP
      1  fab9					      REPEND
      2  faba		       ea		      NOP
      1  faba					      REPEND
      2  fabb		       ea		      NOP
      1  fabb					      REPEND
      2  fabc		       ea		      NOP
      1  fabc					      REPEND
      2  fabd		       ea		      NOP
      1  fabd					      REPEND
      2  fabe		       ea		      NOP
      1  fabe					      REPEND
      2  fabf		       ea		      NOP
      1  fabf					      REPEND
      2  fac0		       ea		      NOP
      3  fac1					      REPEND
      4  fac1
      5  fac1				  -	      REPEAT	16%2
      6  fac1				  -	      STA	DUMP
      7  fac1					      REPEND
     19  fac1		       85 0d		      STA	PF0
      0  fac3					      DELAY	3
      1  fac3				  -	      REPEAT	3/2 - 3%2
      2  fac3				  -	      NOP
      3  fac3					      REPEND
      4  fac3
      5  fac3					      REPEAT	3%2
      6  fac3		       85 30		      STA	DUMP
      7  fac5					      REPEND
     21  fac5		       a9 00		      LDA	#NULL
     22  fac7		       85 0d		      STA	PF0
      0  fac9					      DELAY	10
      1  fac9					      REPEAT	10/2 - 10%2
      2  fac9		       ea		      NOP
      1  fac9					      REPEND
      2  faca		       ea		      NOP
      1  faca					      REPEND
      2  facb		       ea		      NOP
      1  facb					      REPEND
      2  facc		       ea		      NOP
      1  facc					      REPEND
      2  facd		       ea		      NOP
      3  face					      REPEND
      4  face
      5  face				  -	      REPEAT	10%2
      6  face				  -	      STA	DUMP
      7  face					      REPEND
     24  face		       85 0f		      STA	PF2
     25  fad0
     26  fad0		       85 02		      STA	WSYNC
     27  fad2		       a5 b4		      LDA	shadowColour
     28  fad4		       85 08		      STA	COLUPF
     29  fad6		       a5 99		      LDA	shadow1a
     30  fad8		       39 00 f0 	      AND	and_1a,Y
     31  fadb		       85 0e		      STA	PF1
     32  fadd		       a5 9a		      LDA	shadow1b
     33  fadf		       39 1e f0 	      AND	and_1b,Y
     34  fae2		       85 0f		      STA	PF2
      0  fae4					      DELAY	9
      1  fae4					      REPEAT	9/2 - 9%2
      2  fae4		       ea		      NOP
      1  fae4					      REPEND
      2  fae5		       ea		      NOP
      1  fae5					      REPEND
      2  fae6		       ea		      NOP
      3  fae7					      REPEND
      4  fae7
      5  fae7					      REPEAT	9%2
      6  fae7		       85 30		      STA	DUMP
      7  fae9					      REPEND
     36  fae9		       a5 9c		      LDA	shadow1d
     37  faeb		       39 3c f0 	      AND	and_1c,Y
     38  faee		       85 0e		      STA	PF1
     39  faf0		       a5 9d		      LDA	shadow1e
     40  faf2		       39 5a f0 	      AND	and_1d,Y
     41  faf5		       85 0f		      STA	PF2
     42  faf7
     43  faf7		       e8		      INX
     44  faf8		       e0 03		      CPX	#PIXH
     45  fafa		       d0 ab		      BNE	_dc_w1s2_loop
     46  fafc		       88		      DEY
     47  fafd
     48  fafd		       a2 00		      LDX	#NULL
     49  faff
     50  faff		       c0 01		      CPY	#LOWSHAD_LIMIT
     51  fb01		       d0 a4		      BNE	_dc_w1s2_loop
     52  fb03
     53  fb03		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s1.asm LEVEL 3 PASS 2
      0  fb04					      INCLUDE	"drawCode/dc_w2s1.asm"
      1  fb04							; The second wall and it's first shadow
      2  fb04
      3  fb04				   dc_w2s1
      4  fb04
      5  fb04		       a2 00		      LDX	#INDEXINIT
      6  fb06		       4c 10 fb 	      JMP	_dc_w2s1_start
      7  fb09
      8  fb09				   _dc_w2s1_loop
      9  fb09		       85 02		      STA	WSYNC
      0  fb0b					      DELAY	10	; Delay to keep the timing constant
      1  fb0b					      REPEAT	10/2 - 10%2
      2  fb0b		       ea		      NOP
      1  fb0b					      REPEND
      2  fb0c		       ea		      NOP
      1  fb0c					      REPEND
      2  fb0d		       ea		      NOP
      1  fb0d					      REPEND
      2  fb0e		       ea		      NOP
      1  fb0e					      REPEND
      2  fb0f		       ea		      NOP
      3  fb10					      REPEND
      4  fb10
      5  fb10				  -	      REPEAT	10%2
      6  fb10				  -	      STA	DUMP
      7  fb10					      REPEND
     11  fb10				   _dc_w2s1_start
     12  fb10		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fb12		       85 08		      STA	COLUPF
     14  fb14		       a5 85		      LDA	wall2a
     15  fb16		       85 0e		      STA	PF1
     16  fb18		       a5 86		      LDA	wall2b
     17  fb1a		       85 0f		      STA	PF2
      0  fb1c					      DELAY	14
      1  fb1c					      REPEAT	14/2 - 14%2
      2  fb1c		       ea		      NOP
      1  fb1c					      REPEND
      2  fb1d		       ea		      NOP
      1  fb1d					      REPEND
      2  fb1e		       ea		      NOP
      1  fb1e					      REPEND
      2  fb1f		       ea		      NOP
      1  fb1f					      REPEND
      2  fb20		       ea		      NOP
      1  fb20					      REPEND
      2  fb21		       ea		      NOP
      1  fb21					      REPEND
      2  fb22		       ea		      NOP
      3  fb23					      REPEND
      4  fb23
      5  fb23				  -	      REPEAT	14%2
      6  fb23				  -	      STA	DUMP
      7  fb23					      REPEND
     19  fb23		       a5 87		      LDA	wall2c
     20  fb25		       85 0d		      STA	PF0
     21  fb27		       a5 88		      LDA	wall2d
     22  fb29		       85 0e		      STA	PF1
     23  fb2b		       a5 89		      LDA	wall2e
     24  fb2d		       85 0f		      STA	PF2
     25  fb2f		       a9 00		      LDA	#NULL
      0  fb31					      DELAY	2
      1  fb31					      REPEAT	2/2 - 2%2
      2  fb31		       ea		      NOP
      3  fb32					      REPEND
      4  fb32
      5  fb32				  -	      REPEAT	2%2
      6  fb32				  -	      STA	DUMP
      7  fb32					      REPEND
     27  fb32		       85 0f		      STA	PF2
     28  fb34		       85 0d		      STA	PF0
     29  fb36
     30  fb36		       85 02		      STA	WSYNC	; Draw the shadow
     31  fb38		       a5 b4		      LDA	shadowColour
     32  fb3a		       85 08		      STA	COLUPF
     33  fb3c		       a5 8f		      LDA	shadow2aa
     34  fb3e		       05 99		      ORA	shadow1a
     35  fb40		       85 0e		      STA	PF1
     36  fb42		       a5 90		      LDA	shadow2ba
     37  fb44		       05 9a		      ORA	shadow1b
     38  fb46		       85 0f		      STA	PF2
     39  fb48		       a5 91		      LDA	shadow2ca
     40  fb4a		       85 0d		      STA	PF0
     41  fb4c		       a5 92		      LDA	shadow2da
     42  fb4e		       05 9b		      ORA	shadow1c
     43  fb50		       85 0e		      STA	PF1
     44  fb52		       a5 93		      LDA	shadow2ea
     45  fb54		       05 9d		      ORA	shadow1e
     46  fb56		       85 0f		      STA	PF2
     47  fb58		       a9 00		      LDA	#NULL
     48  fb5a		       85 0d		      STA	PF0
     49  fb5c
     50  fb5c		       e8		      INX		; Loop for the rest of the pixel's height
     51  fb5d		       e0 03		      CPX	#PIXH
     52  fb5f		       d0 a8		      BNE	_dc_w2s1_loop
     53  fb61
      0  fb61					      DELAY	10	; Delay to keep timing constant
      1  fb61					      REPEAT	10/2 - 10%2
      2  fb61		       ea		      NOP
      1  fb61					      REPEND
      2  fb62		       ea		      NOP
      1  fb62					      REPEND
      2  fb63		       ea		      NOP
      1  fb63					      REPEND
      2  fb64		       ea		      NOP
      1  fb64					      REPEND
      2  fb65		       ea		      NOP
      3  fb66					      REPEND
      4  fb66
      5  fb66				  -	      REPEAT	10%2
      6  fb66				  -	      STA	DUMP
      7  fb66					      REPEND
     55  fb66
     56  fb66		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s2.asm LEVEL 3 PASS 2
      0  fb67					      INCLUDE	"drawCode/dc_w2s2.asm"
      1  fb67							; The draw code for the 1st wall and shadow
      2  fb67
      3  fb67				   dc_w2s2
      4  fb67
      5  fb67		       a2 00		      LDX	#INDEXINIT
      6  fb69		       4c 73 fb 	      JMP	_dc_w2s2_start
      7  fb6c
      8  fb6c				   _dc_w2s2_loop
      9  fb6c		       85 02		      STA	WSYNC
      0  fb6e					      DELAY	10
      1  fb6e					      REPEAT	10/2 - 10%2
      2  fb6e		       ea		      NOP
      1  fb6e					      REPEND
      2  fb6f		       ea		      NOP
      1  fb6f					      REPEND
      2  fb70		       ea		      NOP
      1  fb70					      REPEND
      2  fb71		       ea		      NOP
      1  fb71					      REPEND
      2  fb72		       ea		      NOP
      3  fb73					      REPEND
      4  fb73
      5  fb73				  -	      REPEAT	10%2
      6  fb73				  -	      STA	DUMP
      7  fb73					      REPEND
     11  fb73				   _dc_w2s2_start
     12  fb73		       a5 b3		      LDA	wallColour
     13  fb75		       85 08		      STA	COLUPF
     14  fb77		       a5 85		      LDA	wall2a
     15  fb79		       85 0e		      STA	PF1
     16  fb7b		       a5 86		      LDA	wall2b
     17  fb7d		       85 0f		      STA	PF2
      0  fb7f					      DELAY	14
      1  fb7f					      REPEAT	14/2 - 14%2
      2  fb7f		       ea		      NOP
      1  fb7f					      REPEND
      2  fb80		       ea		      NOP
      1  fb80					      REPEND
      2  fb81		       ea		      NOP
      1  fb81					      REPEND
      2  fb82		       ea		      NOP
      1  fb82					      REPEND
      2  fb83		       ea		      NOP
      1  fb83					      REPEND
      2  fb84		       ea		      NOP
      1  fb84					      REPEND
      2  fb85		       ea		      NOP
      3  fb86					      REPEND
      4  fb86
      5  fb86				  -	      REPEAT	14%2
      6  fb86				  -	      STA	DUMP
      7  fb86					      REPEND
     19  fb86		       a5 87		      LDA	wall2c
     20  fb88		       85 0d		      STA	PF0
     21  fb8a		       a5 88		      LDA	wall2d
     22  fb8c		       85 0e		      STA	PF1
     23  fb8e		       a5 89		      LDA	wall2e
     24  fb90		       85 0f		      STA	PF2
     25  fb92		       a9 00		      LDA	#NULL
      0  fb94					      DELAY	2
      1  fb94					      REPEAT	2/2 - 2%2
      2  fb94		       ea		      NOP
      3  fb95					      REPEND
      4  fb95
      5  fb95				  -	      REPEAT	2%2
      6  fb95				  -	      STA	DUMP
      7  fb95					      REPEND
     27  fb95		       85 0f		      STA	PF2
     28  fb97		       85 0d		      STA	PF0
     29  fb99
     30  fb99		       85 02		      STA	WSYNC
     31  fb9b		       a5 b4		      LDA	shadowColour
     32  fb9d		       85 08		      STA	COLUPF
     33  fb9f		       a5 9e		      LDA	shadow2ab
     34  fba1		       05 99		      ORA	shadow1a
     35  fba3		       85 0e		      STA	PF1
     36  fba5		       a5 9f		      LDA	shadow2bb
     37  fba7		       05 9a		      ORA	shadow1b
     38  fba9		       85 0f		      STA	PF2
     39  fbab		       a5 a0		      LDA	shadow2cb
     40  fbad		       85 0d		      STA	PF0
     41  fbaf		       a5 a1		      LDA	shadow2db
     42  fbb1		       05 9b		      ORA	shadow1c
     43  fbb3		       85 0e		      STA	PF1
     44  fbb5		       a5 a2		      LDA	shadow2eb
     45  fbb7		       05 9d		      ORA	shadow1e
     46  fbb9		       85 0f		      STA	PF2
     47  fbbb		       a9 00		      LDA	#NULL
     48  fbbd		       85 0d		      STA	PF0
     49  fbbf
     50  fbbf		       e8		      INX
     51  fbc0		       e0 03		      CPX	#PIXH
     52  fbc2		       d0 a8		      BNE	_dc_w2s2_loop
     53  fbc4
     54  fbc4		       a2 00		      LDX	#NULL
     55  fbc6
      0  fbc6					      DELAY	8
      1  fbc6					      REPEAT	8/2 - 8%2
      2  fbc6		       ea		      NOP
      1  fbc6					      REPEND
      2  fbc7		       ea		      NOP
      1  fbc7					      REPEND
      2  fbc8		       ea		      NOP
      1  fbc8					      REPEND
      2  fbc9		       ea		      NOP
      3  fbca					      REPEND
      4  fbca
      5  fbca				  -	      REPEAT	8%2
      6  fbca				  -	      STA	DUMP
      7  fbca					      REPEND
     57  fbca
     58  fbca		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s1.asm LEVEL 3 PASS 2
      0  fbcb					      INCLUDE	"drawCode/dc_w3s1.asm"
      1  fbcb							; The draw code for the 1st wall and shadow
      2  fbcb
      3  fbcb				   dc_w3s1
      4  fbcb
      5  fbcb		       a2 00		      LDX	#INDEXINIT
      6  fbcd		       4c d7 fb 	      JMP	_dc_w3s1_start
      7  fbd0
      8  fbd0				   _dc_w3s1_loop
      9  fbd0		       85 02		      STA	WSYNC
      0  fbd2					      DELAY	10
      1  fbd2					      REPEAT	10/2 - 10%2
      2  fbd2		       ea		      NOP
      1  fbd2					      REPEND
      2  fbd3		       ea		      NOP
      1  fbd3					      REPEND
      2  fbd4		       ea		      NOP
      1  fbd4					      REPEND
      2  fbd5		       ea		      NOP
      1  fbd5					      REPEND
      2  fbd6		       ea		      NOP
      3  fbd7					      REPEND
      4  fbd7
      5  fbd7				  -	      REPEAT	10%2
      6  fbd7				  -	      STA	DUMP
      7  fbd7					      REPEND
     11  fbd7				   _dc_w3s1_start
     12  fbd7		       a5 b3		      LDA	wallColour
     13  fbd9		       85 08		      STA	COLUPF
     14  fbdb		       a5 8a		      LDA	wall3a
     15  fbdd		       85 0e		      STA	PF1
     16  fbdf		       a5 8b		      LDA	wall3b
     17  fbe1		       85 0f		      STA	PF2
      0  fbe3					      DELAY	14
      1  fbe3					      REPEAT	14/2 - 14%2
      2  fbe3		       ea		      NOP
      1  fbe3					      REPEND
      2  fbe4		       ea		      NOP
      1  fbe4					      REPEND
      2  fbe5		       ea		      NOP
      1  fbe5					      REPEND
      2  fbe6		       ea		      NOP
      1  fbe6					      REPEND
      2  fbe7		       ea		      NOP
      1  fbe7					      REPEND
      2  fbe8		       ea		      NOP
      1  fbe8					      REPEND
      2  fbe9		       ea		      NOP
      3  fbea					      REPEND
      4  fbea
      5  fbea				  -	      REPEAT	14%2
      6  fbea				  -	      STA	DUMP
      7  fbea					      REPEND
     19  fbea		       a5 8c		      LDA	wall3c
     20  fbec		       85 0d		      STA	PF0
     21  fbee		       a5 8d		      LDA	wall3d
     22  fbf0		       85 0e		      STA	PF1
     23  fbf2		       a5 8e		      LDA	wall3e
     24  fbf4		       85 0f		      STA	PF2
     25  fbf6		       a9 00		      LDA	#NULL
      0  fbf8					      DELAY	2
      1  fbf8					      REPEAT	2/2 - 2%2
      2  fbf8		       ea		      NOP
      3  fbf9					      REPEND
      4  fbf9
      5  fbf9				  -	      REPEAT	2%2
      6  fbf9				  -	      STA	DUMP
      7  fbf9					      REPEND
     27  fbf9		       85 0f		      STA	PF2
     28  fbfb		       85 0d		      STA	PF0
     29  fbfd
     30  fbfd		       85 02		      STA	WSYNC
     31  fbff		       a5 b4		      LDA	shadowColour
     32  fc01		       85 08		      STA	COLUPF
     33  fc03		       a5 94		      LDA	shadow3aa
     34  fc05		       05 9e		      ORA	shadow2ab
     35  fc07		       85 0e		      STA	PF1
     36  fc09		       a5 95		      LDA	shadow3ba
     37  fc0b		       05 9f		      ORA	shadow2bb
     38  fc0d		       85 0f		      STA	PF2
     39  fc0f		       a5 96		      LDA	shadow3ca
     40  fc11		       05 a0		      ORA	shadow2cb
     41  fc13		       85 0d		      STA	PF0
     42  fc15		       a5 97		      LDA	shadow3da
     43  fc17		       05 a1		      ORA	shadow2db
     44  fc19		       85 0e		      STA	PF1
     45  fc1b		       a5 98		      LDA	shadow3ea
     46  fc1d		       05 a2		      ORA	shadow2eb
     47  fc1f		       85 0f		      STA	PF2
     48  fc21		       a9 00		      LDA	#NULL
     49  fc23		       85 0d		      STA	PF0
     50  fc25
     51  fc25		       e8		      INX
     52  fc26		       e0 03		      CPX	#PIXH
     53  fc28		       d0 a6		      BNE	_dc_w3s1_loop
     54  fc2a
     55  fc2a		       a2 00		      LDX	#NULL
     56  fc2c
      0  fc2c					      DELAY	5
      1  fc2c					      REPEAT	5/2 - 5%2
      2  fc2c		       ea		      NOP
      3  fc2d					      REPEND
      4  fc2d
      5  fc2d					      REPEAT	5%2
      6  fc2d		       85 30		      STA	DUMP
      7  fc2f					      REPEND
     58  fc2f
     59  fc2f		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s2.asm LEVEL 3 PASS 2
      0  fc30					      INCLUDE	"drawCode/dc_w3s2.asm"
      1  fc30							; The draw code for 3rd wall and it's second shadow
      2  fc30
      3  fc30				   dc_w3s2
      4  fc30
      5  fc30		       a2 00		      LDX	#INDEXINIT
      6  fc32		       4c 3c fc 	      JMP	_dc_w3s2_start
      7  fc35
      8  fc35				   _dc_w3s2_loop
      9  fc35		       85 02		      STA	WSYNC
      0  fc37					      DELAY	10	; Delay to keep the timing constant
      1  fc37					      REPEAT	10/2 - 10%2
      2  fc37		       ea		      NOP
      1  fc37					      REPEND
      2  fc38		       ea		      NOP
      1  fc38					      REPEND
      2  fc39		       ea		      NOP
      1  fc39					      REPEND
      2  fc3a		       ea		      NOP
      1  fc3a					      REPEND
      2  fc3b		       ea		      NOP
      3  fc3c					      REPEND
      4  fc3c
      5  fc3c				  -	      REPEAT	10%2
      6  fc3c				  -	      STA	DUMP
      7  fc3c					      REPEND
     11  fc3c				   _dc_w3s2_start
     12  fc3c		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fc3e		       85 08		      STA	COLUPF
     14  fc40		       a5 8a		      LDA	wall3a
     15  fc42		       85 0e		      STA	PF1
     16  fc44		       a5 8b		      LDA	wall3b
     17  fc46		       85 0f		      STA	PF2
      0  fc48					      DELAY	14
      1  fc48					      REPEAT	14/2 - 14%2
      2  fc48		       ea		      NOP
      1  fc48					      REPEND
      2  fc49		       ea		      NOP
      1  fc49					      REPEND
      2  fc4a		       ea		      NOP
      1  fc4a					      REPEND
      2  fc4b		       ea		      NOP
      1  fc4b					      REPEND
      2  fc4c		       ea		      NOP
      1  fc4c					      REPEND
      2  fc4d		       ea		      NOP
      1  fc4d					      REPEND
      2  fc4e		       ea		      NOP
      3  fc4f					      REPEND
      4  fc4f
      5  fc4f				  -	      REPEAT	14%2
      6  fc4f				  -	      STA	DUMP
      7  fc4f					      REPEND
     19  fc4f		       a5 8c		      LDA	wall3c
     20  fc51		       85 0d		      STA	PF0
     21  fc53		       a5 8d		      LDA	wall3d
     22  fc55		       85 0e		      STA	PF1
     23  fc57		       a5 8e		      LDA	wall3e
     24  fc59		       85 0f		      STA	PF2
     25  fc5b		       a9 00		      LDA	#NULL
      0  fc5d					      DELAY	2
      1  fc5d					      REPEAT	2/2 - 2%2
      2  fc5d		       ea		      NOP
      3  fc5e					      REPEND
      4  fc5e
      5  fc5e				  -	      REPEAT	2%2
      6  fc5e				  -	      STA	DUMP
      7  fc5e					      REPEND
     27  fc5e		       85 0f		      STA	PF2
     28  fc60		       85 0d		      STA	PF0
     29  fc62
     30  fc62		       85 02		      STA	WSYNC	; Draw the shadow
     31  fc64		       a5 b4		      LDA	shadowColour
     32  fc66		       85 08		      STA	COLUPF
     33  fc68		       a5 a3		      LDA	shadow3ab
     34  fc6a		       05 9e		      ORA	shadow2ab
     35  fc6c		       85 0e		      STA	PF1
     36  fc6e		       a5 a4		      LDA	shadow3bb
     37  fc70		       05 9f		      ORA	shadow2bb
     38  fc72		       85 0f		      STA	PF2
     39  fc74		       a5 a5		      LDA	shadow3cb
     40  fc76		       05 a0		      ORA	shadow2cb
     41  fc78		       85 0d		      STA	PF0
     42  fc7a		       a5 a6		      LDA	shadow3db
     43  fc7c		       05 a1		      ORA	shadow2db
     44  fc7e		       85 0e		      STA	PF1
     45  fc80		       a5 a7		      LDA	shadow3eb
     46  fc82		       05 a2		      ORA	shadow2eb
     47  fc84		       85 0f		      STA	PF2
     48  fc86		       a9 00		      LDA	#NULL
     49  fc88		       85 0d		      STA	PF0
     50  fc8a
     51  fc8a		       e8		      INX
     52  fc8b		       e0 03		      CPX	#PIXH
     53  fc8d		       d0 a6		      BNE	_dc_w3s2_loop
     54  fc8f
      0  fc8f					      DELAY	7	; Delay to keep the timing constant
      1  fc8f					      REPEAT	7/2 - 7%2
      2  fc8f		       ea		      NOP
      1  fc8f					      REPEND
      2  fc90		       ea		      NOP
      3  fc91					      REPEND
      4  fc91
      5  fc91					      REPEAT	7%2
      6  fc91		       85 30		      STA	DUMP
      7  fc93					      REPEND
     56  fc93
     57  fc93		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w4s0.asm LEVEL 3 PASS 2
      0  fc94					      INCLUDE	"drawCode/dc_w4s0.asm"
      1  fc94							; The draw code for the 4th wall
      2  fc94
      3  fc94				   dc_w4s0
      4  fc94
      5  fc94		       a2 00		      LDX	#INDEXINIT
      6  fc96		       4c a0 fc 	      JMP	_dc_w4s0_start
      7  fc99
      8  fc99				   _dc_w4s0_loop
      9  fc99		       85 02		      STA	WSYNC
      0  fc9b					      DELAY	10
      1  fc9b					      REPEAT	10/2 - 10%2
      2  fc9b		       ea		      NOP
      1  fc9b					      REPEND
      2  fc9c		       ea		      NOP
      1  fc9c					      REPEND
      2  fc9d		       ea		      NOP
      1  fc9d					      REPEND
      2  fc9e		       ea		      NOP
      1  fc9e					      REPEND
      2  fc9f		       ea		      NOP
      3  fca0					      REPEND
      4  fca0
      5  fca0				  -	      REPEAT	10%2
      6  fca0				  -	      STA	DUMP
      7  fca0					      REPEND
     11  fca0				   _dc_w4s0_start
     12  fca0		       a5 b3		      LDA	wallColour
     13  fca2		       85 08		      STA	COLUPF
     14  fca4		       a9 ff		      LDA	#FULLWALL
     15  fca6		       45 a3		      EOR	shadow3ab
     16  fca8		       85 0e		      STA	PF1
     17  fcaa		       a9 ff		      LDA	#FULLWALL
     18  fcac		       45 a4		      EOR	shadow3bb
     19  fcae		       85 0f		      STA	PF2
      0  fcb0					      DELAY	4
      1  fcb0					      REPEAT	4/2 - 4%2
      2  fcb0		       ea		      NOP
      1  fcb0					      REPEND
      2  fcb1		       ea		      NOP
      3  fcb2					      REPEND
      4  fcb2
      5  fcb2				  -	      REPEAT	4%2
      6  fcb2				  -	      STA	DUMP
      7  fcb2					      REPEND
     21  fcb2		       a9 ff		      LDA	#FULLWALL
     22  fcb4		       45 a5		      EOR	shadow3cb
     23  fcb6		       85 0d		      STA	PF0
     24  fcb8		       a9 ff		      LDA	#FULLWALL
     25  fcba		       45 a6		      EOR	shadow3db
     26  fcbc		       85 0e		      STA	PF1
     27  fcbe		       a9 ff		      LDA	#FULLWALL
     28  fcc0		       45 a7		      EOR	shadow3eb
     29  fcc2		       85 0f		      STA	PF2
     30  fcc4		       a9 00		      LDA	#NULL
      0  fcc6					      DELAY	2
      1  fcc6					      REPEAT	2/2 - 2%2
      2  fcc6		       ea		      NOP
      3  fcc7					      REPEND
      4  fcc7
      5  fcc7				  -	      REPEAT	2%2
      6  fcc7				  -	      STA	DUMP
      7  fcc7					      REPEND
     32  fcc7		       85 0f		      STA	PF2
     33  fcc9		       85 0d		      STA	PF0
     34  fccb
     35  fccb		       85 02		      STA	WSYNC
     36  fccd		       a5 b4		      LDA	shadowColour
     37  fccf		       85 08		      STA	COLUPF
     38  fcd1		       a5 a3		      LDA	shadow3ab
     39  fcd3		       05 9e		      ORA	shadow2ab
     40  fcd5		       85 0e		      STA	PF1
     41  fcd7		       a5 a4		      LDA	shadow3bb
     42  fcd9		       05 9f		      ORA	shadow2bb
     43  fcdb		       85 0f		      STA	PF2
     44  fcdd		       a5 a5		      LDA	shadow3cb
     45  fcdf		       05 a0		      ORA	shadow2cb
     46  fce1		       85 0d		      STA	PF0
     47  fce3		       a5 a6		      LDA	shadow3db
     48  fce5		       05 a1		      ORA	shadow2db
     49  fce7		       85 0e		      STA	PF1
     50  fce9		       a5 a7		      LDA	shadow3eb
     51  fceb		       05 a2		      ORA	shadow2eb
     52  fced		       85 0f		      STA	PF2
     53  fcef		       a9 00		      LDA	#NULL
     54  fcf1		       85 0d		      STA	PF0
     55  fcf3
     56  fcf3		       e8		      INX
     57  fcf4		       e0 03		      CPX	#PIXH
     58  fcf6		       d0 a1		      BNE	_dc_w4s0_loop
     59  fcf8
      0  fcf8					      DELAY	7
      1  fcf8					      REPEAT	7/2 - 7%2
      2  fcf8		       ea		      NOP
      1  fcf8					      REPEND
      2  fcf9		       ea		      NOP
      3  fcfa					      REPEND
      4  fcfa
      5  fcfa					      REPEAT	7%2
      6  fcfa		       85 30		      STA	DUMP
      7  fcfc					      REPEND
     61  fcfc
     62  fcfc		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/mmDraw.asm LEVEL 3 PASS 2
      0  fcfd					      INCLUDE	"drawCode/mmDraw.asm"
      1  fcfd							; Draws the compass to the screen
      2  fcfd
------- FILE drawCode/mmRender.asm LEVEL 4 PASS 2
      0  fcfd					      INCLUDE	"drawCode/mmRender.asm"
      1  fcfd							; Render the minimap
      2  fcfd
      3  fcfd				   mmRender
      4  fcfd		       85 2b		      STA	HMCLR
      5  fcff							; Set the colour of the player
      6  fcff		       a9 cc		      LDA	#PLYRCOLU
      7  fd01		       85 08		      STA	COLUPF
      8  fd03							; Set the colour of the map
      9  fd03		       a9 0e		      LDA	#MAPCOLU
     10  fd05		       85 06		      STA	COLUP0
     11  fd07		       85 07		      STA	COLUP1
     12  fd09							; Get the player's position and translate it into horizontal movement
     13  fd09		       a9 08		      LDA	#%00001000
     14  fd0b		       18		      CLC
     15  fd0c		       38		      SEC
     16  fd0d		       e5 a9		      SBC	playerPos
     17  fd0f		       0a		      ASL
     18  fd10		       0a		      ASL
     19  fd11		       0a		      ASL
     20  fd12		       0a		      ASL
     21  fd13		       85 b7		      STA	horzPos_plyr
     22  fd15
     23  fd15							; Set the map's position to the right values
     24  fd15		       a9 00		      LDA	#HADJ_A
     25  fd17		       85 b5		      STA	horzPos_mA
     26  fd19		       a9 10		      LDA	#HADJ_B
     27  fd1b		       85 b6		      STA	horzPos_mB
     28  fd1d
     29  fd1d		       85 02		      STA	WSYNC
     30  fd1f		       a2 00		      LDX	#INDEXINIT
     31  fd21
     32  fd21				   _mmRender_wait1
     33  fd21		       e8		      INX
     34  fd22		       e0 05		      CPX	#HWAIT
     35  fd24		       d0 fb		      BNE	_mmRender_wait1
      0  fd26					      DELAY	HDELAY1
      1  fd26					      REPEAT	HDELAY1/2 - HDELAY1%2
      2  fd26		       ea		      NOP
      1  fd26					      REPEND
      2  fd27		       ea		      NOP
      3  fd28					      REPEND
      4  fd28
      5  fd28					      REPEAT	HDELAY1%2
      6  fd28		       85 30		      STA	DUMP
      7  fd2a					      REPEND
     37  fd2a		       85 10		      STA	RESP0
     38  fd2c		       85 11		      STA	RESP1
     39  fd2e
     40  fd2e		       a5 a9		      LDA	playerPos
     41  fd30
     42  fd30		       85 02		      STA	WSYNC
     43  fd32		       a2 00		      LDX	#INDEXINIT
     44  fd34
     45  fd34				   _mmRender_wait2
     46  fd34		       e8		      INX
     47  fd35		       e0 05		      CPX	#HWAIT
     48  fd37		       d0 fb		      BNE	_mmRender_wait2
      0  fd39					      DELAY	HDELAY2
      1  fd39					      REPEAT	HDELAY2/2 - HDELAY2%2
      2  fd39		       ea		      NOP
      1  fd39					      REPEND
      2  fd3a		       ea		      NOP
      1  fd3a					      REPEND
      2  fd3b		       ea		      NOP
      1  fd3b					      REPEND
      2  fd3c		       ea		      NOP
      1  fd3c					      REPEND
      2  fd3d		       ea		      NOP
      3  fd3e					      REPEND
      4  fd3e
      5  fd3e				  -	      REPEAT	HDELAY2%2
      6  fd3e				  -	      STA	DUMP
      7  fd3e					      REPEND
     50  fd3e		       85 14		      STA	RESBL
     51  fd40
     52  fd40		       60		      RTS
------- FILE drawCode/mmDraw.asm
      4  fd41
      5  fd41				   mmDraw
      6  fd41		       a9 00		      LDA	#0
      7  fd43
      8  fd43		       20 fd fc 	      JSR	mmRender
      9  fd46
     10  fd46							; Load the player's position
     11  fd46
     12  fd46		       a5 b7		      LDA	horzPos_plyr
     13  fd48		       85 24		      STA	HMBL
     14  fd4a		       a5 b5		      LDA	horzPos_mA
     15  fd4c		       85 20		      STA	HMP0
     16  fd4e		       a5 b6		      LDA	horzPos_mB
     17  fd50		       85 21		      STA	HMP1
     18  fd52
     19  fd52		       a9 00		      LDA	#NULL
     20  fd54		       85 1b		      STA	GRP0
     21  fd56		       85 1c		      STA	GRP1
     22  fd58		       85 02		      STA	WSYNC
     23  fd5a		       85 2a		      STA	HMOVE
     24  fd5c
     25  fd5c		       a0 00		      LDY	#INDEXINIT
     26  fd5e		       a6 a9		      LDX	playerPos
     27  fd60
     28  fd60				   _mmLoop
     29  fd60		       85 02		      STA	WSYNC
     30  fd62
     31  fd62		       b1 bb		      LDA	(miniMapPtr),Y
     32  fd64		       85 1b		      STA	GRP0
     33  fd66		       c8		      INY
     34  fd67		       b1 bb		      LDA	(miniMapPtr),Y
     35  fd69		       85 1c		      STA	GRP1
     36  fd6b		       c8		      INY
     37  fd6c
     38  fd6c		       8a		      TXA
     39  fd6d		       38		      SEC
     40  fd6e		       e5 aa		      SBC	mapWidth
     41  fd70		       aa		      TAX
     42  fd71		       29 f0		      AND	#%11110000
     43  fd73
     44  fd73		       c9 00		      CMP	#0
     45  fd75		       d0 0a		      BNE	_noDraw
     46  fd77
     47  fd77		       a9 02		      LDA	#2
     48  fd79		       85 1f		      STA	ENABL
     49  fd7b		       85 b8		      STA	drawingPlyr
     50  fd7d		       a9 01		      LDA	#1
     51  fd7f		       85 27		      STA	VDELBL
     52  fd81
     53  fd81				   _noDraw
     54  fd81
     55  fd81		       a5 b8		      LDA	drawingPlyr
     56  fd83		       85 1f		      STA	ENABL
     57  fd85		       a9 00		      LDA	#0
     58  fd87		       85 b8		      STA	drawingPlyr
     59  fd89		       c0 20		      CPY	#32
     60  fd8b		       d0 d3		      BNE	_mmLoop
     61  fd8d
     62  fd8d		       a9 00		      LDA	#0
     63  fd8f		       85 1f		      STA	ENABL
     64  fd91
     65  fd91		       85 02		      STA	WSYNC
     66  fd93
     67  fd93		       a9 00		      LDA	#NULL
     68  fd95		       85 1b		      STA	GRP0
     69  fd97		       85 1c		      STA	GRP1
     70  fd99		       85 06		      STA	COLUP0
     71  fd9b		       85 07		      STA	COLUP1
     72  fd9d
     73  fd9d		       60		      RTS
------- FILE dispkern.asm
     23  fd9e
     24  fd9e				   drawStart
     25  fd9e
     26  fd9e		       20 36 fa 	      JSR	dc_w1s1	; Draw all the walls and their shadows!
     27  fda1
     28  fda1		       a9 00		      LDA	#NULL
     29  fda3		       85 0e		      STA	PF1
     30  fda5		       85 0f		      STA	PF2
     31  fda7
     32  fda7		       20 41 fd 	      JSR	mmDraw
     33  fdaa
     34  fdaa		       4c ad fd 	      JMP	stop
     35  fdad
     36  fdad				   stop
     37  fdad
     38  fdad
     39  fdad		       85 09		      STA	COLUBK
------- FILE main.asm
     70  fdaf
     71  fdaf
     72  fdaf							; Start VBLANK
     73  fdaf
     74  fdaf		       a9 c2		      LDA	#VBLANK_SET
     75  fdb1		       85 01		      STA	VBLANK
     76  fdb3
     77  fdb3							; Process input
     78  fdb3
------- FILE input.asm LEVEL 2 PASS 2
      0  fdb3					      INCLUDE	"input.asm"
      1  fdb3							; VePseu's controller input
      2  fdb3
      3  fdb3		       85 02		      STA	WSYNC
      4  fdb5
      5  fdb5		       ad 80 02 	      LDA	SWCHA
      6  fdb8		       29 10		      AND	#FFORD
      7  fdba		       c9 10		      CMP	#FFORD
      8  fdbc		       f0 26		      BEQ	CIN1_NOPRESS
      9  fdbe
     10  fdbe		       a5 a9		      LDA	playerPos
     11  fdc0		       38		      SEC
     12  fdc1		       e5 ae		      SBC	yLoss
     13  fdc3		       18		      CLC
     14  fdc4		       65 ad		      ADC	yGain
     15  fdc6		       a8		      TAY
     16  fdc7
     17  fdc7		       b1 bd		      LDA	(mapPtr),Y
     18  fdc9		       c9 00		      CMP	#NULL
     19  fdcb		       d0 1b		      BNE	CIN2
     20  fdcd
     21  fdcd		       a5 af		      LDA	fordPressed
     22  fdcf		       c9 00		      CMP	#NULL
     23  fdd1		       d0 09		      BNE	CIN1_WAIT
     24  fdd3
     25  fdd3		       84 a9		      STY	playerPos
     26  fdd5		       a9 0f		      LDA	#CWAITCNT
     27  fdd7		       85 af		      STA	fordPressed
     28  fdd9		       4c e8 fd 	      JMP	CIN2
     29  fddc
     30  fddc				   CIN1_WAIT
      0  fddc					      DEA
      1  fddc		       38		      SEC
      2  fddd		       e9 01		      SBC	#1
     32  fddf		       85 af		      STA	fordPressed
     33  fde1		       4c e8 fd 	      JMP	CIN2
     34  fde4
     35  fde4				   CIN1_NOPRESS
     36  fde4		       a9 00		      LDA	#NULL
     37  fde6		       85 af		      STA	fordPressed
     38  fde8
     39  fde8				   CIN2
     40  fde8		       85 02		      STA	WSYNC
     41  fdea		       ad 80 02 	      LDA	SWCHA
     42  fded		       29 20		      AND	#FBACK
     43  fdef		       c9 20		      CMP	#FBACK
     44  fdf1		       f0 26		      BEQ	CIN2_NOPRESS
     45  fdf3
     46  fdf3		       a5 a9		      LDA	playerPos
     47  fdf5		       38		      SEC
     48  fdf6		       e5 ad		      SBC	yGain
     49  fdf8		       18		      CLC
     50  fdf9		       65 ae		      ADC	yLoss
     51  fdfb		       a8		      TAY
     52  fdfc
     53  fdfc		       b1 bd		      LDA	(mapPtr),Y
     54  fdfe		       c9 00		      CMP	#NULL
     55  fe00		       d0 1b		      BNE	CIN3
     56  fe02
     57  fe02		       a5 b0		      LDA	backPressed
     58  fe04		       c9 00		      CMP	#NULL
     59  fe06		       d0 09		      BNE	CIN2_WAIT
     60  fe08
     61  fe08		       84 a9		      STY	playerPos
     62  fe0a		       a9 0f		      LDA	#CWAITCNT
     63  fe0c		       85 b0		      STA	backPressed
     64  fe0e		       4c 1d fe 	      JMP	CIN3
     65  fe11
     66  fe11				   CIN2_WAIT
      0  fe11					      DEA
      1  fe11		       38		      SEC
      2  fe12		       e9 01		      SBC	#1
     68  fe14		       85 b0		      STA	backPressed
     69  fe16		       4c 1d fe 	      JMP	CIN3
     70  fe19
     71  fe19				   CIN2_NOPRESS
     72  fe19		       a9 00		      LDA	#NULL
     73  fe1b		       85 b0		      STA	backPressed
     74  fe1d
     75  fe1d				   CIN3
     76  fe1d		       85 02		      STA	WSYNC
     77  fe1f		       ad 80 02 	      LDA	SWCHA
     78  fe22		       29 80		      AND	#FLEFT
     79  fe24		       c9 80		      CMP	#FLEFT
     80  fe26		       f0 1c		      BEQ	CIN3_NOPRESS
     81  fe28
     82  fe28		       a5 b9		      LDA	direction
      0  fe2a					      INA
      1  fe2a		       18		      CLC
      2  fe2b		       69 01		      ADC	#1
     84  fe2d		       29 03		      AND	#%00000011
     85  fe2f
     86  fe2f		       a6 b2		      LDX	rigtPressed
     87  fe31		       e0 00		      CPX	#NULL
     88  fe33		       d0 09		      BNE	CIN3_WAIT
     89  fe35
     90  fe35		       85 b9		      STA	direction
     91  fe37
     92  fe37		       a9 0f		      LDA	#CWAITCNT
     93  fe39		       85 b2		      STA	rigtPressed
     94  fe3b		       4c 48 fe 	      JMP	CIN4
     95  fe3e
     96  fe3e				   CIN3_WAIT
     97  fe3e		       ca		      DEX
     98  fe3f		       86 b2		      STX	rigtPressed
     99  fe41		       4c 48 fe 	      JMP	CIN4
    100  fe44
    101  fe44				   CIN3_NOPRESS
    102  fe44		       a9 00		      LDA	#NULL
    103  fe46		       85 b2		      STA	rigtPressed
    104  fe48
    105  fe48				   CIN4
    106  fe48		       85 02		      STA	WSYNC
    107  fe4a		       ad 80 02 	      LDA	SWCHA
    108  fe4d		       29 40		      AND	#FRIGT
    109  fe4f		       c9 40		      CMP	#FRIGT
    110  fe51		       f0 1c		      BEQ	CIN4_NOPRESS
    111  fe53
    112  fe53		       a5 b9		      LDA	direction
      0  fe55					      DEA
      1  fe55		       38		      SEC
      2  fe56		       e9 01		      SBC	#1
    114  fe58		       29 03		      AND	#%00000011
    115  fe5a
    116  fe5a		       a6 b1		      LDX	leftPressed
    117  fe5c		       e0 00		      CPX	#NULL
    118  fe5e		       d0 09		      BNE	CIN4_WAIT
    119  fe60
    120  fe60		       85 b9		      STA	direction
    121  fe62
    122  fe62		       a9 0f		      LDA	#CWAITCNT
    123  fe64		       85 b1		      STA	leftPressed
    124  fe66		       4c 73 fe 	      JMP	CDIR1
    125  fe69
    126  fe69				   CIN4_WAIT
    127  fe69		       ca		      DEX
    128  fe6a		       86 b1		      STX	leftPressed
    129  fe6c		       4c 73 fe 	      JMP	CDIR1
    130  fe6f
    131  fe6f				   CIN4_NOPRESS
    132  fe6f		       a9 00		      LDA	#NULL
    133  fe71		       85 b1		      STA	leftPressed
    134  fe73
    135  fe73				   CDIR1
    136  fe73		       85 02		      STA	WSYNC
    137  fe75		       a5 b9		      LDA	direction
    138  fe77		       c9 00		      CMP	#DNORTH
    139  fe79		       d0 16		      BNE	CDIR2
    140  fe7b
    141  fe7b		       a5 aa		      LDA	mapWidth
    142  fe7d		       85 ae		      STA	yLoss
    143  fe7f		       a9 01		      LDA	#ONE
    144  fe81		       85 ab		      STA	xGain
    145  fe83		       a9 86		      LDA	#WCOLU
    146  fe85		       85 b3		      STA	wallColour
    147  fe87		       a9 82		      LDA	#SCOLU
    148  fe89		       85 b4		      STA	shadowColour
    149  fe8b		       a9 00		      LDA	#NULL
    150  fe8d		       85 ad		      STA	yGain
    151  fe8f		       85 ac		      STA	xLoss
    152  fe91
    153  fe91				   CDIR2
    154  fe91		       a5 b9		      LDA	direction
    155  fe93		       c9 02		      CMP	#DSOUTH
    156  fe95		       d0 16		      BNE	CDIR3
    157  fe97
    158  fe97		       a5 aa		      LDA	mapWidth
    159  fe99		       85 ad		      STA	yGain
    160  fe9b		       a9 01		      LDA	#ONE
    161  fe9d		       85 ac		      STA	xLoss
    162  fe9f		       a9 86		      LDA	#WCOLU
    163  fea1		       85 b3		      STA	wallColour
    164  fea3		       a9 82		      LDA	#SCOLU
    165  fea5		       85 b4		      STA	shadowColour
    166  fea7		       a9 00		      LDA	#NULL
    167  fea9		       85 ae		      STA	yLoss
    168  feab		       85 ab		      STA	xGain
    169  fead
    170  fead				   CDIR3
    171  fead		       a5 b9		      LDA	direction
    172  feaf		       c9 01		      CMP	#DWEST
    173  feb1		       d0 16		      BNE	CDIR4
    174  feb3
    175  feb3		       a5 aa		      LDA	mapWidth
    176  feb5		       85 ab		      STA	xGain
    177  feb7		       a9 01		      LDA	#ONE
    178  feb9		       85 ad		      STA	yGain
    179  febb		       a9 82		      LDA	#SCOLU
    180  febd		       85 b3		      STA	wallColour
    181  febf		       a9 86		      LDA	#WCOLU
    182  fec1		       85 b4		      STA	shadowColour
    183  fec3		       a9 00		      LDA	#NULL
    184  fec5		       85 ae		      STA	yLoss
    185  fec7		       85 ac		      STA	xLoss
    186  fec9
    187  fec9				   CDIR4
    188  fec9		       a5 b9		      LDA	direction
    189  fecb		       c9 03		      CMP	#DEAST
    190  fecd		       d0 16		      BNE	CEND
    191  fecf
    192  fecf		       a5 aa		      LDA	mapWidth
    193  fed1		       85 ac		      STA	xLoss
    194  fed3		       a9 01		      LDA	#ONE
    195  fed5		       85 ae		      STA	yLoss
    196  fed7		       a9 82		      LDA	#SCOLU
    197  fed9		       85 b3		      STA	wallColour
    198  fedb		       a9 86		      LDA	#WCOLU
    199  fedd		       85 b4		      STA	shadowColour
    200  fedf		       a9 00		      LDA	#NULL
    201  fee1		       85 ad		      STA	yGain
    202  fee3		       85 ab		      STA	xGain
    203  fee5
    204  fee5				   CEND
    205  fee5		       85 02		      STA	WSYNC
------- FILE main.asm
     80  fee7
     81  fee7							; Pad again
     82  fee7
     83  fee7		       a2 00		      LDX	#INDEXINIT
     84  fee9
     85  fee9				   lowerPad
     86  fee9		       85 02		      STA	WSYNC
     87  feeb
     88  feeb		       e8		      INX
     89  feec		       e0 19		      CPX	#LOPAD_LIMIT
     90  feee		       d0 f9		      BNE	lowerPad
     91  fef0
     92  fef0							; Get everything ready for VSYNC
     93  fef0
     94  fef0		       a9 00		      LDA	#NULL
     95  fef2		       85 01		      STA	VBLANK
     96  fef4		       a9 02		      LDA	#VSYNC_SET
     97  fef6		       85 02		      STA	WSYNC
     98  fef8		       4c 2d f8 	      JMP	screenStart
     99  fefb
    100  fffa					      ORG	$FFFA
    101  fffa
    102  fffa		       00 f8		      DC.W	start	; Something
    103  fffc		       00 f8		      DC.W	start	; Entrypoint
    104  fffe		       2d f8		      DC.W	screenStart	; Something else
    105  10000
    106  10000					       END
