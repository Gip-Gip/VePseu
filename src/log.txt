------- FILE main.asm LEVEL 1 PASS 2
      1  10000 ????						; VePseu's main file
      2  10000 ????
      3  10000 ????				       processor	6502
      4  10000 ????
------- FILE include/vepseu.h LEVEL 2 PASS 2
      0  10000 ????				       INCLUDE	"include/vepseu.h"
      1  10000 ????						; VePseu's header file
      2  10000 ????
      3 U028a ????				      SEG.U	addresses
      4 U028a ????
------- FILE include/walrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/walrend.h"
      1 U028a ????				      MAC	y_pos_adv
      2 U028a ????
      3 U028a ????				      TYA
      4 U028a ????				      CLC
      5 U028a ????				      ADC	yGain
      6 U028a ????				      SEC
      7 U028a ????				      SBC	yLoss
      8 U028a ????				      TAY
      9 U028a ????
     10 U028a ????				      ENDM		; 14 cycles
     11 U028a ????
     12 U028a ????				      MAC	x_pos_gan
     13 U028a ????
     14 U028a ????				      TYA
     15 U028a ????				      CLC
     16 U028a ????				      ADC	xGain
     17 U028a ????				      SEC
     18 U028a ????				      SBC	xLoss
     19 U028a ????				      TAY
     20 U028a ????
     21 U028a ????				      ENDM		; 14 cycles
     22 U028a ????
     23 U028a ????				      MAC	x_pos_los
     24 U028a ????
     25 U028a ????				      TYA
     26 U028a ????				      CLC
     27 U028a ????				      ADC	xLoss
     28 U028a ????				      SEC
     29 U028a ????				      SBC	xGain
     30 U028a ????				      TAY
     31 U028a ????
     32 U028a ????				      ENDM		; 14 cycles
------- FILE include/vepseu.h
------- FILE include/scrend.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/scrend.h"
      1 U028a ????						; Argument 1 is wall1X
      2 U028a ????				      MAC	mrgwll
      3 U028a ????				      LDA	{1},X
      4 U028a ????				      DEX
      5 U028a ????				      ORA	{1},X
      6 U028a ????				      INX
      7 U028a ????				      STA	{1},X
      8 U028a ????				      ENDM		; 17 cycles
      9 U028a ????
     10 U028a ????						; Argument 1 is shadow1X
     11 U028a ????				      MAC	mkshad
     12 U028a ????				      LSR
     13 U028a ????				      DEX
     14 U028a ????				      ORA	{1},X
     15 U028a ????				      INX
     16 U028a ????				      ORA	{1},X
     17 U028a ????				      STA	{1},X
     18 U028a ????				      ENDM		; 21 cycles
     19 U028a ????
     20 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     21 U028a ????				      MAC	ovlwll
     22 U028a ????				      LDA	{1},X
     23 U028a ????				      DEX
     24 U028a ????				      ORA	{2},X
     25 U028a ????				      EOR	{2},X
     26 U028a ????				      INX
     27 U028a ????				      STA	{1},X
     28 U028a ????				      ENDM		; 22 cycles
     29 U028a ????
     30 U028a ????						; Argument 1 is wall1X, 2 is shadow1X
     31 U028a ????				      MAC	ovlshd
     32 U028a ????				      LDA	{2},X
     33 U028a ????				      ORA	{1},X
     34 U028a ????				      EOR	{1},X
     35 U028a ????				      STA	{2},X
     36 U028a ????				      ENDM		; 20 cycles
------- FILE include/vepseu.h
------- FILE include/tia_addr.h LEVEL 3 PASS 2
      0 U028a ????				      INCLUDE	"include/tia_addr.h"
      1 U028a ????						; Write only addresses
      2 U028a ????
      3 U0000					      ORG	$0000
      4 U0000
      5 U0000		       00	   VSYNC      DC	0
      6 U0001		       00	   VBLANK     DC	0
      7 U0002		       00	   WSYNC      DC	0
      8 U0003		       00	   RSYNC      DC	0
      9 U0004		       00	   NUSIZ0     DC	0
     10 U0005		       00	   NUSIZ1     DC	0
     11 U0006		       00	   COLUP0     DC	0
     12 U0007		       00	   COLUP1     DC	0
     13 U0008		       00	   COLUPF     DC	0
     14 U0009		       00	   COLUBK     DC	0
     15 U000a		       00	   CTRLPF     DC	0
     16 U000b		       00	   REFP0      DC	0
     17 U000c		       00	   REFP1      DC	0
     18 U000d		       00	   PF0	      DC	0
     19 U000e		       00	   PF1	      DC	0
     20 U000f		       00	   PF2	      DC	0
     21 U0010		       00	   RESP0      DC	0
     22 U0011		       00	   RESP1      DC	0
     23 U0012		       00	   RESM0      DC	0
     24 U0013		       00	   RESM1      DC	0
     25 U0014		       00	   RESBL      DC	0
     26 U0015		       00	   AUDC0      DC	0
     27 U0016		       00	   AUDC1      DC	0
     28 U0017		       00	   AUDF0      DC	0
     29 U0018		       00	   AUDF1      DC	0
     30 U0019		       00	   AUDV0      DC	0
     31 U001a		       00	   AUDV1      DC	0
     32 U001b		       00	   GRP0       DC	0
     33 U001c		       00	   GRP1       DC	0
     34 U001d		       00	   ENAM0      DC	0
     35 U001e		       00	   ENAM1      DC	0
     36 U001f		       00	   ENABL      DC	0
     37 U0020		       00	   HMP0       DC	0
     38 U0021		       00	   HMP1       DC	0
     39 U0022		       00	   HMM0       DC	0
     40 U0023		       00	   HMM1       DC	0
     41 U0024		       00	   HMBL       DC	0
     42 U0025		       00	   VDELP0     DC	0
     43 U0026		       00	   VDELP1     DC	0
     44 U0027		       00	   VDELBL     DC	0
     45 U0028		       00	   RESMP0     DC	0
     46 U0029		       00	   RESMP1     DC	0
     47 U002a		       00	   HMOVE      DC	0
     48 U002b		       00	   HMCLR      DC	0
     49 U002c		       00	   CXCLR      DC	0
     50 U002d
     51 U002d							; Read only addresses
     52 U002d
     53 U0030					      ORG	$0030
     54 U0030
     55 U0030		       00	   CXM0P      DC	0
     56 U0031		       00	   CXM1P      DC	0
     57 U0032		       00	   CXP0FB     DC	0
     58 U0033		       00	   CXP1FB     DC	0
     59 U0034		       00	   CXM0FB     DC	0
     60 U0035		       00	   CXM1FB     DC	0
     61 U0036		       00	   CXBLPF     DC	0
     62 U0037		       00	   CXPPMM     DC	0
     63 U0038		       00	   INPT0      DC	0
     64 U0039		       00	   INPT1      DC	0
     65 U003a		       00	   INPT2      DC	0
     66 U003b		       00	   INPT3      DC	0
     67 U003c		       00	   INPT4      DC	0
     68 U003d		       00	   INPT5      DC	0
------- FILE include/vepseu.h
------- FILE include/vars.h LEVEL 3 PASS 2
      0 U003e					      INCLUDE	"include/vars.h"
      1 U003e							; Variables
      2 U003e
      3 U0080					      ORG	$0080
      4 U0080
      5 U0080		       00 30	   DUMP       =	$30
      6 U0080
      7 U0080		       00 00 00 00*wall1      DS	5
      8 U0085		       00	   wall2a     DC	0
      9 U0086		       00	   wall2b     DC	0
     10 U0087		       00	   wall2c     DC	0
     11 U0088		       00	   wall2d     DC	0
     12 U0089		       00	   wall2e     DC	0
     13 U008a		       00	   wall3a     DC	0
     14 U008b		       00	   wall3b     DC	0
     15 U008c		       00	   wall3c     DC	0
     16 U008d		       00	   wall3d     DC	0
     17 U008e		       00	   wall3e     DC	0
     18 U008f
     19 U008f		       00	   shadow2aa  DC	0
     20 U0090		       00	   shadow2ba  DC	0
     21 U0091		       00	   shadow2ca  DC	0
     22 U0092		       00	   shadow2da  DC	0
     23 U0093		       00	   shadow2ea  DC	0
     24 U0094		       00	   shadow3aa  DC	0
     25 U0095		       00	   shadow3ba  DC	0
     26 U0096		       00	   shadow3ca  DC	0
     27 U0097		       00	   shadow3da  DC	0
     28 U0098		       00	   shadow3ea  DC	0
     29 U0099
     30 U0099		       00	   shadow1a   DC	0
     31 U009a		       00	   shadow1b   DC	0
     32 U009b		       00	   shadow1c   DC	0
     33 U009c		       00	   shadow1d   DC	0
     34 U009d		       00	   shadow1e   DC	0
     35 U009e		       00	   shadow2ab  DC	0
     36 U009f		       00	   shadow2bb  DC	0
     37 U00a0		       00	   shadow2cb  DC	0
     38 U00a1		       00	   shadow2db  DC	0
     39 U00a2		       00	   shadow2eb  DC	0
     40 U00a3		       00	   shadow3ab  DC	0
     41 U00a4		       00	   shadow3bb  DC	0
     42 U00a5		       00	   shadow3cb  DC	0
     43 U00a6		       00	   shadow3db  DC	0
     44 U00a7		       00	   shadow3eb  DC	0
     45 U00a8
     46 U00a8		       00	   shift      DC	0
     47 U00a9		       00	   playerPos  DC	0
     48 U00aa		       00	   mapWidth   DC	0
     49 U00ab		       00	   xGain      DC	0
     50 U00ac		       00	   xLoss      DC	0
     51 U00ad		       00	   yGain      DC	0
     52 U00ae		       00	   yLoss      DC	0
     53 U00af		       00	   fordPressed DC	0
     54 U00b0		       00	   backPressed DC	0
     55 U00b1		       00	   leftPressed DC	0
     56 U00b2		       00	   rigtPressed DC	0
     57 U00b3		       00	   wallColour DC	0
     58 U00b4		       00	   shadowColour DC	0
     59 U00b5		       00	   horzPos_mA DC	0
     60 U00b6		       00	   horzPos_mB DC	0
     61 U00b7		       00	   horzPos_plyr DC	0
     62 U00b8		       00	   drawingPlyr DC	0
     63 U00b9		       00	   direction  DC	0
     64 U00ba		       00 00	   miniMapPtr DC.W	0
     65 U00bc		       00 00	   mapPtr     DC.W	0
     66 U00be		       00	   foo	      DC	0
------- FILE include/vepseu.h
------- FILE include/pia_addr.h LEVEL 3 PASS 2
      0 U00bf					      INCLUDE	"include/pia_addr.h"
      1 U00bf							; PIA addresses
      2 U00bf
      3 U0280					      ORG	$0280
      4 U0280
      5 U0280		       00	   SWCHA      DC	0
      6 U0281		       00	   SWACNT     DC	0
      7 U0282		       00	   SWCHB      DC	0
      8 U0283		       00	   SWBCNT     DC	0
      9 U0284		       00	   INTIM      DC	0
     10 U0285		       00	   INSTAT     DC	0
     11 U0286		       00	   TIM1T      DC	0
     12 U0287		       00	   TIM8T      DC	0
     13 U0288		       00	   TIM64T     DC	0
     14 U0289		       00	   T1024T     DC	0
------- FILE include/vepseu.h
------- FILE include/defs.h LEVEL 3 PASS 2
      0 U028a					      INCLUDE	"include/defs.h"
      1 U028a					      MAC	ina
      2 U028a					      CLC
      3 U028a					      ADC	#1
      4 U028a					      ENDM
      5 U028a
      6 U028a					      MAC	dea
      7 U028a					      SEC
      8 U028a					      SBC	#1
      9 U028a					      ENDM
     10 U028a
     11 U028a					      MAC	delay
     12 U028a					      REPEAT	{1}/2 - {1}%2
     13 U028a					      NOP
     14 U028a					      REPEND
     15 U028a
     16 U028a					      REPEAT	{1}%2
     17 U028a					      STA	DUMP
     18 U028a					      REPEND
     19 U028a					      ENDM
     20 U028a
     21 U028a		       00 00	   NULL       =	0	; The value of NULL
     22 U028a		       00 01	   ONE	      =	1	; The value of one
     23 U028a
     24 U028a		       00 03	   PIXH       =	3	; The height of each pixel, in scanlines (x2)
     25 U028a
     26 U028a		       00 00	   HADJ_A     =	$00	; The horizontal adjustment of each minimap sprite
     27 U028a		       00 10	   HADJ_B     =	$10
     28 U028a
     29 U028a		       00 86	   WCOLU      =	$86	; The initial colour of walls
     30 U028a		       00 82	   SCOLU      =	$82	; The initial colour of shadows
     31 U028a		       00 0e	   MAPCOLU    =	$0E	; The colour of the map on the minimap
     32 U028a		       00 cc	   PLYRCOLU   =	$CC	; The colour of the player on the minimap
     33 U028a
     34 U028a		       00 c2	   VBLANK_SET =	%11000010	; The value to push to the vblank register
     35 U028a		       00 02	   VSYNC_SET  =	2	; The value to push to the vsync register
     36 U028a
     37 U028a		       00 00	   INDEXINIT  =	0	; The value to initialize indexes to
     38 U028a
     39 U028a		       00 10	   UPPAD_LIMIT =	16	; The upper pad amount
     40 U028a		       00 19	   LOPAD_LIMIT =	25	; The lower pad amount
     41 U028a
     42 U028a		       00 ff	   FULLWALL   =	$FF
     43 U028a
     44 U028a		       00 80	   LAYER0_AND_0 =	%10000000	; The pattern the peripheral vision takes on
     45 U028a		       00 02	   LAYER0_AND_1 =	%00000010	; The pattern the peripheral vision takes on
     46 U028a
     47 U028a		       00 03	   LAYER1_AND_0 =	%00000011
     48 U028a		       00 03	   LAYER1_AND_1 =	%00000011
     49 U028a
     50 U028a		       00 e0	   LAYER2_AND_0 =	%11100000	; The pattern layer 2's shadow takes on
     51 U028a		       00 fc	   LAYER2_AND_1 =	%11111100	; The pattern layer 2's first wall takes on
     52 U028a		       00 03	   LAYER2_AND_2 =	%00000011	; The pattern layer 2's second wall takes on
     53 U028a		       00 04	   LAYER2_AND_3 =	%00000100	; The pattern layer 2's second wall takes on
     54 U028a		       00 0c	   LAYER2_AND_4 =	%00001100	; The pattern layer 2's second wall takes on
     55 U028a		       00 fc	   LAYER2_AND_5 =	%11111100	; The pattern layer 2's second wall takes on
     56 U028a		       00 30	   LAYER2_AND_6 =	%00110000	; The pattern layer 2's second wall takes on
     57 U028a		       00 80	   LAYER2_AND_7 =	%10000000	; The pattern layer 2's second wall takes on
     58 U028a		       00 c0	   LAYER2_AND_8 =	%11000000	; The pattern layer 2's second wall takes on
     59 U028a		       00 01	   LAYER2_AND_9 =	%00000001	; The pattern layer 2's second wall takes on
     60 U028a		       00 0f	   LAYER2_AND_A =	%00001111	; The pattern layer 2's second wall takes on
     61 U028a		       00 03	   LAYER2_AND_B =	%00000011	; The pattern layer 2's second wall takes on
     62 U028a		       00 03	   LAYER2_AND_C =	%00000011	; The pattern layer 2's second wall takes on
     63 U028a
     64 U028a		       00 02	   LAYER3_AND_0 =	%00000010	; The pattern layer 3's shadow takes on
     65 U028a		       00 03	   LAYER3_AND_1 =	%00000011	; The pattern layer 3's shadow takes on
     66 U028a		       00 03	   LAYER3_AND_2 =	%00000011	; The pattern layer 3's first wall takes on
     67 U028a		       00 0f	   LAYER3_AND_3 =	%00001111	; The pattern layer 3's second wall takes on
     68 U028a		       00 10	   LAYER3_AND_4 =	%00010000	; The pattern layer 3's third wall takes on
     69 U028a		       00 30	   LAYER3_AND_5 =	%00110000	; The pattern layer 3's third wall takes on
     70 U028a		       00 f0	   LAYER3_AND_6 =	%11110000	; The pattern layer 3's third wall takes on
     71 U028a		       00 c0	   LAYER3_AND_7 =	%11000000	; The pattern layer 3's third wall takes on
     72 U028a		       00 20	   LAYER3_AND_8 =	%00100000	; The pattern layer 3's third wall takes on
     73 U028a		       00 30	   LAYER3_AND_9 =	%00110000	; The pattern layer 3's third wall takes on
     74 U028a		       00 30	   LAYER3_AND_A =	%00110000	; The pattern layer 3's third wall takes on
     75 U028a		       00 f0	   LAYER3_AND_B =	%11110000	; The pattern layer 3's third wall takes on
     76 U028a		       00 0f	   LAYER3_AND_C =	%00001111	; The pattern layer 3's third wall takes on
     77 U028a		       00 03	   LAYER3_AND_D =	%00000011	; The pattern layer 3's third wall takes on
     78 U028a		       00 10	   LAYER3_AND_E =	%00010000	; The pattern layer 3's third wall takes on
     79 U028a		       00 30	   LAYER3_AND_F =	%00110000	; The pattern layer 3's third wall takes on
     80 U028a		       00 fc	   LAYER3_AND_G =	%11111100	; The pattern layer 3's third wall takes on
     81 U028a		       00 02	   LAYER3_AND_H =	%00000010	; The pattern layer 3's third wall takes on
     82 U028a		       00 03	   LAYER3_AND_I =	%00000011	; The pattern layer 3's third wall takes on
     83 U028a		       00 80	   LAYER3_AND_J =	%10000000	; The pattern layer 3's third wall takes on
     84 U028a		       00 c0	   LAYER3_AND_K =	%11000000	; The pattern layer 3's third wall takes on
     85 U028a
     86 U028a		       00 10	   FFORD      =	%00010000	; The bit set when the joystick is in the forward position
     87 U028a		       00 20	   FBACK      =	%00100000	; The bit set when the joystick is in the backward position
     88 U028a		       00 80	   FLEFT      =	%10000000	; The bit set when the joystick is in the left position
     89 U028a		       00 40	   FRIGT      =	%01000000	; The bit set when the joystick is in the right position
     90 U028a		       00 80	   ITRIG      =	%10000000	; The bit set when the trigger is set
     91 U028a
     92 U028a		       00 01	   LOWSHAD_LIMIT =	1
     93 U028a
     94 U028a		       00 00	   cleanStart =	0	; The value to initialize X to in clearLoop
     95 U028a		       00 00	   cleanEnd   =	0	; The value of X to stop the loop at in clearLoop
     96 U028a
     97 U028a		       00 ff	   stack      =	$FF	; The address of the stack
     98 U028a
     99 U028a		       00 0f	   CWAITCNT   =	#15	; The amount of frames to wait before input is repeated
    100 U028a
    101 U028a		       00 00	   DNORTH     =	0	; The possible directions
    102 U028a		       00 02	   DSOUTH     =	2
    103 U028a		       00 01	   DWEST      =	1
    104 U028a		       00 03	   DEAST      =	3
------- FILE include/vepseu.h
     11 U028a
     12 U028a
------- FILE main.asm
      6 U028a
      7  10000 ????				       SEG
      8  10000 ????
      9  f000					      ORG	$F000
     10  f000
------- FILE andtable.asm LEVEL 2 PASS 2
      0  f000					      INCLUDE	"andtable.asm"
      1  f000							; The AND-tables for the shadows
      2  f000
      3  f000				   and_1a
      4  f000		       80		      DC	%10000000
      5  f001		       c0		      DC	%11000000
      6  f002		       e0		      DC	%11100000
      7  f003		       f0		      DC	%11110000
      8  f004		       f8		      DC	%11111000
      9  f005		       fc		      DC	%11111100
     10  f006		       fe		      DC	%11111110
     11  f007		       ff		      DC	%11111111
     12  f008		       ff		      DC	%11111111
     13  f009		       ff		      DC	%11111111
     14  f00a
     15  f00a				   and_1b
     16  f00a		       00		      DC	%00000000
     17  f00b		       00		      DC	%00000000
     18  f00c		       00		      DC	%00000000
     19  f00d		       00		      DC	%00000000
     20  f00e		       00		      DC	%00000000
     21  f00f		       00		      DC	%00000000
     22  f010		       00		      DC	%00000000
     23  f011		       00		      DC	%00000000
     24  f012		       01		      DC	%00000001
     25  f013		       03		      DC	%00000011
     26  f014
     27  f014				   and_1c
     28  f014		       00		      DC	%00000000
     29  f015		       00		      DC	%00000000
     30  f016		       01		      DC	%00000001
     31  f017		       03		      DC	%00000011
     32  f018		       07		      DC	%00000111
     33  f019		       0f		      DC	%00001111
     34  f01a		       1f		      DC	%00011111
     35  f01b		       3f		      DC	%00111111
     36  f01c		       7f		      DC	%01111111
     37  f01d		       ff		      DC	%11111111
     38  f01e
     39  f01e				   and_1d
     40  f01e		       02		      DC	%00000010
     41  f01f		       03		      DC	%00000011
     42  f020		       03		      DC	%00000011
     43  f021		       03		      DC	%00000011
     44  f022		       03		      DC	%00000011
     45  f023		       03		      DC	%00000011
     46  f024		       03		      DC	%00000011
     47  f025		       03		      DC	%00000011
     48  f026		       03		      DC	%00000011
     49  f027		       03		      DC	%00000011
------- FILE main.asm
------- FILE map.asm LEVEL 2 PASS 2
      0  f028					      INCLUDE	"map.asm"
      1  f028							; VePseu's maps
      2  f028
      3  f028		       00 d1	   MAP_01_POS =	$D1
      4  f028		       00 10	   MAP_01_WDTH =	$10
      5  f028		       01 00	   MAP_01_SZ  =	$100
      6  f028
      7  f028				   map_01
      8  f028		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
      9  f038		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     10  f048		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     11  f058		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF
     12  f068		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     13  f078		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     14  f088		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     15  f098		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF FF FF
     16  f0a8		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 FF 00 FF 00 FF 00 00 FF 00 FF
     17  f0b8		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF 00 FF
     18  f0c8		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     19  f0d8		       ff 00 00 00*	      HEX	FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF
     20  f0e8		       ff 00 ff ff*	      HEX	FF 00 FF FF FF FF FF FF FF FF FF FF FF FF 00 FF
     21  f0f8		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     22  f108		       ff 00 ff 00*	      HEX	FF 00 FF 00 00 00 00 00 00 00 00 00 00 FF 00 FF
     23  f118		       ff ff ff 00*	      HEX	FF FF FF 00 00 00 00 00 00 00 00 00 00 FF FF FF
     24  f128
     25  f128				   miniMap_01
     26  f128		       e0 07		      DC.W	%0000011111100000
     27  f12a		       bf fd		      DC.W	%1111110110111111
     28  f12c		       80 01		      DC.W	%0000000110000000
     29  f12e		       80 01		      DC.W	%0000000110000000
     30  f130		       be bd		      DC.W	%1011110110111110
     31  f132		       a2 a5		      DC.W	%1010010110100010
     32  f134		       a2 a7		      DC.W	%1010011110100010
     33  f136		       e2 a7		      DC.W	%1010011111100010
     34  f138		       e2 a5		      DC.W	%1010010111100010
     35  f13a		       be bd		      DC.W	%1011110110111110
     36  f13c		       80 81		      DC.W	%1000000110000000
     37  f13e		       80 81		      DC.W	%1000000110000000
     38  f140		       bf fd		      DC.W	%1111110110111111
     39  f142		       a0 05		      DC.W	%0000010110100000
     40  f144		       a0 05		      DC.W	%0000010110100000
     41  f146		       e0 07		      DC.W	%0000011111100000
     42  f148
     43  f148
     44  f148				   map_01_load
     45  f148		       a9 d1		      LDA	#MAP_01_POS
     46  f14a		       85 a9		      STA	playerPos
     47  f14c		       a9 10		      LDA	#MAP_01_WDTH
     48  f14e		       85 aa		      STA	mapWidth
     49  f150
     50  f150		       a9 28		      LDA	#<map_01
     51  f152		       85 bc		      STA	mapPtr
     52  f154		       a9 f0		      LDA	#>map_01
     53  f156		       85 bd		      STA	mapPtr + 1
     54  f158
     55  f158		       a9 28		      LDA	#<miniMap_01
     56  f15a		       85 ba		      STA	miniMapPtr
     57  f15c		       a9 f1		      LDA	#>miniMap_01
     58  f15e		       85 bb		      STA	miniMapPtr + 1
     59  f160		       60		      RTS
------- FILE main.asm
     13  f161
     14  f800					      ORG	$F800
     15  f800
     16  f800				   start
     17  f800
     18  f800							; Initialize everything
     19  f800
------- FILE init.asm LEVEL 2 PASS 2
      0  f800					      INCLUDE	"init.asm"
      1  f800							; VePseu's init file
      2  f800
      3  f800		       a2 ff		      LDX	#stack
      4  f802		       9a		      TXS
      5  f803
      6  f803		       a9 00		      LDA	#NULL
      7  f805
      8  f805		       d8		      CLD
      9  f806		       18		      CLC
     10  f807		       58		      CLI
     11  f808		       b8		      CLV
     12  f809
     13  f809		       a2 00		      LDX	#INDEXINIT
     14  f80b
     15  f80b				   cleanLoop
     16  f80b
     17  f80b		       95 00		      STA	cleanStart,X
     18  f80d		       e8		      INX
     19  f80e
     20  f80e		       e0 00		      CPX	#cleanEnd
     21  f810		       d0 f9		      BNE	cleanLoop
     22  f812
     23  f812		       20 48 f1 	      JSR	map_01_load
     24  f815
     25  f815		       a5 aa		      LDA	mapWidth
     26  f817		       85 ae		      STA	yLoss
     27  f819		       a9 01		      LDA	#ONE
     28  f81b		       85 ab		      STA	xGain
     29  f81d		       a9 00		      LDA	#NULL
     30  f81f		       85 ad		      STA	yGain
     31  f821		       85 ac		      STA	xLoss
     32  f823
     33  f823		       a9 86		      LDA	#WCOLU
     34  f825		       85 b3		      STA	wallColour
     35  f827		       a9 82		      LDA	#SCOLU
     36  f829		       85 b4		      STA	shadowColour
------- FILE main.asm
     21  f82b
     22  f82b		       a9 02		      LDA	#VSYNC_SET
     23  f82d
     24  f82d				   screenStart
     25  f82d
     26  f82d							; Start vsync (3 scanlines)
     27  f82d		       85 00		      STA	VSYNC
     28  f82f
     29  f82f		       85 02		      STA	WSYNC
     30  f831		       85 02		      STA	WSYNC
     31  f833		       a9 00		      LDA	#NULL
     32  f835		       85 02		      STA	WSYNC
     33  f837
     34  f837		       85 00		      STA	VSYNC
     35  f839
     36  f839							; Render everything (12 scanlines)
     37  f839
------- FILE walrend.asm LEVEL 2 PASS 2
      0  f839					      INCLUDE	"walrend.asm"	; 6 scanlines
      1  f839							; VePseu's wall renderer
      2  f839
      3  f839		       a4 a9		      LDY	playerPos	; 3 cycles
      4  f83b
------- FILE r_layers/layer0.asm LEVEL 3 PASS 2
      0  f83b					      INCLUDE	"r_layers/layer0.asm"	; 86 cycles
      1  f83b							; Peripheral vision rendering (86 cycles)
      0  f83b					      X_POS_LOS		; 23 cycles
      1  f83b
      2  f83b		       98		      TYA
      3  f83c		       18		      CLC
      4  f83d		       65 ac		      ADC	xLoss
      5  f83f		       38		      SEC
      6  f840		       e5 ab		      SBC	xGain
      7  f842		       a8		      TAY
      8  f843
      3  f843		       b1 bc		      LDA	(mapPtr),Y
      4  f845		       29 80		      AND	#LAYER0_AND_0
      5  f847		       85 99		      STA	shadow1a
      6  f849
      7  f849		       98		      TYA		; Move twice the amount of a normal X_POS_GAIN
      8  f84a		       18		      CLC
      9  f84b		       65 ab		      ADC	xGain
     10  f84d		       65 ab		      ADC	xGain
     11  f84f		       38		      SEC
     12  f850		       e5 ac		      SBC	xLoss
     13  f852		       e5 ac		      SBC	xLoss
     14  f854		       a8		      TAY
     15  f855
     16  f855		       b1 bc		      LDA	(mapPtr),Y
     17  f857		       29 02		      AND	#LAYER0_AND_1
     18  f859		       85 9d		      STA	shadow1e
------- FILE walrend.asm
      6  f85b
------- FILE r_layers/layer1.asm LEVEL 3 PASS 2
      0  f85b					      INCLUDE	"r_layers/layer1.asm"	; 86 cycles
      1  f85b							; First layer of rendering (86 cycles)
      2  f85b
      0  f85b					      Y_POS_ADV		; 14 cycles
      1  f85b
      2  f85b		       98		      TYA
      3  f85c		       18		      CLC
      4  f85d		       65 ad		      ADC	yGain
      5  f85f		       38		      SEC
      6  f860		       e5 ae		      SBC	yLoss
      7  f862		       a8		      TAY
      8  f863
      4  f863
      5  f863		       b1 bc		      LDA	(mapPtr),Y
      6  f865		       85 9c		      STA	shadow1d
      7  f867		       05 9d		      ORA	shadow1e
      8  f869		       25 03		      AND	LAYER1_AND_1
      9  f86b		       85 9d		      STA	shadow1e
     10  f86d
      0  f86d					      X_POS_LOS		; 26 cycles
      1  f86d
      2  f86d		       98		      TYA
      3  f86e		       18		      CLC
      4  f86f		       65 ac		      ADC	xLoss
      5  f871		       38		      SEC
      6  f872		       e5 ab		      SBC	xGain
      7  f874		       a8		      TAY
      8  f875
     12  f875		       b1 bc		      LDA	(mapPtr),Y
     13  f877		       85 80		      STA	wall1
     14  f879
      0  f879					      X_POS_LOS		; 23 cycles
      1  f879
      2  f879		       98		      TYA
      3  f87a		       18		      CLC
      4  f87b		       65 ac		      ADC	xLoss
      5  f87d		       38		      SEC
      6  f87e		       e5 ab		      SBC	xGain
      7  f880		       a8		      TAY
      8  f881
     16  f881		       b1 bc		      LDA	(mapPtr),Y
     17  f883		       aa		      TAX
     18  f884		       05 99		      ORA	shadow1a
     19  f886		       85 99		      STA	shadow1a
     20  f888		       8a		      TXA
     21  f889		       25 03		      AND	LAYER1_AND_0
     22  f88b		       85 9a		      STA	shadow1b
------- FILE walrend.asm
      8  f88d
------- FILE r_layers/layer2.asm LEVEL 3 PASS 2
      0  f88d					      INCLUDE	"r_layers/layer2.asm"	; 148 cycles
      1  f88d							; Second Layer (148 cycles)
      2  f88d
      0  f88d					      Y_POS_ADV		; 14 cycles
      1  f88d
      2  f88d		       98		      TYA
      3  f88e		       18		      CLC
      4  f88f		       65 ad		      ADC	yGain
      5  f891		       38		      SEC
      6  f892		       e5 ae		      SBC	yLoss
      7  f894		       a8		      TAY
      8  f895
      4  f895
      0  f895					      X_POS_LOS		; 25 cycles
      1  f895
      2  f895		       98		      TYA
      3  f896		       18		      CLC
      4  f897		       65 ac		      ADC	xLoss
      5  f899		       38		      SEC
      6  f89a		       e5 ab		      SBC	xGain
      7  f89c		       a8		      TAY
      8  f89d
      6  f89d		       b1 bc		      LDA	(mapPtr),Y
      7  f89f		       aa		      TAX
      8  f8a0		       29 e0		      AND	#LAYER2_AND_0
      9  f8a2		       85 8f		      STA	shadow2aa
     10  f8a4		       8a		      TXA
     11  f8a5		       29 fc		      AND	#LAYER2_AND_1
     12  f8a7		       85 9e		      STA	shadow2ab
     13  f8a9
      0  f8a9					      X_POS_GAN		; 25 cycles
      1  f8a9
      2  f8a9		       98		      TYA
      3  f8aa		       18		      CLC
      4  f8ab		       65 ab		      ADC	xGain
      5  f8ad		       38		      SEC
      6  f8ae		       e5 ac		      SBC	xLoss
      7  f8b0		       a8		      TAY
      8  f8b1
     15  f8b1		       b1 bc		      LDA	(mapPtr),Y
     16  f8b3		       aa		      TAX
     17  f8b4		       85 85		      STA	wall2a
     18  f8b6		       29 03		      AND	#LAYER2_AND_2
     19  f8b8		       85 86		      STA	wall2b
     20  f8ba		       8a		      TXA
     21  f8bb		       29 04		      AND	#LAYER2_AND_3
     22  f8bd		       85 90		      STA	shadow2ba
     23  f8bf		       8a		      TXA
     24  f8c0		       29 0c		      AND	#LAYER2_AND_4
     25  f8c2		       85 9f		      STA	shadow2bb
     26  f8c4
      0  f8c4					      X_POS_GAN		; 31 cycles
      1  f8c4
      2  f8c4		       98		      TYA
      3  f8c5		       18		      CLC
      4  f8c6		       65 ab		      ADC	xGain
      5  f8c8		       38		      SEC
      6  f8c9		       e5 ac		      SBC	xLoss
      7  f8cb		       a8		      TAY
      8  f8cc
     28  f8cc		       b1 bc		      LDA	(mapPtr),Y
     29  f8ce		       aa		      TAX
     30  f8cf		       29 fc		      AND	#LAYER2_AND_5
     31  f8d1		       05 86		      ORA	wall2b
     32  f8d3		       85 86		      STA	wall2b
     33  f8d5		       8a		      TXA
     34  f8d6		       85 87		      STA	wall2c
     35  f8d8
      0  f8d8					      X_POS_GAN		; 28 cycles
      1  f8d8
      2  f8d8		       98		      TYA
      3  f8d9		       18		      CLC
      4  f8da		       65 ab		      ADC	xGain
      5  f8dc		       38		      SEC
      6  f8dd		       e5 ac		      SBC	xLoss
      7  f8df		       a8		      TAY
      8  f8e0
     37  f8e0		       b1 bc		      LDA	(mapPtr),Y
     38  f8e2		       aa		      TAX
     39  f8e3		       85 88		      STA	wall2d
     40  f8e5		       85 89		      STA	wall2e
     41  f8e7		       29 80		      AND	#LAYER2_AND_7
     42  f8e9		       85 91		      STA	shadow2ca
     43  f8eb		       8a		      TXA
     44  f8ec		       29 c0		      AND	#LAYER2_AND_8
     45  f8ee		       85 a0		      STA	shadow2cb
     46  f8f0
      0  f8f0					      X_POS_GAN		; 25 cycles
      1  f8f0
      2  f8f0		       98		      TYA
      3  f8f1		       18		      CLC
      4  f8f2		       65 ab		      ADC	xGain
      5  f8f4		       38		      SEC
      6  f8f5		       e5 ac		      SBC	xLoss
      7  f8f7		       a8		      TAY
      8  f8f8
     48  f8f8		       b1 bc		      LDA	(mapPtr),Y
     49  f8fa		       aa		      TAX
     50  f8fb		       29 01		      AND	#LAYER2_AND_9
     51  f8fd		       85 92		      STA	shadow2da
     52  f8ff		       8a		      TXA
     53  f900		       29 0f		      AND	#LAYER2_AND_A
     54  f902		       85 a1		      STA	shadow2db
     55  f904		       8a		      TXA
     56  f905		       29 03		      AND	#LAYER2_AND_B
     57  f907		       85 93		      STA	shadow2ea
     58  f909		       8a		      TXA
     59  f90a		       29 03		      AND	#LAYER2_AND_C
     60  f90c		       85 a2		      STA	shadow2eb
------- FILE walrend.asm
     10  f90e
------- FILE r_layers/layer3.asm LEVEL 3 PASS 2
      0  f90e					      INCLUDE	"r_layers/layer3.asm"	; 182 cycles
      1  f90e							; Render the third layer (it's really ugly)
      2  f90e
------- FILE include/ands_3.h LEVEL 4 PASS 2
      0  f90e					      INCLUDE	"include/ands_3.h"
      1  f90e		       00 80	   AND_W3S1P1 =	%10000000
      2  f90e		       00 c0	   AND_W3S2P1 =	%11000000
      3  f90e
      4  f90e		       00 fc	   AND_W3S0P1 =	%11111100
      5  f90e		       00 02	   AND_W3S1P2 =	%00000010
      6  f90e		       00 03	   AND_W3S2P2 =	%00000011
      7  f90e
      8  f90e		       00 03	   AND_W3S0P2 =	%00000011
      9  f90e		       00 0f	   AND_W3S0P3 =	%00001111
     10  f90e		       00 10	   AND_W3S1P3 =	%00010000
     11  f90e		       00 30	   AND_W3S2P3 =	%00110000
     12  f90e
     13  f90e		       00 f0	   AND_W3S0P4 =	%11110000
     14  f90e		       00 30	   AND_W3S0P5 =	%00110000
     15  f90e
     16  f90e		       00 c0	   AND_W3S0P6 =	%11000000
     17  f90e		       00 f0	   AND_W3S0P7 =	%11110000
     18  f90e		       00 20	   AND_W3S1P4 =	%00100000
     19  f90e		       00 30	   AND_W3S2P4 =	%00110000
     20  f90e
     21  f90e		       00 0f	   AND_W3S0P8 =	%00001111
     22  f90e		       00 03	   AND_W3S0P9 =	%00000011
     23  f90e		       00 10	   AND_W3S1P5 =	%00010000
     24  f90e		       00 30	   AND_W3S2P5 =	%00110000
     25  f90e
     26  f90e		       00 02	   AND_W3S1P6 =	%00000010
     27  f90e		       00 03	   AND_W3S2P6 =	%00000011
------- FILE r_layers/layer3.asm
      4  f90e
      0  f90e					      Y_POS_ADV
      1  f90e
      2  f90e		       98		      TYA
      3  f90f		       18		      CLC
      4  f910		       65 ad		      ADC	yGain
      5  f912		       38		      SEC
      6  f913		       e5 ae		      SBC	yLoss
      7  f915		       a8		      TAY
      8  f916
      6  f916
      0  f916					      X_POS_GAN
      1  f916
      2  f916		       98		      TYA
      3  f917		       18		      CLC
      4  f918		       65 ab		      ADC	xGain
      5  f91a		       38		      SEC
      6  f91b		       e5 ac		      SBC	xLoss
      7  f91d		       a8		      TAY
      8  f91e
      8  f91e		       b1 bc		      LDA	(mapPtr),Y
      9  f920		       29 03		      AND	#AND_W3S2P6
     10  f922		       85 a7		      STA	shadow3eb
     11  f924		       29 02		      AND	#AND_W3S1P6
     12  f926		       85 98		      STA	shadow3ea
     13  f928
      0  f928					      X_POS_LOS
      1  f928
      2  f928		       98		      TYA
      3  f929		       18		      CLC
      4  f92a		       65 ac		      ADC	xLoss
      5  f92c		       38		      SEC
      6  f92d		       e5 ab		      SBC	xGain
      7  f92f		       a8		      TAY
      8  f930
     15  f930		       b1 bc		      LDA	(mapPtr),Y
     16  f932		       aa		      TAX
     17  f933		       29 0f		      AND	#AND_W3S0P8
     18  f935		       85 8d		      STA	wall3d
     19  f937		       29 03		      AND	#AND_W3S0P9
     20  f939		       85 8e		      STA	wall3e
     21  f93b		       8a		      TXA
     22  f93c		       29 30		      AND	#AND_W3S2P5
     23  f93e		       85 a6		      STA	shadow3db
     24  f940		       29 10		      AND	#AND_W3S1P5
     25  f942		       85 97		      STA	shadow3da
     26  f944
      0  f944					      X_POS_LOS
      1  f944
      2  f944		       98		      TYA
      3  f945		       18		      CLC
      4  f946		       65 ac		      ADC	xLoss
      5  f948		       38		      SEC
      6  f949		       e5 ab		      SBC	xGain
      7  f94b		       a8		      TAY
      8  f94c
     28  f94c		       b1 bc		      LDA	(mapPtr),Y
     29  f94e		       aa		      TAX
     30  f94f		       29 f0		      AND	#AND_W3S0P7
     31  f951		       05 8d		      ORA	wall3d
     32  f953		       85 8d		      STA	wall3d
     33  f955		       29 c0		      AND	#AND_W3S0P6
     34  f957		       85 8c		      STA	wall3c
     35  f959		       8a		      TXA
     36  f95a		       29 30		      AND	#AND_W3S2P4
     37  f95c		       85 a5		      STA	shadow3cb
     38  f95e		       29 20		      AND	#AND_W3S1P4
     39  f960		       85 96		      STA	shadow3ca
     40  f962
      0  f962					      X_POS_LOS
      1  f962
      2  f962		       98		      TYA
      3  f963		       18		      CLC
      4  f964		       65 ac		      ADC	xLoss
      5  f966		       38		      SEC
      6  f967		       e5 ab		      SBC	xGain
      7  f969		       a8		      TAY
      8  f96a
     42  f96a		       b1 bc		      LDA	(mapPtr),Y
     43  f96c		       29 f0		      AND	#AND_W3S0P4
     44  f96e		       85 8b		      STA	wall3b
     45  f970		       29 30		      AND	#AND_W3S0P5
     46  f972		       05 8c		      ORA	wall3c
     47  f974		       85 8c		      STA	wall3c
     48  f976
      0  f976					      X_POS_LOS
      1  f976
      2  f976		       98		      TYA
      3  f977		       18		      CLC
      4  f978		       65 ac		      ADC	xLoss
      5  f97a		       38		      SEC
      6  f97b		       e5 ab		      SBC	xGain
      7  f97d		       a8		      TAY
      8  f97e
     50  f97e		       b1 bc		      LDA	(mapPtr),Y
     51  f980		       aa		      TAX
     52  f981		       29 0f		      AND	#AND_W3S0P3
     53  f983		       05 8b		      ORA	wall3b
     54  f985		       85 8b		      STA	wall3b
     55  f987		       29 03		      AND	#AND_W3S0P2
     56  f989		       85 8a		      STA	wall3a
     57  f98b		       8a		      TXA
     58  f98c		       29 30		      AND	#AND_W3S2P3
     59  f98e		       85 a4		      STA	shadow3bb
     60  f990		       29 10		      AND	#AND_W3S1P3
     61  f992		       85 95		      STA	shadow3ba
     62  f994
      0  f994					      X_POS_LOS
      1  f994
      2  f994		       98		      TYA
      3  f995		       18		      CLC
      4  f996		       65 ac		      ADC	xLoss
      5  f998		       38		      SEC
      6  f999		       e5 ab		      SBC	xGain
      7  f99b		       a8		      TAY
      8  f99c
     64  f99c		       b1 bc		      LDA	(mapPtr),Y
     65  f99e		       aa		      TAX
     66  f99f		       29 fc		      AND	#AND_W3S0P1
     67  f9a1		       05 8a		      ORA	wall3a
     68  f9a3		       85 8a		      STA	wall3a
     69  f9a5		       8a		      TXA
     70  f9a6		       29 03		      AND	#AND_W3S2P2
     71  f9a8		       85 a3		      STA	shadow3ab
     72  f9aa		       29 fc		      AND	#AND_W3S0P1
     73  f9ac		       85 94		      STA	shadow3aa
     74  f9ae
      0  f9ae					      X_POS_LOS
      1  f9ae
      2  f9ae		       98		      TYA
      3  f9af		       18		      CLC
      4  f9b0		       65 ac		      ADC	xLoss
      5  f9b2		       38		      SEC
      6  f9b3		       e5 ab		      SBC	xGain
      7  f9b5		       a8		      TAY
      8  f9b6
     76  f9b6		       b1 bc		      LDA	(mapPtr),Y
     77  f9b8		       29 c0		      AND	#AND_W3S2P1
     78  f9ba		       05 a3		      ORA	shadow3ab
     79  f9bc		       85 a3		      STA	shadow3ab
     80  f9be		       29 80		      AND	#AND_W3S1P1
     81  f9c0		       05 94		      ORA	shadow3aa
     82  f9c2		       85 94		      STA	shadow3aa
------- FILE walrend.asm
     12  f9c4
     13  f9c4		       85 02		      STA	WSYNC	; By this time 6 scanlines have passed
------- FILE main.asm
     39  f9c6
------- FILE scrend.asm LEVEL 2 PASS 2
      0  f9c6					      INCLUDE	"scrend.asm"	; 6 Scanlines
      1  f9c6							; VePseu's screen renderer
      2  f9c6
      3  f9c6							; Remove the shadows incase only 1 wall is drawn (22 cycles)
      4  f9c6		       a5 99		      LDA	shadow1a
      5  f9c8		       05 80		      ORA	wall1
      6  f9ca		       45 80		      EOR	wall1
      7  f9cc		       85 99		      STA	shadow1a
      8  f9ce
      9  f9ce		       a5 9a		      LDA	shadow1b
     10  f9d0		       05 80		      ORA	wall1
     11  f9d2		       45 80		      EOR	wall1
     12  f9d4		       85 9a		      STA	shadow1b
     13  f9d6
     14  f9d6		       a5 9c		      LDA	shadow1d
     15  f9d8		       05 80		      ORA	wall1
     16  f9da		       45 80		      EOR	wall1
     17  f9dc		       85 9c		      STA	shadow1d
     18  f9de
     19  f9de		       a5 9d		      LDA	shadow1e
     20  f9e0		       05 80		      ORA	wall1
     21  f9e2		       45 80		      EOR	wall1
     22  f9e4		       85 9d		      STA	shadow1e
     23  f9e6
     24  f9e6		       a5 80		      LDA	wall1
     25  f9e8		       85 81		      STA	wall1+1
     26  f9ea		       85 82		      STA	wall1+2
     27  f9ec		       85 83		      STA	wall1+3
     28  f9ee		       85 84		      STA	wall1+4
     29  f9f0
     30  f9f0		       a2 00		      LDX	#NULL
     31  f9f2
     32  f9f2				   scrRendLoop
     33  f9f2
     34  f9f2		       b5 85		      LDA	wall2a,X
     35  f9f4		       15 80		      ORA	wall1,X
     36  f9f6		       95 85		      STA	wall2a,X
     37  f9f8
     38  f9f8		       b5 8f		      LDA	shadow2aa,X
     39  f9fa		       15 99		      ORA	shadow1a,X
     40  f9fc		       95 8f		      STA	shadow2aa,X
     41  f9fe
     42  f9fe		       b5 9e		      LDA	shadow2ab,X
     43  fa00		       15 99		      ORA	shadow1a,X
     44  fa02		       95 9e		      STA	shadow2ab,X
     45  fa04
     46  fa04		       b5 85		      LDA	wall2a,X
     47  fa06		       15 99		      ORA	shadow1a,X
     48  fa08		       55 99		      EOR	shadow1a,X
     49  fa0a		       95 85		      STA	wall2a,X
     50  fa0c
     51  fa0c		       b5 8f		      LDA	shadow2aa,X
     52  fa0e		       15 85		      ORA	wall2a,X
     53  fa10		       55 85		      EOR	wall2a,X
     54  fa12		       95 8f		      STA	shadow2aa,X
     55  fa14
     56  fa14		       b5 9e		      LDA	shadow2ab,X
     57  fa16		       15 85		      ORA	wall2a,X
     58  fa18		       55 85		      EOR	wall2a,X
     59  fa1a		       95 9e		      STA	shadow2ab,X
     60  fa1c
     61  fa1c		       e8		      INX
     62  fa1d		       e0 0a		      CPX	#10
     63  fa1f		       d0 d1		      BNE	scrRendLoop
------- FILE main.asm
     41  fa21
     42  fa21							; Pad!
     43  fa21
     44  fa21		       a2 00		      LDX	#INDEXINIT
     45  fa23
     46  fa23				   upperPad
     47  fa23		       85 02		      STA	WSYNC
     48  fa25
     49  fa25		       e8		      INX
     50  fa26		       e0 10		      CPX	#UPPAD_LIMIT
     51  fa28		       d0 f9		      BNE	upperPad
     52  fa2a
     53  fa2a		       85 02		      STA	WSYNC
     54  fa2c
     55  fa2c							; Draw everything
     56  fa2c
------- FILE dispkern.asm LEVEL 2 PASS 2
      0  fa2c					      INCLUDE	"dispkern.asm"	; 121 Scanlines
      1  fa2c							; VePseu's display kernel
      2  fa2c
      3  fa2c		       4c 87 fd 	      JMP	drawStart
      4  fa2f
      5  fa2f							;			  FILE/SUBROUTINE NAMING SCHEME:
      6  fa2f							;
      7  fa2f							; dc_w1s1.asm
      8  fa2f							; |   | |
      9  fa2f							; |   | |- The shadow variant it draws (A or B, 1 or 2)
     10  fa2f							; |   |
     11  fa2f							; |   |- The wall it draws
     12  fa2f							; |
     13  fa2f							; |- Draw-code identifier
     14  fa2f
------- FILE drawCode/dc_w1s1.asm LEVEL 3 PASS 2
      0  fa2f					      INCLUDE	"drawCode/dc_w1s1.asm"
      1  fa2f							; The draw code for the 1st wall and shadow
      2  fa2f
      3  fa2f				   dc_w1s1
      4  fa2f
      5  fa2f		       a2 00		      LDX	#INDEXINIT
      6  fa31		       a0 00		      LDY	#INDEXINIT
      7  fa33
      8  fa33				   _dc_w1s1_loop
      9  fa33		       85 02		      STA	WSYNC
     10  fa35		       a5 b3		      LDA	wallColour
     11  fa37		       85 08		      STA	COLUPF
     12  fa39		       a5 80		      LDA	wall1
     13  fa3b		       85 0e		      STA	PF1
     14  fa3d		       85 0f		      STA	PF2
      0  fa3f					      DELAY	28
      1  fa3f					      REPEAT	28/2 - 28%2
      2  fa3f		       ea		      NOP
      1  fa3f					      REPEND
      2  fa40		       ea		      NOP
      1  fa40					      REPEND
      2  fa41		       ea		      NOP
      1  fa41					      REPEND
      2  fa42		       ea		      NOP
      1  fa42					      REPEND
      2  fa43		       ea		      NOP
      1  fa43					      REPEND
      2  fa44		       ea		      NOP
      1  fa44					      REPEND
      2  fa45		       ea		      NOP
      1  fa45					      REPEND
      2  fa46		       ea		      NOP
      1  fa46					      REPEND
      2  fa47		       ea		      NOP
      1  fa47					      REPEND
      2  fa48		       ea		      NOP
      1  fa48					      REPEND
      2  fa49		       ea		      NOP
      1  fa49					      REPEND
      2  fa4a		       ea		      NOP
      1  fa4a					      REPEND
      2  fa4b		       ea		      NOP
      1  fa4b					      REPEND
      2  fa4c		       ea		      NOP
      3  fa4d					      REPEND
      4  fa4d
      5  fa4d				  -	      REPEAT	28%2
      6  fa4d				  -	      STA	DUMP
      7  fa4d					      REPEND
     16  fa4d		       85 0d		      STA	PF0
      0  fa4f					      DELAY	3
      1  fa4f				  -	      REPEAT	3/2 - 3%2
      2  fa4f				  -	      NOP
      3  fa4f					      REPEND
      4  fa4f
      5  fa4f					      REPEAT	3%2
      6  fa4f		       85 30		      STA	DUMP
      7  fa51					      REPEND
     18  fa51		       a9 00		      LDA	#NULL
     19  fa53		       85 0d		      STA	PF0
      0  fa55					      DELAY	10
      1  fa55					      REPEAT	10/2 - 10%2
      2  fa55		       ea		      NOP
      1  fa55					      REPEND
      2  fa56		       ea		      NOP
      1  fa56					      REPEND
      2  fa57		       ea		      NOP
      1  fa57					      REPEND
      2  fa58		       ea		      NOP
      1  fa58					      REPEND
      2  fa59		       ea		      NOP
      3  fa5a					      REPEND
      4  fa5a
      5  fa5a				  -	      REPEAT	10%2
      6  fa5a				  -	      STA	DUMP
      7  fa5a					      REPEND
     21  fa5a		       85 0f		      STA	PF2
     22  fa5c
     23  fa5c		       85 02		      STA	WSYNC
     24  fa5e		       a5 b4		      LDA	shadowColour
     25  fa60		       85 08		      STA	COLUPF
     26  fa62		       a5 99		      LDA	shadow1a
     27  fa64		       39 00 f0 	      AND	and_1a,Y
     28  fa67		       85 0e		      STA	PF1
     29  fa69		       a5 9a		      LDA	shadow1b
     30  fa6b		       39 0a f0 	      AND	and_1b,Y
     31  fa6e		       85 0f		      STA	PF2
      0  fa70					      DELAY	9
      1  fa70					      REPEAT	9/2 - 9%2
      2  fa70		       ea		      NOP
      1  fa70					      REPEND
      2  fa71		       ea		      NOP
      1  fa71					      REPEND
      2  fa72		       ea		      NOP
      3  fa73					      REPEND
      4  fa73
      5  fa73					      REPEAT	9%2
      6  fa73		       85 30		      STA	DUMP
      7  fa75					      REPEND
     33  fa75		       a5 9c		      LDA	shadow1d
     34  fa77		       39 14 f0 	      AND	and_1c,Y
     35  fa7a		       85 0e		      STA	PF1
     36  fa7c		       a5 9d		      LDA	shadow1e
     37  fa7e		       39 1e f0 	      AND	and_1d,Y
     38  fa81		       85 0f		      STA	PF2
     39  fa83
     40  fa83		       e8		      INX
     41  fa84		       e0 03		      CPX	#PIXH
     42  fa86		       d0 ab		      BNE	_dc_w1s1_loop
     43  fa88		       c8		      INY
     44  fa89
     45  fa89		       a2 00		      LDX	#NULL
     46  fa8b
     47  fa8b		       c0 0a		      CPY	#10
     48  fa8d		       d0 a4		      BNE	_dc_w1s1_loop
     49  fa8f
     50  fa8f		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w1s2.asm LEVEL 3 PASS 2
      0  fa90					      INCLUDE	"drawCode/dc_w1s2.asm"
      1  fa90							; The draw code for the 1st wall and it's second shadow
      2  fa90
      3  fa90				   dc_w1s2
      4  fa90
      5  fa90		       a2 00		      LDX	#INDEXINIT
      6  fa92		       a0 09		      LDY	#9
      7  fa94		       4c 9f fa 	      JMP	_dc_w1s2_start
      8  fa97
      9  fa97				   _dc_w1s2_loop
     10  fa97		       85 02		      STA	WSYNC
      0  fa99					      DELAY	12
      1  fa99					      REPEAT	12/2 - 12%2
      2  fa99		       ea		      NOP
      1  fa99					      REPEND
      2  fa9a		       ea		      NOP
      1  fa9a					      REPEND
      2  fa9b		       ea		      NOP
      1  fa9b					      REPEND
      2  fa9c		       ea		      NOP
      1  fa9c					      REPEND
      2  fa9d		       ea		      NOP
      1  fa9d					      REPEND
      2  fa9e		       ea		      NOP
      3  fa9f					      REPEND
      4  fa9f
      5  fa9f				  -	      REPEAT	12%2
      6  fa9f				  -	      STA	DUMP
      7  fa9f					      REPEND
     12  fa9f				   _dc_w1s2_start
     13  fa9f		       a5 b3		      LDA	wallColour
     14  faa1		       85 08		      STA	COLUPF
     15  faa3		       a5 80		      LDA	wall1
     16  faa5		       85 0e		      STA	PF1
     17  faa7		       85 0f		      STA	PF2
      0  faa9					      DELAY	16
      1  faa9					      REPEAT	16/2 - 16%2
      2  faa9		       ea		      NOP
      1  faa9					      REPEND
      2  faaa		       ea		      NOP
      1  faaa					      REPEND
      2  faab		       ea		      NOP
      1  faab					      REPEND
      2  faac		       ea		      NOP
      1  faac					      REPEND
      2  faad		       ea		      NOP
      1  faad					      REPEND
      2  faae		       ea		      NOP
      1  faae					      REPEND
      2  faaf		       ea		      NOP
      1  faaf					      REPEND
      2  fab0		       ea		      NOP
      3  fab1					      REPEND
      4  fab1
      5  fab1				  -	      REPEAT	16%2
      6  fab1				  -	      STA	DUMP
      7  fab1					      REPEND
     19  fab1		       85 0d		      STA	PF0
      0  fab3					      DELAY	3
      1  fab3				  -	      REPEAT	3/2 - 3%2
      2  fab3				  -	      NOP
      3  fab3					      REPEND
      4  fab3
      5  fab3					      REPEAT	3%2
      6  fab3		       85 30		      STA	DUMP
      7  fab5					      REPEND
     21  fab5		       a9 00		      LDA	#NULL
     22  fab7		       85 0d		      STA	PF0
      0  fab9					      DELAY	10
      1  fab9					      REPEAT	10/2 - 10%2
      2  fab9		       ea		      NOP
      1  fab9					      REPEND
      2  faba		       ea		      NOP
      1  faba					      REPEND
      2  fabb		       ea		      NOP
      1  fabb					      REPEND
      2  fabc		       ea		      NOP
      1  fabc					      REPEND
      2  fabd		       ea		      NOP
      3  fabe					      REPEND
      4  fabe
      5  fabe				  -	      REPEAT	10%2
      6  fabe				  -	      STA	DUMP
      7  fabe					      REPEND
     24  fabe		       85 0f		      STA	PF2
     25  fac0
     26  fac0		       85 02		      STA	WSYNC
     27  fac2		       a5 b4		      LDA	shadowColour
     28  fac4		       85 08		      STA	COLUPF
     29  fac6		       a5 99		      LDA	shadow1a
     30  fac8		       39 00 f0 	      AND	and_1a,Y
     31  facb		       85 0e		      STA	PF1
     32  facd		       a5 9a		      LDA	shadow1b
     33  facf		       39 0a f0 	      AND	and_1b,Y
     34  fad2		       85 0f		      STA	PF2
      0  fad4					      DELAY	9
      1  fad4					      REPEAT	9/2 - 9%2
      2  fad4		       ea		      NOP
      1  fad4					      REPEND
      2  fad5		       ea		      NOP
      1  fad5					      REPEND
      2  fad6		       ea		      NOP
      3  fad7					      REPEND
      4  fad7
      5  fad7					      REPEAT	9%2
      6  fad7		       85 30		      STA	DUMP
      7  fad9					      REPEND
     36  fad9		       a5 9c		      LDA	shadow1d
     37  fadb		       39 14 f0 	      AND	and_1c,Y
     38  fade		       85 0e		      STA	PF1
     39  fae0		       a5 9d		      LDA	shadow1e
     40  fae2		       39 1e f0 	      AND	and_1d,Y
     41  fae5		       85 0f		      STA	PF2
     42  fae7
     43  fae7		       e8		      INX
     44  fae8		       e0 03		      CPX	#PIXH
     45  faea		       d0 ab		      BNE	_dc_w1s2_loop
     46  faec		       88		      DEY
     47  faed
     48  faed		       a2 00		      LDX	#NULL
     49  faef
     50  faef		       c0 01		      CPY	#LOWSHAD_LIMIT
     51  faf1		       d0 a4		      BNE	_dc_w1s2_loop
     52  faf3
     53  faf3		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s1.asm LEVEL 3 PASS 2
      0  faf4					      INCLUDE	"drawCode/dc_w2s1.asm"
      1  faf4							; The second wall and it's first shadow
      2  faf4
      3  faf4				   dc_w2s1
      4  faf4
      5  faf4		       a2 00		      LDX	#INDEXINIT
      6  faf6		       4c 00 fb 	      JMP	_dc_w2s1_start
      7  faf9
      8  faf9				   _dc_w2s1_loop
      9  faf9		       85 02		      STA	WSYNC
      0  fafb					      DELAY	10	; Delay to keep the timing constant
      1  fafb					      REPEAT	10/2 - 10%2
      2  fafb		       ea		      NOP
      1  fafb					      REPEND
      2  fafc		       ea		      NOP
      1  fafc					      REPEND
      2  fafd		       ea		      NOP
      1  fafd					      REPEND
      2  fafe		       ea		      NOP
      1  fafe					      REPEND
      2  faff		       ea		      NOP
      3  fb00					      REPEND
      4  fb00
      5  fb00				  -	      REPEAT	10%2
      6  fb00				  -	      STA	DUMP
      7  fb00					      REPEND
     11  fb00				   _dc_w2s1_start
     12  fb00		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fb02		       85 08		      STA	COLUPF
     14  fb04		       a5 85		      LDA	wall2a
     15  fb06		       85 0e		      STA	PF1
     16  fb08		       a5 86		      LDA	wall2b
     17  fb0a		       85 0f		      STA	PF2
      0  fb0c					      DELAY	14
      1  fb0c					      REPEAT	14/2 - 14%2
      2  fb0c		       ea		      NOP
      1  fb0c					      REPEND
      2  fb0d		       ea		      NOP
      1  fb0d					      REPEND
      2  fb0e		       ea		      NOP
      1  fb0e					      REPEND
      2  fb0f		       ea		      NOP
      1  fb0f					      REPEND
      2  fb10		       ea		      NOP
      1  fb10					      REPEND
      2  fb11		       ea		      NOP
      1  fb11					      REPEND
      2  fb12		       ea		      NOP
      3  fb13					      REPEND
      4  fb13
      5  fb13				  -	      REPEAT	14%2
      6  fb13				  -	      STA	DUMP
      7  fb13					      REPEND
     19  fb13		       a5 87		      LDA	wall2c
     20  fb15		       85 0d		      STA	PF0
     21  fb17		       a5 88		      LDA	wall2d
     22  fb19		       85 0e		      STA	PF1
     23  fb1b		       a5 89		      LDA	wall2e
     24  fb1d		       85 0f		      STA	PF2
     25  fb1f		       a9 00		      LDA	#NULL
      0  fb21					      DELAY	2
      1  fb21					      REPEAT	2/2 - 2%2
      2  fb21		       ea		      NOP
      3  fb22					      REPEND
      4  fb22
      5  fb22				  -	      REPEAT	2%2
      6  fb22				  -	      STA	DUMP
      7  fb22					      REPEND
     27  fb22		       85 0f		      STA	PF2
     28  fb24		       85 0d		      STA	PF0
     29  fb26
     30  fb26		       85 02		      STA	WSYNC	; Draw the shadow
     31  fb28		       a5 b4		      LDA	shadowColour
     32  fb2a		       85 08		      STA	COLUPF
     33  fb2c		       a5 8f		      LDA	shadow2aa
     34  fb2e		       05 99		      ORA	shadow1a
     35  fb30		       85 0e		      STA	PF1
     36  fb32		       a5 90		      LDA	shadow2ba
     37  fb34		       05 9a		      ORA	shadow1b
     38  fb36		       85 0f		      STA	PF2
     39  fb38		       a5 91		      LDA	shadow2ca
     40  fb3a		       85 0d		      STA	PF0
     41  fb3c		       a5 92		      LDA	shadow2da
     42  fb3e		       05 9b		      ORA	shadow1c
     43  fb40		       85 0e		      STA	PF1
     44  fb42		       a5 93		      LDA	shadow2ea
     45  fb44		       05 9d		      ORA	shadow1e
     46  fb46		       85 0f		      STA	PF2
     47  fb48		       a9 00		      LDA	#NULL
     48  fb4a		       85 0d		      STA	PF0
     49  fb4c
     50  fb4c		       e8		      INX		; Loop for the rest of the pixel's height
     51  fb4d		       e0 03		      CPX	#PIXH
     52  fb4f		       d0 a8		      BNE	_dc_w2s1_loop
     53  fb51
      0  fb51					      DELAY	10	; Delay to keep timing constant
      1  fb51					      REPEAT	10/2 - 10%2
      2  fb51		       ea		      NOP
      1  fb51					      REPEND
      2  fb52		       ea		      NOP
      1  fb52					      REPEND
      2  fb53		       ea		      NOP
      1  fb53					      REPEND
      2  fb54		       ea		      NOP
      1  fb54					      REPEND
      2  fb55		       ea		      NOP
      3  fb56					      REPEND
      4  fb56
      5  fb56				  -	      REPEAT	10%2
      6  fb56				  -	      STA	DUMP
      7  fb56					      REPEND
     55  fb56
     56  fb56		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w2s2.asm LEVEL 3 PASS 2
      0  fb57					      INCLUDE	"drawCode/dc_w2s2.asm"
      1  fb57							; The draw code for the 1st wall and shadow
      2  fb57
      3  fb57				   dc_w2s2
      4  fb57
      5  fb57		       a2 00		      LDX	#INDEXINIT
      6  fb59		       4c 63 fb 	      JMP	_dc_w2s2_start
      7  fb5c
      8  fb5c				   _dc_w2s2_loop
      9  fb5c		       85 02		      STA	WSYNC
      0  fb5e					      DELAY	10
      1  fb5e					      REPEAT	10/2 - 10%2
      2  fb5e		       ea		      NOP
      1  fb5e					      REPEND
      2  fb5f		       ea		      NOP
      1  fb5f					      REPEND
      2  fb60		       ea		      NOP
      1  fb60					      REPEND
      2  fb61		       ea		      NOP
      1  fb61					      REPEND
      2  fb62		       ea		      NOP
      3  fb63					      REPEND
      4  fb63
      5  fb63				  -	      REPEAT	10%2
      6  fb63				  -	      STA	DUMP
      7  fb63					      REPEND
     11  fb63				   _dc_w2s2_start
     12  fb63		       a5 b3		      LDA	wallColour
     13  fb65		       85 08		      STA	COLUPF
     14  fb67		       a5 85		      LDA	wall2a
     15  fb69		       85 0e		      STA	PF1
     16  fb6b		       a5 86		      LDA	wall2b
     17  fb6d		       85 0f		      STA	PF2
      0  fb6f					      DELAY	14
      1  fb6f					      REPEAT	14/2 - 14%2
      2  fb6f		       ea		      NOP
      1  fb6f					      REPEND
      2  fb70		       ea		      NOP
      1  fb70					      REPEND
      2  fb71		       ea		      NOP
      1  fb71					      REPEND
      2  fb72		       ea		      NOP
      1  fb72					      REPEND
      2  fb73		       ea		      NOP
      1  fb73					      REPEND
      2  fb74		       ea		      NOP
      1  fb74					      REPEND
      2  fb75		       ea		      NOP
      3  fb76					      REPEND
      4  fb76
      5  fb76				  -	      REPEAT	14%2
      6  fb76				  -	      STA	DUMP
      7  fb76					      REPEND
     19  fb76		       a5 87		      LDA	wall2c
     20  fb78		       85 0d		      STA	PF0
     21  fb7a		       a5 88		      LDA	wall2d
     22  fb7c		       85 0e		      STA	PF1
     23  fb7e		       a5 89		      LDA	wall2e
     24  fb80		       85 0f		      STA	PF2
     25  fb82		       a9 00		      LDA	#NULL
      0  fb84					      DELAY	2
      1  fb84					      REPEAT	2/2 - 2%2
      2  fb84		       ea		      NOP
      3  fb85					      REPEND
      4  fb85
      5  fb85				  -	      REPEAT	2%2
      6  fb85				  -	      STA	DUMP
      7  fb85					      REPEND
     27  fb85		       85 0f		      STA	PF2
     28  fb87		       85 0d		      STA	PF0
     29  fb89
     30  fb89		       85 02		      STA	WSYNC
     31  fb8b		       a5 b4		      LDA	shadowColour
     32  fb8d		       85 08		      STA	COLUPF
     33  fb8f		       a5 9e		      LDA	shadow2ab
     34  fb91		       05 99		      ORA	shadow1a
     35  fb93		       85 0e		      STA	PF1
     36  fb95		       a5 9f		      LDA	shadow2bb
     37  fb97		       05 9a		      ORA	shadow1b
     38  fb99		       85 0f		      STA	PF2
     39  fb9b		       a5 a0		      LDA	shadow2cb
     40  fb9d		       85 0d		      STA	PF0
     41  fb9f		       a5 a1		      LDA	shadow2db
     42  fba1		       05 9b		      ORA	shadow1c
     43  fba3		       85 0e		      STA	PF1
     44  fba5		       a5 a2		      LDA	shadow2eb
     45  fba7		       05 9d		      ORA	shadow1e
     46  fba9		       85 0f		      STA	PF2
     47  fbab		       a9 00		      LDA	#NULL
     48  fbad		       85 0d		      STA	PF0
     49  fbaf
     50  fbaf		       e8		      INX
     51  fbb0		       e0 03		      CPX	#PIXH
     52  fbb2		       d0 a8		      BNE	_dc_w2s2_loop
     53  fbb4
     54  fbb4		       a2 00		      LDX	#NULL
     55  fbb6
      0  fbb6					      DELAY	8
      1  fbb6					      REPEAT	8/2 - 8%2
      2  fbb6		       ea		      NOP
      1  fbb6					      REPEND
      2  fbb7		       ea		      NOP
      1  fbb7					      REPEND
      2  fbb8		       ea		      NOP
      1  fbb8					      REPEND
      2  fbb9		       ea		      NOP
      3  fbba					      REPEND
      4  fbba
      5  fbba				  -	      REPEAT	8%2
      6  fbba				  -	      STA	DUMP
      7  fbba					      REPEND
     57  fbba
     58  fbba		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s1.asm LEVEL 3 PASS 2
      0  fbbb					      INCLUDE	"drawCode/dc_w3s1.asm"
      1  fbbb							; The draw code for the 1st wall and shadow
      2  fbbb
      3  fbbb				   dc_w3s1
      4  fbbb
      5  fbbb		       a2 00		      LDX	#INDEXINIT
      6  fbbd		       4c c7 fb 	      JMP	_dc_w3s1_start
      7  fbc0
      8  fbc0				   _dc_w3s1_loop
      9  fbc0		       85 02		      STA	WSYNC
      0  fbc2					      DELAY	10
      1  fbc2					      REPEAT	10/2 - 10%2
      2  fbc2		       ea		      NOP
      1  fbc2					      REPEND
      2  fbc3		       ea		      NOP
      1  fbc3					      REPEND
      2  fbc4		       ea		      NOP
      1  fbc4					      REPEND
      2  fbc5		       ea		      NOP
      1  fbc5					      REPEND
      2  fbc6		       ea		      NOP
      3  fbc7					      REPEND
      4  fbc7
      5  fbc7				  -	      REPEAT	10%2
      6  fbc7				  -	      STA	DUMP
      7  fbc7					      REPEND
     11  fbc7				   _dc_w3s1_start
     12  fbc7		       a5 b3		      LDA	wallColour
     13  fbc9		       85 08		      STA	COLUPF
     14  fbcb		       a5 8a		      LDA	wall3a
     15  fbcd		       85 0e		      STA	PF1
     16  fbcf		       a5 8b		      LDA	wall3b
     17  fbd1		       85 0f		      STA	PF2
      0  fbd3					      DELAY	14
      1  fbd3					      REPEAT	14/2 - 14%2
      2  fbd3		       ea		      NOP
      1  fbd3					      REPEND
      2  fbd4		       ea		      NOP
      1  fbd4					      REPEND
      2  fbd5		       ea		      NOP
      1  fbd5					      REPEND
      2  fbd6		       ea		      NOP
      1  fbd6					      REPEND
      2  fbd7		       ea		      NOP
      1  fbd7					      REPEND
      2  fbd8		       ea		      NOP
      1  fbd8					      REPEND
      2  fbd9		       ea		      NOP
      3  fbda					      REPEND
      4  fbda
      5  fbda				  -	      REPEAT	14%2
      6  fbda				  -	      STA	DUMP
      7  fbda					      REPEND
     19  fbda		       a5 8c		      LDA	wall3c
     20  fbdc		       85 0d		      STA	PF0
     21  fbde		       a5 8d		      LDA	wall3d
     22  fbe0		       85 0e		      STA	PF1
     23  fbe2		       a5 8e		      LDA	wall3e
     24  fbe4		       85 0f		      STA	PF2
     25  fbe6		       a9 00		      LDA	#NULL
      0  fbe8					      DELAY	2
      1  fbe8					      REPEAT	2/2 - 2%2
      2  fbe8		       ea		      NOP
      3  fbe9					      REPEND
      4  fbe9
      5  fbe9				  -	      REPEAT	2%2
      6  fbe9				  -	      STA	DUMP
      7  fbe9					      REPEND
     27  fbe9		       85 0f		      STA	PF2
     28  fbeb		       85 0d		      STA	PF0
     29  fbed
     30  fbed		       85 02		      STA	WSYNC
     31  fbef		       a5 b4		      LDA	shadowColour
     32  fbf1		       85 08		      STA	COLUPF
     33  fbf3		       a5 94		      LDA	shadow3aa
     34  fbf5		       05 9e		      ORA	shadow2ab
     35  fbf7		       85 0e		      STA	PF1
     36  fbf9		       a5 95		      LDA	shadow3ba
     37  fbfb		       05 9f		      ORA	shadow2bb
     38  fbfd		       85 0f		      STA	PF2
     39  fbff		       a5 96		      LDA	shadow3ca
     40  fc01		       05 a0		      ORA	shadow2cb
     41  fc03		       85 0d		      STA	PF0
     42  fc05		       a5 97		      LDA	shadow3da
     43  fc07		       05 a1		      ORA	shadow2db
     44  fc09		       85 0e		      STA	PF1
     45  fc0b		       a5 98		      LDA	shadow3ea
     46  fc0d		       05 a2		      ORA	shadow2eb
     47  fc0f		       85 0f		      STA	PF2
     48  fc11		       a9 00		      LDA	#NULL
     49  fc13		       85 0d		      STA	PF0
     50  fc15
     51  fc15		       e8		      INX
     52  fc16		       e0 03		      CPX	#PIXH
     53  fc18		       d0 a6		      BNE	_dc_w3s1_loop
     54  fc1a
     55  fc1a		       a2 00		      LDX	#NULL
     56  fc1c
      0  fc1c					      DELAY	5
      1  fc1c					      REPEAT	5/2 - 5%2
      2  fc1c		       ea		      NOP
      3  fc1d					      REPEND
      4  fc1d
      5  fc1d					      REPEAT	5%2
      6  fc1d		       85 30		      STA	DUMP
      7  fc1f					      REPEND
     58  fc1f
     59  fc1f		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w3s2.asm LEVEL 3 PASS 2
      0  fc20					      INCLUDE	"drawCode/dc_w3s2.asm"
      1  fc20							; The draw code for 3rd wall and it's second shadow
      2  fc20
      3  fc20				   dc_w3s2
      4  fc20
      5  fc20		       a2 00		      LDX	#INDEXINIT
      6  fc22		       4c 2c fc 	      JMP	_dc_w3s2_start
      7  fc25
      8  fc25				   _dc_w3s2_loop
      9  fc25		       85 02		      STA	WSYNC
      0  fc27					      DELAY	10	; Delay to keep the timing constant
      1  fc27					      REPEAT	10/2 - 10%2
      2  fc27		       ea		      NOP
      1  fc27					      REPEND
      2  fc28		       ea		      NOP
      1  fc28					      REPEND
      2  fc29		       ea		      NOP
      1  fc29					      REPEND
      2  fc2a		       ea		      NOP
      1  fc2a					      REPEND
      2  fc2b		       ea		      NOP
      3  fc2c					      REPEND
      4  fc2c
      5  fc2c				  -	      REPEAT	10%2
      6  fc2c				  -	      STA	DUMP
      7  fc2c					      REPEND
     11  fc2c				   _dc_w3s2_start
     12  fc2c		       a5 b3		      LDA	wallColour	; Draw the wall
     13  fc2e		       85 08		      STA	COLUPF
     14  fc30		       a5 8a		      LDA	wall3a
     15  fc32		       85 0e		      STA	PF1
     16  fc34		       a5 8b		      LDA	wall3b
     17  fc36		       85 0f		      STA	PF2
      0  fc38					      DELAY	14
      1  fc38					      REPEAT	14/2 - 14%2
      2  fc38		       ea		      NOP
      1  fc38					      REPEND
      2  fc39		       ea		      NOP
      1  fc39					      REPEND
      2  fc3a		       ea		      NOP
      1  fc3a					      REPEND
      2  fc3b		       ea		      NOP
      1  fc3b					      REPEND
      2  fc3c		       ea		      NOP
      1  fc3c					      REPEND
      2  fc3d		       ea		      NOP
      1  fc3d					      REPEND
      2  fc3e		       ea		      NOP
      3  fc3f					      REPEND
      4  fc3f
      5  fc3f				  -	      REPEAT	14%2
      6  fc3f				  -	      STA	DUMP
      7  fc3f					      REPEND
     19  fc3f		       a5 8c		      LDA	wall3c
     20  fc41		       85 0d		      STA	PF0
     21  fc43		       a5 8d		      LDA	wall3d
     22  fc45		       85 0e		      STA	PF1
     23  fc47		       a5 8e		      LDA	wall3e
     24  fc49		       85 0f		      STA	PF2
     25  fc4b		       a9 00		      LDA	#NULL
      0  fc4d					      DELAY	2
      1  fc4d					      REPEAT	2/2 - 2%2
      2  fc4d		       ea		      NOP
      3  fc4e					      REPEND
      4  fc4e
      5  fc4e				  -	      REPEAT	2%2
      6  fc4e				  -	      STA	DUMP
      7  fc4e					      REPEND
     27  fc4e		       85 0f		      STA	PF2
     28  fc50		       85 0d		      STA	PF0
     29  fc52
     30  fc52		       85 02		      STA	WSYNC	; Draw the shadow
     31  fc54		       a5 b4		      LDA	shadowColour
     32  fc56		       85 08		      STA	COLUPF
     33  fc58		       a5 a3		      LDA	shadow3ab
     34  fc5a		       05 9e		      ORA	shadow2ab
     35  fc5c		       85 0e		      STA	PF1
     36  fc5e		       a5 a4		      LDA	shadow3bb
     37  fc60		       05 9f		      ORA	shadow2bb
     38  fc62		       85 0f		      STA	PF2
     39  fc64		       a5 a5		      LDA	shadow3cb
     40  fc66		       05 a0		      ORA	shadow2cb
     41  fc68		       85 0d		      STA	PF0
     42  fc6a		       a5 a6		      LDA	shadow3db
     43  fc6c		       05 a1		      ORA	shadow2db
     44  fc6e		       85 0e		      STA	PF1
     45  fc70		       a5 a7		      LDA	shadow3eb
     46  fc72		       05 a2		      ORA	shadow2eb
     47  fc74		       85 0f		      STA	PF2
     48  fc76		       a9 00		      LDA	#NULL
     49  fc78		       85 0d		      STA	PF0
     50  fc7a
     51  fc7a		       e8		      INX
     52  fc7b		       e0 03		      CPX	#PIXH
     53  fc7d		       d0 a6		      BNE	_dc_w3s2_loop
     54  fc7f
      0  fc7f					      DELAY	7	; Delay to keep the timing constant
      1  fc7f					      REPEAT	7/2 - 7%2
      2  fc7f		       ea		      NOP
      1  fc7f					      REPEND
      2  fc80		       ea		      NOP
      3  fc81					      REPEND
      4  fc81
      5  fc81					      REPEAT	7%2
      6  fc81		       85 30		      STA	DUMP
      7  fc83					      REPEND
     56  fc83
     57  fc83		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/dc_w4s0.asm LEVEL 3 PASS 2
      0  fc84					      INCLUDE	"drawCode/dc_w4s0.asm"
      1  fc84							; The draw code for the 4th wall
      2  fc84
      3  fc84				   dc_w4s0
      4  fc84
      5  fc84		       a2 00		      LDX	#INDEXINIT
      6  fc86		       4c 90 fc 	      JMP	_dc_w4s0_start
      7  fc89
      8  fc89				   _dc_w4s0_loop
      9  fc89		       85 02		      STA	WSYNC
      0  fc8b					      DELAY	10
      1  fc8b					      REPEAT	10/2 - 10%2
      2  fc8b		       ea		      NOP
      1  fc8b					      REPEND
      2  fc8c		       ea		      NOP
      1  fc8c					      REPEND
      2  fc8d		       ea		      NOP
      1  fc8d					      REPEND
      2  fc8e		       ea		      NOP
      1  fc8e					      REPEND
      2  fc8f		       ea		      NOP
      3  fc90					      REPEND
      4  fc90
      5  fc90				  -	      REPEAT	10%2
      6  fc90				  -	      STA	DUMP
      7  fc90					      REPEND
     11  fc90				   _dc_w4s0_start
     12  fc90		       a5 b3		      LDA	wallColour
     13  fc92		       85 08		      STA	COLUPF
     14  fc94		       a9 ff		      LDA	#FULLWALL
     15  fc96		       45 a3		      EOR	shadow3ab
     16  fc98		       85 0e		      STA	PF1
     17  fc9a		       a9 ff		      LDA	#FULLWALL
     18  fc9c		       45 a4		      EOR	shadow3bb
     19  fc9e		       85 0f		      STA	PF2
      0  fca0					      DELAY	4
      1  fca0					      REPEAT	4/2 - 4%2
      2  fca0		       ea		      NOP
      1  fca0					      REPEND
      2  fca1		       ea		      NOP
      3  fca2					      REPEND
      4  fca2
      5  fca2				  -	      REPEAT	4%2
      6  fca2				  -	      STA	DUMP
      7  fca2					      REPEND
     21  fca2		       a9 ff		      LDA	#FULLWALL
     22  fca4		       45 a5		      EOR	shadow3cb
     23  fca6		       85 0d		      STA	PF0
     24  fca8		       a9 ff		      LDA	#FULLWALL
     25  fcaa		       45 a6		      EOR	shadow3db
     26  fcac		       85 0e		      STA	PF1
     27  fcae		       a9 ff		      LDA	#FULLWALL
     28  fcb0		       45 a7		      EOR	shadow3eb
     29  fcb2		       85 0f		      STA	PF2
     30  fcb4		       a9 00		      LDA	#NULL
      0  fcb6					      DELAY	2
      1  fcb6					      REPEAT	2/2 - 2%2
      2  fcb6		       ea		      NOP
      3  fcb7					      REPEND
      4  fcb7
      5  fcb7				  -	      REPEAT	2%2
      6  fcb7				  -	      STA	DUMP
      7  fcb7					      REPEND
     32  fcb7		       85 0f		      STA	PF2
     33  fcb9		       85 0d		      STA	PF0
     34  fcbb
     35  fcbb		       85 02		      STA	WSYNC
     36  fcbd		       a5 b4		      LDA	shadowColour
     37  fcbf		       85 08		      STA	COLUPF
     38  fcc1		       a5 a3		      LDA	shadow3ab
     39  fcc3		       05 9e		      ORA	shadow2ab
     40  fcc5		       85 0e		      STA	PF1
     41  fcc7		       a5 a4		      LDA	shadow3bb
     42  fcc9		       05 9f		      ORA	shadow2bb
     43  fccb		       85 0f		      STA	PF2
     44  fccd		       a5 a5		      LDA	shadow3cb
     45  fccf		       05 a0		      ORA	shadow2cb
     46  fcd1		       85 0d		      STA	PF0
     47  fcd3		       a5 a6		      LDA	shadow3db
     48  fcd5		       05 a1		      ORA	shadow2db
     49  fcd7		       85 0e		      STA	PF1
     50  fcd9		       a5 a7		      LDA	shadow3eb
     51  fcdb		       05 a2		      ORA	shadow2eb
     52  fcdd		       85 0f		      STA	PF2
     53  fcdf		       a9 00		      LDA	#NULL
     54  fce1		       85 0d		      STA	PF0
     55  fce3
     56  fce3		       e8		      INX
     57  fce4		       e0 03		      CPX	#PIXH
     58  fce6		       d0 a1		      BNE	_dc_w4s0_loop
     59  fce8
      0  fce8					      DELAY	7
      1  fce8					      REPEAT	7/2 - 7%2
      2  fce8		       ea		      NOP
      1  fce8					      REPEND
      2  fce9		       ea		      NOP
      3  fcea					      REPEND
      4  fcea
      5  fcea					      REPEAT	7%2
      6  fcea		       85 30		      STA	DUMP
      7  fcec					      REPEND
     61  fcec
     62  fcec		       60		      RTS
------- FILE dispkern.asm
------- FILE drawCode/mmDraw.asm LEVEL 3 PASS 2
      0  fced					      INCLUDE	"drawCode/mmDraw.asm"
      1  fced							; Draws the compass to the screen
      2  fced
------- FILE drawCode/mmRender.asm LEVEL 4 PASS 2
      0  fced					      INCLUDE	"drawCode/mmRender.asm"
      1  fced							; Render the minimap
      2  fced
      3  fced				   mmRender
      4  fced							; Set the colour of the player
      5  fced		       a9 cc		      LDA	#PLYRCOLU
      6  fcef		       85 08		      STA	COLUPF
      7  fcf1							; Set the colour of the map
      8  fcf1		       a9 0e		      LDA	#MAPCOLU
      9  fcf3		       85 06		      STA	COLUP0
     10  fcf5		       85 07		      STA	COLUP1
     11  fcf7							; Get the player's position and translate it into horizontal movement
     12  fcf7		       a9 08		      LDA	#%00001000
     13  fcf9		       18		      CLC
     14  fcfa		       38		      SEC
     15  fcfb		       e5 a9		      SBC	playerPos
     16  fcfd		       0a		      ASL
     17  fcfe		       0a		      ASL
     18  fcff		       0a		      ASL
     19  fd00		       0a		      ASL
     20  fd01		       85 b7		      STA	horzPos_plyr
     21  fd03
     22  fd03							; Set the map's position to the right values
     23  fd03		       a9 00		      LDA	#HADJ_A
     24  fd05		       85 b5		      STA	horzPos_mA
     25  fd07		       a9 10		      LDA	#HADJ_B
     26  fd09		       85 b6		      STA	horzPos_mB
     27  fd0b
     28  fd0b		       85 02		      STA	WSYNC
     29  fd0d		       a2 00		      LDX	#0
     30  fd0f
     31  fd0f				   _mmRender_wait1
     32  fd0f		       e8		      INX
     33  fd10		       e0 04		      CPX	#4
     34  fd12		       d0 fb		      BNE	_mmRender_wait1
     35  fd14		       ea		      NOP
     36  fd15		       ea		      NOP
     37  fd16		       85 10		      STA	RESP0
     38  fd18		       85 11		      STA	RESP1
     39  fd1a
     40  fd1a		       a5 a9		      LDA	playerPos
     41  fd1c
     42  fd1c		       85 02		      STA	WSYNC
     43  fd1e		       a2 00		      LDX	#INDEXINIT
     44  fd20
     45  fd20				   _mmRender_wait2
     46  fd20		       e8		      INX
     47  fd21		       e0 04		      CPX	#4
     48  fd23		       d0 fb		      BNE	_mmRender_wait2
      0  fd25					      DELAY	7
      1  fd25					      REPEAT	7/2 - 7%2
      2  fd25		       ea		      NOP
      1  fd25					      REPEND
      2  fd26		       ea		      NOP
      3  fd27					      REPEND
      4  fd27
      5  fd27					      REPEAT	7%2
      6  fd27		       85 30		      STA	DUMP
      7  fd29					      REPEND
     50  fd29		       85 14		      STA	RESBL
     51  fd2b
     52  fd2b		       60		      RTS
------- FILE drawCode/mmDraw.asm
      4  fd2c
      5  fd2c				   mmDraw
      6  fd2c		       a9 00		      LDA	#0
      7  fd2e
      8  fd2e		       20 ed fc 	      JSR	mmRender
      9  fd31
     10  fd31							; Load the player's position
     11  fd31
     12  fd31		       a5 b7		      LDA	horzPos_plyr
     13  fd33		       85 24		      STA	HMBL
     14  fd35		       a5 b5		      LDA	horzPos_mA
     15  fd37		       85 20		      STA	HMP0
     16  fd39		       a5 b6		      LDA	horzPos_mB
     17  fd3b		       85 21		      STA	HMP1
     18  fd3d
     19  fd3d		       a9 00		      LDA	#NULL
     20  fd3f		       85 1b		      STA	GRP0
     21  fd41		       85 1c		      STA	GRP1
     22  fd43		       85 2a		      STA	HMOVE
     23  fd45
     24  fd45		       a0 00		      LDY	#INDEXINIT
     25  fd47		       a6 a9		      LDX	playerPos
     26  fd49
     27  fd49				   _mmLoop
     28  fd49		       85 02		      STA	WSYNC
     29  fd4b
     30  fd4b		       b1 ba		      LDA	(miniMapPtr),Y
     31  fd4d		       85 1b		      STA	GRP0
     32  fd4f		       c8		      INY
     33  fd50		       b1 ba		      LDA	(miniMapPtr),Y
     34  fd52		       85 1c		      STA	GRP1
     35  fd54		       c8		      INY
     36  fd55
     37  fd55		       8a		      TXA
     38  fd56		       38		      SEC
     39  fd57		       e5 aa		      SBC	mapWidth
     40  fd59		       aa		      TAX
     41  fd5a		       29 f0		      AND	#%11110000
     42  fd5c
     43  fd5c		       c9 00		      CMP	#0
     44  fd5e		       d0 0a		      BNE	_noDraw
     45  fd60
     46  fd60		       a9 02		      LDA	#2
     47  fd62		       85 1f		      STA	ENABL
     48  fd64		       85 b8		      STA	drawingPlyr
     49  fd66		       a9 01		      LDA	#1
     50  fd68		       85 27		      STA	VDELBL
     51  fd6a
     52  fd6a				   _noDraw
     53  fd6a
     54  fd6a		       a5 b8		      LDA	drawingPlyr
     55  fd6c		       85 1f		      STA	ENABL
     56  fd6e		       a9 00		      LDA	#0
     57  fd70		       85 b8		      STA	drawingPlyr
     58  fd72		       c0 20		      CPY	#32
     59  fd74		       d0 d3		      BNE	_mmLoop
     60  fd76
     61  fd76		       a9 00		      LDA	#0
     62  fd78		       85 1f		      STA	ENABL
     63  fd7a
     64  fd7a		       85 02		      STA	WSYNC
     65  fd7c
     66  fd7c		       a9 00		      LDA	#NULL
     67  fd7e		       85 1b		      STA	GRP0
     68  fd80		       85 1c		      STA	GRP1
     69  fd82		       85 06		      STA	COLUP0
     70  fd84		       85 07		      STA	COLUP1
     71  fd86
     72  fd86		       60		      RTS
------- FILE dispkern.asm
     23  fd87
     24  fd87				   drawStart
     25  fd87		       a9 86		      LDA	#WCOLU
     26  fd89		       85 08		      STA	COLUPF
     27  fd8b
     28  fd8b		       20 2f fa 	      JSR	dc_w1s1	; Draw all the walls and their shadows!
     29  fd8e		       20 f4 fa 	      JSR	dc_w2s1
     30  fd91		       20 57 fb 	      JSR	dc_w2s2
     31  fd94		       20 bb fb 	      JSR	dc_w3s1
     32  fd97		       20 20 fc 	      JSR	dc_w3s2
     33  fd9a		       20 84 fc 	      JSR	dc_w4s0
     34  fd9d		       20 84 fc 	      JSR	dc_w4s0
     35  fda0		       20 20 fc 	      JSR	dc_w3s2
     36  fda3		       20 bb fb 	      JSR	dc_w3s1
     37  fda6		       20 57 fb 	      JSR	dc_w2s2
     38  fda9		       20 f4 fa 	      JSR	dc_w2s1
     39  fdac		       20 90 fa 	      JSR	dc_w1s2
     40  fdaf
     41  fdaf		       a9 00		      LDA	#NULL
     42  fdb1		       85 0e		      STA	PF1
     43  fdb3		       85 0f		      STA	PF2
     44  fdb5
     45  fdb5		       20 2c fd 	      JSR	mmDraw
     46  fdb8
     47  fdb8		       4c bb fd 	      JMP	stop
     48  fdbb
     49  fdbb				   stop
     50  fdbb
     51  fdbb
     52  fdbb		       85 09		      STA	COLUBK
------- FILE main.asm
     58  fdbd
     59  fdbd
     60  fdbd							; Start VBLANK
     61  fdbd
     62  fdbd		       a9 c2		      LDA	#VBLANK_SET
     63  fdbf		       85 01		      STA	VBLANK
     64  fdc1
     65  fdc1							; Process input
     66  fdc1
------- FILE input.asm LEVEL 2 PASS 2
      0  fdc1					      INCLUDE	"input.asm"
      1  fdc1							; VePseu's controller input
      2  fdc1
      3  fdc1		       85 02		      STA	WSYNC
      4  fdc3
      5  fdc3		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
      6  fdc6		       29 10		      AND	#FFORD
      7  fdc8		       c9 10		      CMP	#FFORD
      8  fdca		       f0 26		      BEQ	CIN1_NOPRESS
      9  fdcc
     10  fdcc		       a5 a9		      LDA	playerPos	; 15 cycles
     11  fdce		       38		      SEC
     12  fdcf		       e5 ae		      SBC	yLoss
     13  fdd1		       18		      CLC
     14  fdd2		       65 ad		      ADC	yGain
     15  fdd4		       a8		      TAY
     16  fdd5
     17  fdd5		       b1 bc		      LDA	(mapPtr),Y	; 10 or 11 cycles
     18  fdd7		       c9 00		      CMP	#NULL
     19  fdd9		       d0 1b		      BNE	CIN2
     20  fddb
     21  fddb		       a5 af		      LDA	fordPressed	; 5 or 6 cycles
     22  fddd		       c9 00		      CMP	#NULL
     23  fddf		       d0 09		      BNE	CIN1_WAIT
     24  fde1
     25  fde1		       84 a9		      STY	playerPos	; 9 cycles
     26  fde3		       a9 0f		      LDA	#CWAITCNT
     27  fde5		       85 af		      STA	fordPressed
     28  fde7		       4c f6 fd 	      JMP	CIN2
     29  fdea
     30  fdea				   CIN1_WAIT
      0  fdea					      DEA
      1  fdea		       38		      SEC
      2  fdeb		       e9 01		      SBC	#1
     32  fded		       85 af		      STA	fordPressed
     33  fdef		       4c f6 fd 	      JMP	CIN2
     34  fdf2
     35  fdf2				   CIN1_NOPRESS
     36  fdf2		       a9 00		      LDA	#NULL	; 5 cycles
     37  fdf4		       85 af		      STA	fordPressed
     38  fdf6
     39  fdf6				   CIN2
     40  fdf6		       85 02		      STA	WSYNC
     41  fdf8		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
     42  fdfb		       29 20		      AND	#FBACK
     43  fdfd		       c9 20		      CMP	#FBACK
     44  fdff		       f0 26		      BEQ	CIN2_NOPRESS
     45  fe01
     46  fe01		       a5 a9		      LDA	playerPos	; 15 cycles
     47  fe03		       38		      SEC
     48  fe04		       e5 ad		      SBC	yGain
     49  fe06		       18		      CLC
     50  fe07		       65 ae		      ADC	yLoss
     51  fe09		       a8		      TAY
     52  fe0a
     53  fe0a		       b1 bc		      LDA	(mapPtr),Y	; 10 or 11 cycles
     54  fe0c		       c9 00		      CMP	#NULL
     55  fe0e		       d0 1b		      BNE	CIN3
     56  fe10
     57  fe10		       a5 b0		      LDA	backPressed	; 5 or 6 cycles
     58  fe12		       c9 00		      CMP	#NULL
     59  fe14		       d0 09		      BNE	CIN2_WAIT
     60  fe16
     61  fe16		       84 a9		      STY	playerPos	; 9 cycles
     62  fe18		       a9 0f		      LDA	#CWAITCNT
     63  fe1a		       85 b0		      STA	backPressed
     64  fe1c		       4c 2b fe 	      JMP	CIN3
     65  fe1f
     66  fe1f				   CIN2_WAIT
      0  fe1f					      DEA
      1  fe1f		       38		      SEC
      2  fe20		       e9 01		      SBC	#1
     68  fe22		       85 b0		      STA	backPressed
     69  fe24		       4c 2b fe 	      JMP	CIN3
     70  fe27
     71  fe27				   CIN2_NOPRESS
     72  fe27		       a9 00		      LDA	#NULL	; 5 cycles
     73  fe29		       85 b0		      STA	backPressed
     74  fe2b
     75  fe2b				   CIN3
     76  fe2b		       85 02		      STA	WSYNC
     77  fe2d		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
     78  fe30		       29 80		      AND	#FLEFT
     79  fe32		       c9 80		      CMP	#FLEFT
     80  fe34		       f0 1c		      BEQ	CIN3_NOPRESS
     81  fe36
     82  fe36		       a5 b9		      LDA	direction
      0  fe38					      INA
      1  fe38		       18		      CLC
      2  fe39		       69 01		      ADC	#1
     84  fe3b		       29 03		      AND	#%00000011
     85  fe3d
     86  fe3d		       a6 b2		      LDX	rigtPressed
     87  fe3f		       e0 00		      CPX	#NULL
     88  fe41		       d0 09		      BNE	CIN3_WAIT
     89  fe43
     90  fe43		       85 b9		      STA	direction
     91  fe45
     92  fe45		       a9 0f		      LDA	#CWAITCNT	; 8 cycles
     93  fe47		       85 b2		      STA	rigtPressed
     94  fe49		       4c 56 fe 	      JMP	CIN4
     95  fe4c
     96  fe4c				   CIN3_WAIT
     97  fe4c		       ca		      DEX
     98  fe4d		       86 b2		      STX	rigtPressed
     99  fe4f		       4c 56 fe 	      JMP	CIN4
    100  fe52
    101  fe52				   CIN3_NOPRESS
    102  fe52		       a9 00		      LDA	#NULL	; 5 cycles
    103  fe54		       85 b2		      STA	rigtPressed
    104  fe56
    105  fe56				   CIN4
    106  fe56		       85 02		      STA	WSYNC
    107  fe58		       ad 80 02 	      LDA	SWCHA	; 9 or 10 cycles
    108  fe5b		       29 40		      AND	#FRIGT
    109  fe5d		       c9 40		      CMP	#FRIGT
    110  fe5f		       f0 1c		      BEQ	CIN4_NOPRESS
    111  fe61
    112  fe61		       a5 b9		      LDA	direction	; 10 cycles
      0  fe63					      DEA
      1  fe63		       38		      SEC
      2  fe64		       e9 01		      SBC	#1
    114  fe66		       29 03		      AND	#%00000011
    115  fe68
    116  fe68		       a6 b1		      LDX	leftPressed	; 7 or 8 cycles
    117  fe6a		       e0 00		      CPX	#NULL
    118  fe6c		       d0 09		      BNE	CIN4_WAIT
    119  fe6e
    120  fe6e		       85 b9		      STA	direction
    121  fe70
    122  fe70		       a9 0f		      LDA	#CWAITCNT	; 8 cycles
    123  fe72		       85 b1		      STA	leftPressed
    124  fe74		       4c 81 fe 	      JMP	CDIR1
    125  fe77
    126  fe77				   CIN4_WAIT
    127  fe77		       ca		      DEX
    128  fe78		       86 b1		      STX	leftPressed
    129  fe7a		       4c 81 fe 	      JMP	CDIR1
    130  fe7d
    131  fe7d				   CIN4_NOPRESS
    132  fe7d		       a9 00		      LDA	#NULL
    133  fe7f		       85 b1		      STA	leftPressed
    134  fe81
    135  fe81				   CDIR1
    136  fe81		       85 02		      STA	WSYNC
    137  fe83		       a5 b9		      LDA	direction
    138  fe85		       c9 00		      CMP	#DNORTH
    139  fe87		       d0 16		      BNE	CDIR2
    140  fe89
    141  fe89		       a5 aa		      LDA	mapWidth
    142  fe8b		       85 ae		      STA	yLoss
    143  fe8d		       a9 01		      LDA	#ONE
    144  fe8f		       85 ab		      STA	xGain
    145  fe91		       a9 86		      LDA	#WCOLU
    146  fe93		       85 b3		      STA	wallColour
    147  fe95		       a9 82		      LDA	#SCOLU
    148  fe97		       85 b4		      STA	shadowColour
    149  fe99		       a9 00		      LDA	#NULL
    150  fe9b		       85 ad		      STA	yGain
    151  fe9d		       85 ac		      STA	xLoss
    152  fe9f
    153  fe9f				   CDIR2
    154  fe9f		       a5 b9		      LDA	direction
    155  fea1		       c9 02		      CMP	#DSOUTH
    156  fea3		       d0 16		      BNE	CDIR3
    157  fea5
    158  fea5		       a5 aa		      LDA	mapWidth
    159  fea7		       85 ad		      STA	yGain
    160  fea9		       a9 01		      LDA	#ONE
    161  feab		       85 ac		      STA	xLoss
    162  fead		       a9 86		      LDA	#WCOLU
    163  feaf		       85 b3		      STA	wallColour
    164  feb1		       a9 82		      LDA	#SCOLU
    165  feb3		       85 b4		      STA	shadowColour
    166  feb5		       a9 00		      LDA	#NULL
    167  feb7		       85 ae		      STA	yLoss
    168  feb9		       85 ab		      STA	xGain
    169  febb
    170  febb				   CDIR3
    171  febb		       a5 b9		      LDA	direction
    172  febd		       c9 01		      CMP	#DWEST
    173  febf		       d0 16		      BNE	CDIR4
    174  fec1
    175  fec1		       a5 aa		      LDA	mapWidth
    176  fec3		       85 ab		      STA	xGain
    177  fec5		       a9 01		      LDA	#ONE
    178  fec7		       85 ad		      STA	yGain
    179  fec9		       a9 82		      LDA	#SCOLU
    180  fecb		       85 b3		      STA	wallColour
    181  fecd		       a9 86		      LDA	#WCOLU
    182  fecf		       85 b4		      STA	shadowColour
    183  fed1		       a9 00		      LDA	#NULL
    184  fed3		       85 ae		      STA	yLoss
    185  fed5		       85 ac		      STA	xLoss
    186  fed7
    187  fed7				   CDIR4
    188  fed7		       a5 b9		      LDA	direction
    189  fed9		       c9 03		      CMP	#DEAST
    190  fedb		       d0 16		      BNE	CEND
    191  fedd
    192  fedd		       a5 aa		      LDA	mapWidth
    193  fedf		       85 ac		      STA	xLoss
    194  fee1		       a9 01		      LDA	#ONE
    195  fee3		       85 ae		      STA	yLoss
    196  fee5		       a9 82		      LDA	#SCOLU
    197  fee7		       85 b3		      STA	wallColour
    198  fee9		       a9 86		      LDA	#WCOLU
    199  feeb		       85 b4		      STA	shadowColour
    200  feed		       a9 00		      LDA	#NULL
    201  feef		       85 ad		      STA	yGain
    202  fef1		       85 ab		      STA	xGain
    203  fef3
    204  fef3				   CEND
    205  fef3		       85 02		      STA	WSYNC
------- FILE main.asm
     68  fef5
     69  fef5							; Pad again
     70  fef5
     71  fef5		       a2 00		      LDX	#INDEXINIT
     72  fef7
     73  fef7				   lowerPad
     74  fef7		       85 02		      STA	WSYNC
     75  fef9
     76  fef9		       e8		      INX
     77  fefa		       e0 19		      CPX	#LOPAD_LIMIT
     78  fefc		       d0 f9		      BNE	lowerPad
     79  fefe
     80  fefe							; Get everything ready for VSYNC
     81  fefe
     82  fefe		       a9 00		      LDA	#NULL
     83  ff00		       85 01		      STA	VBLANK
     84  ff02		       a9 02		      LDA	#VSYNC_SET
     85  ff04		       85 02		      STA	WSYNC
     86  ff06		       4c 2d f8 	      JMP	screenStart
     87  ff09
     88  fffa					      ORG	$FFFA
     89  fffa
     90  fffa		       00 f8		      DC.W	start	; Something
     91  fffc		       00 f8		      DC.W	start	; Entrypoint
     92  fffe		       2d f8		      DC.W	screenStart	; Something else
     93  10000
     94  10000					       END
